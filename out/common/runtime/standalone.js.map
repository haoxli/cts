{"version":3,"sources":["../../../src/common/runtime/standalone.ts"],"names":["DefaultTestFileLoader","Logger","assert","optionEnabled","TestWorker","window","onbeforeunload","haveSomeResults","undefined","runnow","debug","logger","worker","resultsVis","document","getElementById","resultsJSON","makeTreeNodeHTML","tree","makeSubtreeHTML","makeCaseHTML","t","div","$","addClass","name","query","toString","runSubtree","rec","res","record","run","casetime","text","timems","toFixed","attr","status","logs","caselogs","empty","l","caselog","appendTo","on","console","log","toJSON","casehead","makeTreeNodeHeaderHTML","append","html","header","description","subtreeHTML","makeSubtreeChildrenHTML","children","values","runSubtreeFns","subtree","push","isLeaf","href","updateJSON","nodetitle","toHTML","replace","textContent","asJSON","loader","qs","URLSearchParams","location","search","getAll","length","url","protocol","host","pathname","map","q","join","history","replaceState","loadTree","el","root"],"mappings":"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","sourcesContent":["// Implements the standalone test runner (see also: /standalone/index.html).\n\nimport { DefaultTestFileLoader } from '../framework/file_loader.js';\nimport { Logger } from '../framework/logging/logger.js';\nimport { TestQuery } from '../framework/query/query.js';\nimport { TestTreeNode, TestSubtree, TestTreeLeaf } from '../framework/tree.js';\nimport { assert } from '../framework/util/util.js';\n\nimport { optionEnabled } from './helper/options.js';\nimport { TestWorker } from './helper/test_worker.js';\n\nwindow.onbeforeunload = () => {\n  // Prompt user before reloading if there are any results\n  return haveSomeResults ? false : undefined;\n};\n\nlet haveSomeResults = false;\n\nconst runnow = optionEnabled('runnow');\nconst debug = optionEnabled('debug');\n\nconst logger = new Logger(debug);\n\nconst worker = optionEnabled('worker') ? new TestWorker(debug) : undefined;\n\nconst resultsVis = document.getElementById('resultsVis')!;\nconst resultsJSON = document.getElementById('resultsJSON')!;\n\ntype RunSubtree = () => Promise<void>;\n\n// DOM generation\n\nfunction makeTreeNodeHTML(tree: TestTreeNode): [HTMLElement, RunSubtree] {\n  if ('children' in tree) {\n    return makeSubtreeHTML(tree);\n  } else {\n    return makeCaseHTML(tree);\n  }\n}\n\nfunction makeCaseHTML(t: TestTreeLeaf): [HTMLElement, RunSubtree] {\n  const div = $('<div>').addClass('testcase');\n\n  const name = t.query.toString();\n  const runSubtree = async () => {\n    haveSomeResults = true;\n    const [rec, res] = logger.record(name);\n    if (worker) {\n      await worker.run(rec, name);\n    } else {\n      await t.run(rec);\n    }\n\n    casetime.text(res.timems.toFixed(4) + ' ms');\n\n    div.attr('data-status', res.status);\n\n    if (res.logs) {\n      caselogs.empty();\n      for (const l of res.logs) {\n        const caselog = $('<div>').addClass('testcaselog').appendTo(caselogs);\n        $('<button>')\n          .addClass('testcaselogbtn')\n          .attr('alt', 'Log stack to console')\n          .attr('title', 'Log stack to console')\n          .appendTo(caselog)\n          .on('click', () => {\n            /* eslint-disable-next-line no-console */\n            console.log(l);\n          });\n        $('<pre>').addClass('testcaselogtext').appendTo(caselog).text(l.toJSON());\n      }\n    }\n  };\n\n  const casehead = makeTreeNodeHeaderHTML(t.query, undefined, runSubtree, true);\n  div.append(casehead);\n  const casetime = $('<div>').addClass('testcasetime').html('ms').appendTo(casehead);\n  const caselogs = $('<div>').addClass('testcaselogs').appendTo(div);\n\n  return [div[0], runSubtree];\n}\n\nfunction makeSubtreeHTML(t: TestSubtree): [HTMLElement, RunSubtree] {\n  const div = $('<div>').addClass('subtree');\n\n  const header = makeTreeNodeHeaderHTML(t.query, t.description, () => runSubtree(), false);\n  div.append(header);\n\n  const subtreeHTML = $('<div>').addClass('subtreechildren').appendTo(div);\n  const runSubtree = makeSubtreeChildrenHTML(subtreeHTML[0], t.children.values());\n\n  return [div[0], runSubtree];\n}\n\nfunction makeSubtreeChildrenHTML(div: HTMLElement, children: Iterable<TestTreeNode>): RunSubtree {\n  const runSubtreeFns: RunSubtree[] = [];\n  for (const subtree of children) {\n    const [subtreeHTML, runSubtree] = makeTreeNodeHTML(subtree);\n    div.append(subtreeHTML);\n    runSubtreeFns.push(runSubtree);\n  }\n\n  return async () => {\n    for (const runSubtree of runSubtreeFns) {\n      await runSubtree();\n    }\n  };\n}\n\nfunction makeTreeNodeHeaderHTML(\n  query: TestQuery,\n  description: string | undefined,\n  runSubtree: RunSubtree,\n  isLeaf: boolean\n): HTMLElement {\n  const div = $('<div>').addClass('nodeheader');\n\n  const href = `?${worker ? 'worker&' : ''}${debug ? 'debug&' : ''}q=${query.toString()}`;\n  $('<button>')\n    .addClass(isLeaf ? 'leafrun' : 'subtreerun')\n    .attr('alt', 'Run subtree')\n    .attr('title', 'Run subtree')\n    .on('click', async () => {\n      await runSubtree();\n      updateJSON();\n    })\n    .appendTo(div);\n  $('<a>')\n    .addClass('nodelink')\n    .attr('href', href)\n    .attr('alt', 'Open')\n    .attr('title', 'Open')\n    .appendTo(div);\n  const nodetitle = $('<div>').addClass('nodetitle').appendTo(div);\n  $('<span>').addClass('nodename').html(query.toHTML()).appendTo(nodetitle);\n  if (description) {\n    $('<div>')\n      .addClass('nodedescription')\n      .html(description.replace(/\\n/g, '<br>'))\n      .appendTo(nodetitle);\n  }\n  return div[0];\n}\n\nfunction updateJSON(): void {\n  resultsJSON.textContent = logger.asJSON(2);\n}\n\n(async () => {\n  const loader = new DefaultTestFileLoader();\n\n  // TODO: start populating page before waiting for everything to load?\n  const qs = new URLSearchParams(window.location.search).getAll('q');\n  if (qs.length === 0) {\n    qs.push('webgpu:*');\n  }\n\n  // Update the URL bar to match the exact current options.\n  {\n    let url = window.location.protocol + '//' + window.location.host + window.location.pathname;\n    url +=\n      '?' +\n      new URLSearchParams([\n        ['runnow', runnow ? '1' : '0'],\n        ['worker', worker ? '1' : '0'],\n        ['debug', debug ? '1' : '0'],\n      ]).toString() +\n      '&' +\n      qs.map(q => 'q=' + q).join('&');\n    window.history.replaceState(null, '', url);\n  }\n\n  assert(qs.length === 1, 'currently, there must be exactly one ?q=');\n  const tree = await loader.loadTree(qs[0]);\n\n  const [el, runSubtree] = makeSubtreeHTML(tree.root);\n  resultsVis.append(el);\n\n  if (runnow) {\n    runSubtree();\n  }\n})();\n"],"file":"standalone.js"}