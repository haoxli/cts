{"version":3,"sources":["../../../../src/common/framework/logging/log_message.ts"],"names":["extractImportantStackTrace","LogMessageWithStack","Error","constructor","name","ex","includeStack","message","stack","undefined","toJSON","m"],"mappings":";;;;AAAA,SAASA,0BAAT,QAA2C,kBAA3C;AAEA,OAAO,MAAMC,mBAAN,SAAkCC,KAAlC,CAAwC;AAC7CC,EAAAA,WAAW,CAACC,IAAD,EAAeC,EAAf,EAA0BC,YAAqB,GAAG,IAAlD,EAAwD;AACjE,UAAMD,EAAE,CAACE,OAAT;AAEA,SAAKH,IAAL,GAAYA,IAAZ;AACA,SAAKI,KAAL,GAAaF,YAAY,GAAGD,EAAE,CAACG,KAAN,GAAcC,SAAvC;AACD;;AAEDC,EAAAA,MAAM,GAAW;AACf,QAAIC,CAAC,GAAG,KAAKP,IAAL,GAAY,IAApB;;AACA,QAAI,KAAKI,KAAT,EAAgB;AACd;AACAG,MAAAA,CAAC,IAAIX,0BAA0B,CAAC,IAAD,CAA/B;AACD,KAHD,MAGO;AACLW,MAAAA,CAAC,IAAI,KAAKJ,OAAV;AACD;;AACD,WAAOI,CAAP;AACD;;AAjB4C","sourcesContent":["import { extractImportantStackTrace } from '../util/stack.js';\n\nexport class LogMessageWithStack extends Error {\n  constructor(name: string, ex: Error, includeStack: boolean = true) {\n    super(ex.message);\n\n    this.name = name;\n    this.stack = includeStack ? ex.stack : undefined;\n  }\n\n  toJSON(): string {\n    let m = this.name + ': ';\n    if (this.stack) {\n      // this.message is already included in this.stack\n      m += extractImportantStackTrace(this);\n    } else {\n      m += this.message;\n    }\n    return m;\n  }\n}\n"],"file":"log_message.js"}