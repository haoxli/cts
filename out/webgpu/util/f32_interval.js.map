{"version":3,"file":"f32_interval.js","names":["FP","toF32Interval","n","f32","toInterval","isF32Vector","v","isVector","toF32Vector","toVector","spanF32Intervals","intervals","spanIntervals","isF32Matrix","m","isMatrix","toF32Matrix","toMatrix","correctlyRoundedInterval","correctlyRoundedMatrix","absoluteErrorInterval","error_range","ulpInterval","numULP","absInterval","acosInterval","acoshIntervals","acoshAlternativeInterval","x","acoshPrimaryInterval","additionInterval","y","additionMatrixInterval","asinInterval","asinhInterval","atanInterval","atan2Interval","atanhInterval","ceilInterval","clampIntervals","clampMedianInterval","z","clampMinMaxInterval","cosInterval","coshInterval","crossInterval","degreesInterval","determinantInterval","distanceInterval","divisionInterval","dotInterval","expInterval","exp2Interval","faceForwardIntervals","floorInterval","fmaInterval","fractInterval","inverseSqrtInterval","ldexpInterval","e1","e2","lengthInterval","logInterval","log2Interval","maxInterval","minInterval","mixIntervals","mixImpreciseInterval","mixPreciseInterval","modfInterval","multiplicationInterval","multiplicationMatrixScalarInterval","mat","scalar","multiplicationScalarMatrixInterval","multiplicationMatrixMatrixInterval","mat_x","mat_y","multiplicationMatrixVectorInterval","multiplicationVectorMatrixInterval","negationInterval","normalizeInterval","powInterval","quantizeToF16Interval","radiansInterval","reflectInterval","refractInterval","i","s","r","remainderInterval","roundInterval","saturateInterval","signInterval","sinInterval","sinhInterval","smoothStepInterval","low","high","sqrtInterval","stepInterval","edge","subtractionInterval","subtractionMatrixInterval","tanInterval","tanhInterval","transposeInterval","truncInterval","unpack2x16floatInterval","unpack2x16snormInterval","unpack2x16unormInterval","unpack4x8snormInterval","unpack4x8unormInterval"],"sources":["../../../src/webgpu/util/f32_interval.ts"],"sourcesContent":["// This is a shim file with all the old/deprecated f32 API calls.\n// They currently just pass-through to the refactored FPContext implementation.\n// As CTS migrates over to directly calling the new API, these will be removed.\n\nimport { FPInterval, FPMatrix, FPVector, IntervalBounds, FP } from './floating_point.js';\n\n// Interfaces\n\nexport interface PointToInterval {\n  (x: number): FPInterval;\n}\n\nexport interface BinaryToInterval {\n  (x: number, y: number): FPInterval;\n}\n\nexport interface TernaryToInterval {\n  (x: number, y: number, z: number): FPInterval;\n}\n\nexport interface PointToVector {\n  (n: number): FPVector;\n}\n\nexport interface VectorToInterval {\n  (x: number[]): FPInterval;\n}\n\nexport interface VectorPairToInterval {\n  (x: number[], y: number[]): FPInterval;\n}\n\nexport interface VectorToVector {\n  (x: number[]): FPVector;\n}\n\nexport interface VectorPairToVector {\n  (x: number[], y: number[]): FPVector;\n}\n\nexport interface VectorScalarToVector {\n  (x: number[], y: number): FPVector;\n}\n\nexport interface ScalarVectorToVector {\n  (x: number, y: number[]): FPVector;\n}\n\nexport interface MatrixToScalar {\n  (m: number[][]): FPInterval;\n}\n\nexport interface MatrixToMatrix {\n  (m: number[][]): FPMatrix;\n}\n\nexport interface MatrixPairToMatrix {\n  (x: number[][], y: number[][]): FPMatrix;\n}\n\nexport interface MatrixScalarToMatrix {\n  (x: number[][], y: number): FPMatrix;\n}\n\nexport interface ScalarMatrixToMatrix {\n  (x: number, y: number[][]): FPMatrix;\n}\n\nexport interface MatrixVectorToVector {\n  (x: number[][], y: number[]): FPVector;\n}\n\nexport interface VectorMatrixToVector {\n  (x: number[], y: number[][]): FPVector;\n}\n\n// Containers\n\nexport type F32Vector = FPVector;\n\n// Utilities\n\nexport function toF32Interval(n: number | IntervalBounds | FPInterval): FPInterval {\n  return FP.f32.toInterval(n);\n}\n\nexport function isF32Vector(v: (number | IntervalBounds | FPInterval)[]): v is FPVector {\n  return FP.f32.isVector(v);\n}\n\nexport function toF32Vector(v: (number | IntervalBounds | FPInterval)[]): FPVector {\n  return FP.f32.toVector(v);\n}\n\nexport function spanF32Intervals(...intervals: FPInterval[]): FPInterval {\n  return FP.f32.spanIntervals(...intervals);\n}\n\nexport function isF32Matrix(\n  m: (number | IntervalBounds | FPInterval)[][] | FPVector[]\n): m is FPMatrix {\n  return FP.f32.isMatrix(m);\n}\n\nexport function toF32Matrix(m: (number | IntervalBounds | FPInterval)[][] | FPVector[]): FPMatrix {\n  return FP.f32.toMatrix(m);\n}\n\n// Accuracy Interval\n\nexport function correctlyRoundedInterval(n: number | FPInterval): FPInterval {\n  return FP.f32.correctlyRoundedInterval(n);\n}\n\nexport function correctlyRoundedMatrix(m: number[][]): FPMatrix {\n  return FP.f32.correctlyRoundedMatrix(m);\n}\n\nexport function absoluteErrorInterval(n: number, error_range: number): FPInterval {\n  return FP.f32.absoluteErrorInterval(n, error_range);\n}\n\nexport function ulpInterval(n: number, numULP: number): FPInterval {\n  return FP.f32.ulpInterval(n, numULP);\n}\n\nexport function absInterval(n: number): FPInterval {\n  return FP.f32.absInterval(n);\n}\n\nexport function acosInterval(n: number): FPInterval {\n  return FP.f32.acosInterval(n);\n}\n\nexport const acoshIntervals = FP.f32.acoshIntervals;\n\nexport function acoshAlternativeInterval(x: number | FPInterval): FPInterval {\n  return FP.f32.acoshAlternativeInterval(x);\n}\n\nexport function acoshPrimaryInterval(x: number | FPInterval): FPInterval {\n  return FP.f32.acoshPrimaryInterval(x);\n}\n\nexport function additionInterval(x: number | FPInterval, y: number | FPInterval): FPInterval {\n  return FP.f32.additionInterval(x, y);\n}\n\nexport function additionMatrixInterval(x: number[][], y: number[][]): FPMatrix {\n  return FP.f32.additionMatrixInterval(x, y);\n}\n\nexport function asinInterval(n: number): FPInterval {\n  return FP.f32.asinInterval(n);\n}\n\nexport function asinhInterval(n: number): FPInterval {\n  return FP.f32.asinhInterval(n);\n}\n\nexport function atanInterval(n: number | FPInterval): FPInterval {\n  return FP.f32.atanInterval(n);\n}\n\nexport function atan2Interval(y: number | FPInterval, x: number | FPInterval): FPInterval {\n  return FP.f32.atan2Interval(y, x);\n}\n\nexport function atanhInterval(n: number): FPInterval {\n  return FP.f32.atanhInterval(n);\n}\n\nexport function ceilInterval(n: number): FPInterval {\n  return FP.f32.ceilInterval(n);\n}\n\nexport const clampIntervals = FP.f32.clampIntervals;\n\nexport function clampMedianInterval(\n  x: number | FPInterval,\n  y: number | FPInterval,\n  z: number | FPInterval\n): FPInterval {\n  return FP.f32.clampMedianInterval(x, y, z);\n}\n\nexport function clampMinMaxInterval(\n  x: number | FPInterval,\n  y: number | FPInterval,\n  z: number | FPInterval\n): FPInterval {\n  return FP.f32.clampMinMaxInterval(x, y, z);\n}\n\nexport function cosInterval(n: number): FPInterval {\n  return FP.f32.cosInterval(n);\n}\n\nexport function coshInterval(n: number): FPInterval {\n  return FP.f32.coshInterval(n);\n}\n\nexport function crossInterval(x: number[], y: number[]): FPVector {\n  return FP.f32.crossInterval(x, y);\n}\n\nexport function degreesInterval(n: number): FPInterval {\n  return FP.f32.degreesInterval(n);\n}\n\nexport function determinantInterval(m: number[][]): FPInterval {\n  return FP.f32.determinantInterval(m);\n}\n\nexport function distanceInterval(x: number | number[], y: number | number[]): FPInterval {\n  return FP.f32.distanceInterval(x, y);\n}\n\nexport function divisionInterval(x: number | FPInterval, y: number | FPInterval): FPInterval {\n  return FP.f32.divisionInterval(x, y);\n}\n\nexport function dotInterval(x: number[] | FPInterval[], y: number[] | FPInterval[]): FPInterval {\n  return FP.f32.dotInterval(x, y);\n}\n\nexport function expInterval(x: number | FPInterval): FPInterval {\n  return FP.f32.expInterval(x);\n}\n\nexport function exp2Interval(x: number | FPInterval): FPInterval {\n  return FP.f32.exp2Interval(x);\n}\n\nexport function faceForwardIntervals(\n  x: number[],\n  y: number[],\n  z: number[]\n): (FPVector | undefined)[] {\n  return FP.f32.faceForwardIntervals(x, y, z);\n}\n\nexport function floorInterval(n: number): FPInterval {\n  return FP.f32.floorInterval(n);\n}\n\nexport function fmaInterval(x: number, y: number, z: number): FPInterval {\n  return FP.f32.fmaInterval(x, y, z);\n}\n\nexport function fractInterval(n: number): FPInterval {\n  return FP.f32.fractInterval(n);\n}\n\nexport function inverseSqrtInterval(n: number | FPInterval): FPInterval {\n  return FP.f32.inverseSqrtInterval(n);\n}\n\nexport function ldexpInterval(e1: number, e2: number): FPInterval {\n  return FP.f32.ldexpInterval(e1, e2);\n}\n\nexport function lengthInterval(n: number | FPInterval | number[] | FPVector): FPInterval {\n  return FP.f32.lengthInterval(n);\n}\n\nexport function logInterval(x: number | FPInterval): FPInterval {\n  return FP.f32.logInterval(x);\n}\n\nexport function log2Interval(x: number | FPInterval): FPInterval {\n  return FP.f32.log2Interval(x);\n}\n\nexport function maxInterval(x: number | FPInterval, y: number | FPInterval): FPInterval {\n  return FP.f32.maxInterval(x, y);\n}\n\nexport function minInterval(x: number | FPInterval, y: number | FPInterval): FPInterval {\n  return FP.f32.minInterval(x, y);\n}\n\nexport const mixIntervals = FP.f32.mixIntervals;\n\nexport function mixImpreciseInterval(x: number, y: number, z: number): FPInterval {\n  return FP.f32.mixImpreciseInterval(x, y, z);\n}\n\nexport function mixPreciseInterval(x: number, y: number, z: number): FPInterval {\n  return FP.f32.mixPreciseInterval(x, y, z);\n}\n\nexport function modfInterval(n: number): { fract: FPInterval; whole: FPInterval } {\n  return FP.f32.modfInterval(n);\n}\n\nexport function multiplicationInterval(x: number | FPInterval, y: number | FPInterval): FPInterval {\n  return FP.f32.multiplicationInterval(x, y);\n}\n\nexport function multiplicationMatrixScalarInterval(mat: number[][], scalar: number): FPMatrix {\n  return FP.f32.multiplicationMatrixScalarInterval(mat, scalar);\n}\n\nexport function multiplicationScalarMatrixInterval(scalar: number, mat: number[][]): FPMatrix {\n  return FP.f32.multiplicationScalarMatrixInterval(scalar, mat);\n}\n\nexport function multiplicationMatrixMatrixInterval(mat_x: number[][], mat_y: number[][]): FPMatrix {\n  return FP.f32.multiplicationMatrixMatrixInterval(mat_x, mat_y);\n}\n\nexport function multiplicationMatrixVectorInterval(x: number[][], y: number[]): FPVector {\n  return FP.f32.multiplicationMatrixVectorInterval(x, y);\n}\n\nexport function multiplicationVectorMatrixInterval(x: number[], y: number[][]): FPVector {\n  return FP.f32.multiplicationVectorMatrixInterval(x, y);\n}\n\nexport function negationInterval(n: number): FPInterval {\n  return FP.f32.negationInterval(n);\n}\n\nexport function normalizeInterval(n: number[]): FPVector {\n  return FP.f32.normalizeInterval(n);\n}\n\nexport function powInterval(x: number | FPInterval, y: number | FPInterval): FPInterval {\n  return FP.f32.powInterval(x, y);\n}\n\nexport function quantizeToF16Interval(n: number): FPInterval {\n  return FP.f32.quantizeToF16Interval(n);\n}\n\nexport function radiansInterval(n: number): FPInterval {\n  return FP.f32.radiansInterval(n);\n}\n\nexport function reflectInterval(x: number[], y: number[]): FPVector {\n  return FP.f32.reflectInterval(x, y);\n}\n\nexport function refractInterval(i: number[], s: number[], r: number): FPVector {\n  return FP.f32.refractInterval(i, s, r);\n}\n\nexport function remainderInterval(x: number, y: number): FPInterval {\n  return FP.f32.remainderInterval(x, y);\n}\n\nexport function roundInterval(n: number): FPInterval {\n  return FP.f32.roundInterval(n);\n}\n\nexport function saturateInterval(n: number): FPInterval {\n  return FP.f32.saturateInterval(n);\n}\n\nexport function signInterval(n: number): FPInterval {\n  return FP.f32.signInterval(n);\n}\n\nexport function sinInterval(n: number): FPInterval {\n  return FP.f32.sinInterval(n);\n}\n\nexport function sinhInterval(n: number): FPInterval {\n  return FP.f32.sinhInterval(n);\n}\n\nexport function smoothStepInterval(low: number, high: number, x: number): FPInterval {\n  return FP.f32.smoothStepInterval(low, high, x);\n}\n\nexport function sqrtInterval(n: number | FPInterval): FPInterval {\n  return FP.f32.sqrtInterval(n);\n}\n\nexport function stepInterval(edge: number, x: number): FPInterval {\n  return FP.f32.stepInterval(edge, x);\n}\n\nexport function subtractionInterval(x: number | FPInterval, y: number | FPInterval): FPInterval {\n  return FP.f32.subtractionInterval(x, y);\n}\n\nexport function subtractionMatrixInterval(x: number[][], y: number[][]): FPMatrix {\n  return FP.f32.subtractionMatrixInterval(x, y);\n}\n\nexport function tanInterval(n: number): FPInterval {\n  return FP.f32.tanInterval(n);\n}\n\nexport function tanhInterval(n: number): FPInterval {\n  return FP.f32.tanhInterval(n);\n}\n\nexport function transposeInterval(m: number[][]): FPMatrix {\n  return FP.f32.transposeInterval(m);\n}\n\nexport function truncInterval(n: number | FPInterval): FPInterval {\n  return FP.f32.truncInterval(n);\n}\n\nexport function unpack2x16floatInterval(n: number): FPVector {\n  return FP.f32.unpack2x16floatInterval(n);\n}\n\nexport function unpack2x16snormInterval(n: number): FPVector {\n  return FP.f32.unpack2x16snormInterval(n);\n}\n\nexport function unpack2x16unormInterval(n: number): FPVector {\n  return FP.f32.unpack2x16unormInterval(n);\n}\n\nexport function unpack4x8snormInterval(n: number): FPVector {\n  return FP.f32.unpack4x8snormInterval(n);\n}\n\nexport function unpack4x8unormInterval(n: number): FPVector {\n  return FP.f32.unpack4x8unormInterval(n);\n}\n"],"mappings":"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"}