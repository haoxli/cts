{"version":3,"sources":["../../../../../../src/webgpu/api/validation/encoding/cmds/buffer_texture_copies.spec.ts"],"names":["description","poptions","params","makeTestGroup","kDepthStencilFormats","depthStencilBufferTextureCopySupported","ValidationTest","g","test","desc","cases","combine","fn","t","format","aspect","textureSize","width","height","depthOrArrayLayers","texture","device","createTexture","size","usage","GPUTextureUsage","COPY_SRC","COPY_DST","buffer","createBuffer","GPUBufferUsage","success","encoder","createCommandEncoder","copyBufferToTexture","expectValidationError","queue","submit","finish","copyTextureToBuffer"],"mappings":";AAAA;AACA,GADA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA;AACA;AACA;AACA,CALO,CAOP,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,mDAAjC;AACA,SAASC,aAAT,QAA8B,+CAA9B;AACA;AACEC,oBADF;AAEEC,sCAFF;AAGO,gCAHP;AAIA,SAASC,cAAT,QAA+B,0BAA/B;;AAEA,OAAO,MAAMC,CAAC,GAAGJ,aAAa,CAACG,cAAD,CAAvB;;AAEPC,CAAC,CAACC,IAAF,CAAO,4CAAP;AACGC,IADH;AAEK;AACL;AACA;AACA,CALA;;AAOGC,KAPH;AAQIR,MAAM;AACHS,OADH,CACWV,QAAQ,CAAC,QAAD,EAAWG,oBAAX,CADnB;AAEGO,OAFH,CAEWV,QAAQ,CAAC,QAAD,EAAW,CAAC,KAAD,EAAQ,YAAR,EAAsB,cAAtB,CAAX,CAFnB,CARJ;;AAYGW,EAZH,CAYM,MAAMC,CAAN,IAAW;AACb,QAAM,EAAEC,MAAF,EAAUC,MAAV,KAAqBF,CAAC,CAACX,MAA7B;;AAEA,QAAMc,WAAW,GAAG,EAAEC,KAAK,EAAE,CAAT,EAAYC,MAAM,EAAE,CAApB,EAAuBC,kBAAkB,EAAE,CAA3C,EAApB;AACA,QAAMC,OAAO,GAAGP,CAAC,CAACQ,MAAF,CAASC,aAAT,CAAuB;AACrCC,IAAAA,IAAI,EAAEP,WAD+B;AAErCF,IAAAA,MAFqC;AAGrCU,IAAAA,KAAK,EAAEC,eAAe,CAACC,QAAhB,GAA2BD,eAAe,CAACE,QAHb,EAAvB,CAAhB;;;AAMA,QAAMC,MAAM,GAAGf,CAAC,CAACQ,MAAF,CAASQ,YAAT,CAAsB;AACnCN,IAAAA,IAAI,EAAE,EAD6B;AAEnCC,IAAAA,KAAK,EAAEM,cAAc,CAACJ,QAAf,GAA0BI,cAAc,CAACH,QAFb,EAAtB,CAAf;;;AAKA;AACE,UAAMI,OAAO,GAAG1B,sCAAsC,CAAC,SAAD,EAAYS,MAAZ,EAAoBC,MAApB,CAAtD;;AAEA,UAAMiB,OAAO,GAAGnB,CAAC,CAACQ,MAAF,CAASY,oBAAT,EAAhB;AACAD,IAAAA,OAAO,CAACE,mBAAR,CAA4B,EAAEN,MAAF,EAA5B,EAAwC,EAAER,OAAF,EAAWL,MAAX,EAAxC,EAA6DC,WAA7D;;AAEAH,IAAAA,CAAC,CAACsB,qBAAF,CAAwB,MAAM;AAC5BtB,MAAAA,CAAC,CAACQ,MAAF,CAASe,KAAT,CAAeC,MAAf,CAAsB,CAACL,OAAO,CAACM,MAAR,EAAD,CAAtB;AACD,KAFD,EAEG,CAACP,OAFJ;AAGD;;AAED;AACE,UAAMA,OAAO,GAAG1B,sCAAsC,CAAC,SAAD,EAAYS,MAAZ,EAAoBC,MAApB,CAAtD;;AAEA,UAAMiB,OAAO,GAAGnB,CAAC,CAACQ,MAAF,CAASY,oBAAT,EAAhB;AACAD,IAAAA,OAAO,CAACO,mBAAR,CAA4B,EAAEnB,OAAF,EAAWL,MAAX,EAA5B,EAAiD,EAAEa,MAAF,EAAjD,EAA6DZ,WAA7D;;AAEAH,IAAAA,CAAC,CAACsB,qBAAF,CAAwB,MAAM;AAC5BtB,MAAAA,CAAC,CAACQ,MAAF,CAASe,KAAT,CAAeC,MAAf,CAAsB,CAACL,OAAO,CAACM,MAAR,EAAD,CAAtB;AACD,KAFD,EAEG,CAACP,OAFJ;AAGD;AACF,CAhDH","sourcesContent":["export const description = `\ncopyTextureToBuffer and copyBufferToTexture validation tests not covered by\nthe general image_copy tests, or by destroyed,*.\n\nTODO: plan further\n`;\n\nimport { poptions, params } from '../../../../../common/framework/params_builder.js';\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport {\n  kDepthStencilFormats,\n  depthStencilBufferTextureCopySupported,\n} from '../../../../capability_info.js';\nimport { ValidationTest } from '../../validation_test.js';\n\nexport const g = makeTestGroup(ValidationTest);\n\ng.test('depth_stencil_format,copy_usage_and_aspect')\n  .desc(\n    `\n  Validate the combination of usage and aspect of each depth stencil format in copyBufferToTexture\n  and copyTextureToBuffer. See https://gpuweb.github.io/gpuweb/#depth-formats for more details.\n`\n  )\n  .cases(\n    params()\n      .combine(poptions('format', kDepthStencilFormats))\n      .combine(poptions('aspect', ['all', 'depth-only', 'stencil-only'] as const))\n  )\n  .fn(async t => {\n    const { format, aspect } = t.params;\n\n    const textureSize = { width: 1, height: 1, depthOrArrayLayers: 1 };\n    const texture = t.device.createTexture({\n      size: textureSize,\n      format,\n      usage: GPUTextureUsage.COPY_SRC | GPUTextureUsage.COPY_DST,\n    });\n\n    const buffer = t.device.createBuffer({\n      size: 32,\n      usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST,\n    });\n\n    {\n      const success = depthStencilBufferTextureCopySupported('CopyB2T', format, aspect);\n\n      const encoder = t.device.createCommandEncoder();\n      encoder.copyBufferToTexture({ buffer }, { texture, aspect }, textureSize);\n\n      t.expectValidationError(() => {\n        t.device.queue.submit([encoder.finish()]);\n      }, !success);\n    }\n\n    {\n      const success = depthStencilBufferTextureCopySupported('CopyT2B', format, aspect);\n\n      const encoder = t.device.createCommandEncoder();\n      encoder.copyTextureToBuffer({ texture, aspect }, { buffer }, textureSize);\n\n      t.expectValidationError(() => {\n        t.device.queue.submit([encoder.finish()]);\n      }, !success);\n    }\n  });\n"],"file":"buffer_texture_copies.spec.js"}