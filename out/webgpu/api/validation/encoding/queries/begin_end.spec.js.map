{"version":3,"sources":["../../../../../../src/webgpu/api/validation/encoding/queries/begin_end.spec.ts"],"names":["description","pbool","makeTestGroup","ValidationTest","g","test","desc","subcases","begin","end","unimplemented","calls","nest","_valid"],"mappings":"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","sourcesContent":["export const description = `\nValidation for encoding begin/endable queries.\n\nTODO:\n- balance: {\n    - begin 0, end 1\n    - begin 1, end 0\n    - begin 1, end 1\n    - begin 2, end 2\n    - }\n    - x= {\n        - render pass + pipeline statistics\n        - compute pass + pipeline statistics\n        - }\n`;\n\nimport { pbool } from '../../../../../common/framework/params_builder.js';\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { ValidationTest } from '../../validation_test.js';\n\nexport const g = makeTestGroup(ValidationTest);\n\ng.test('occlusion_query,begin_end_balance')\n  .desc(\n    `\nTests that begin/end occlusion queries mismatch on render pass:\n- begin n queries, then end m queries, for various n and m.\n  `\n  )\n  .subcases(\n    () =>\n      [\n        { begin: 0, end: 1 },\n        { begin: 1, end: 0 },\n        { begin: 1, end: 1 }, // control case\n        { begin: 1, end: 2 },\n        { begin: 2, end: 1 },\n      ] as const\n  )\n  .unimplemented();\n\ng.test('occlusion_query,begin_end_invalid_nesting')\n  .desc(\n    `\nTests the invalid nesting of begin/end occlusion queries:\n- begin index 0, end, begin index 0, end (control case)\n- begin index 0, begin index 0, end, end\n- begin index 0, begin index 1, end, end\n  `\n  )\n  .subcases(\n    () =>\n      [\n        { calls: [0, 'end', 1, 'end'] }, // control case\n        { calls: [0, 0, 'end', 'end'] },\n        { calls: [0, 1, 'end', 'end'] },\n      ] as const\n  )\n  .unimplemented();\n\ng.test('occlusion_query,disjoint_queries_with_same_query_index')\n  .desc(\n    `\nTests that two disjoint occlusion queries cannot be begun with same query index on same render pass:\n- begin index 0, end, begin index 0, end\n- call on {same (invalid), different (control case)} render pass\n  `\n  )\n  .subcases(() => pbool('isOnSameRenderPass'))\n  .unimplemented();\n\ng.test('nesting')\n  .desc(\n    `\nTests that whether it's allowed to nest various types of queries:\n- call {occlusion, pipeline-statistics, timestamp} query in same type or other type.\n  `\n  )\n  .subcases(\n    () =>\n      [\n        { begin: 'occlusion', nest: 'timestamp', end: 'occlusion', _valid: true },\n        { begin: 'occlusion', nest: 'occlusion', end: 'occlusion', _valid: false },\n        { begin: 'occlusion', nest: 'pipeline-statistics', end: 'occlusion', _valid: true },\n        {\n          begin: 'occlusion',\n          nest: 'pipeline-statistics',\n          end: 'pipeline-statistics',\n          _valid: true,\n        },\n        {\n          begin: 'pipeline-statistics',\n          nest: 'timestamp',\n          end: 'pipeline-statistics',\n          _valid: true,\n        },\n        {\n          begin: 'pipeline-statistics',\n          nest: 'pipeline-statistics',\n          end: 'pipeline-statistics',\n          _valid: false,\n        },\n        {\n          begin: 'pipeline-statistics',\n          nest: 'occlusion',\n          end: 'pipeline-statistics',\n          _valid: true,\n        },\n        { begin: 'pipeline-statistics', nest: 'occlusion', end: 'occlusion', _valid: true },\n        { begin: 'timestamp', nest: 'occlusion', end: 'occlusion', _valid: true },\n        {\n          begin: 'timestamp',\n          nest: 'pipeline-statistics',\n          end: 'pipeline-statistics',\n          _valid: true,\n        },\n      ] as const\n  )\n  .unimplemented();\n"],"file":"begin_end.spec.js"}