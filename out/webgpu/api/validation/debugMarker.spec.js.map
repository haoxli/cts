{"version":3,"sources":["../../../../src/webgpu/api/validation/debugMarker.spec.ts"],"names":["description","makeTestGroup","ValidationTest","F","beginRenderPass","commandEncoder","attachmentTexture","device","createTexture","format","size","width","height","depthOrArrayLayers","usage","GPUTextureUsage","RENDER_ATTACHMENT","trackForCleanup","colorAttachments","view","createView","clearValue","r","g","b","a","loadOp","storeOp","test","desc","paramsSubcasesOnly","u","combine","fn","t","pushCount","popCount","params","encoder","createCommandEncoder","i","pushDebugGroup","insertDebugMarker","popDebugGroup","expectValidationError","finish","beginSubcases","passType","pass","beginComputePass","end"],"mappings":"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","sourcesContent":["export const description = `\nTest validation of pushDebugGroup, popDebugGroup, and insertDebugMarker.\n`;\n\nimport { makeTestGroup } from '../../../common/framework/test_group.js';\n\nimport { ValidationTest } from './validation_test.js';\n\nclass F extends ValidationTest {\n  beginRenderPass(commandEncoder: GPUCommandEncoder): GPURenderPassEncoder {\n    const attachmentTexture = this.device.createTexture({\n      format: 'rgba8unorm',\n      size: { width: 16, height: 16, depthOrArrayLayers: 1 },\n      usage: GPUTextureUsage.RENDER_ATTACHMENT,\n    });\n    this.trackForCleanup(attachmentTexture);\n    return commandEncoder.beginRenderPass({\n      colorAttachments: [\n        {\n          view: attachmentTexture.createView(),\n          clearValue: { r: 1.0, g: 0.0, b: 0.0, a: 1.0 },\n          loadOp: 'clear',\n          storeOp: 'store',\n        },\n      ],\n    });\n  }\n}\n\nexport const g = makeTestGroup(F);\n\ng.test('push_pop_call_count_unbalance,command_encoder')\n  .desc(\n    `\n  Test that a validation error is generated if {push,pop} debug group call count is not paired.\n  `\n  )\n  .paramsSubcasesOnly(u =>\n    u //\n      .combine('pushCount', [1, 2, 3])\n      .combine('popCount', [1, 2, 3])\n  )\n  .fn(async t => {\n    const { pushCount, popCount } = t.params;\n\n    const encoder = t.device.createCommandEncoder();\n\n    for (let i = 0; i < pushCount; ++i) {\n      encoder.pushDebugGroup('EventStart');\n    }\n\n    encoder.insertDebugMarker('Marker');\n\n    for (let i = 0; i < popCount; ++i) {\n      encoder.popDebugGroup();\n    }\n\n    t.expectValidationError(() => {\n      encoder.finish();\n    }, pushCount !== popCount);\n  });\n\ng.test('push_pop_call_count_unbalance,render_compute_pass')\n  .desc(\n    `\n  Test that a validation error is generated if {push,pop} debug group call count is not paired in\n  ComputePassEncoder and RenderPassEncoder.\n  `\n  )\n  .params(u =>\n    u //\n      .combine('passType', ['compute', 'render'])\n      .beginSubcases()\n      .combine('pushCount', [1, 2, 3])\n      .combine('popCount', [1, 2, 3])\n  )\n  .fn(async t => {\n    const { passType, pushCount, popCount } = t.params;\n\n    const encoder = t.device.createCommandEncoder();\n\n    const pass = passType === 'compute' ? encoder.beginComputePass() : t.beginRenderPass(encoder);\n\n    for (let i = 0; i < pushCount; ++i) {\n      pass.pushDebugGroup('EventStart');\n    }\n\n    pass.insertDebugMarker('Marker');\n\n    for (let i = 0; i < popCount; ++i) {\n      pass.popDebugGroup();\n    }\n\n    t.expectValidationError(() => {\n      pass.end();\n      encoder.finish();\n    }, pushCount !== popCount);\n  });\n"],"file":"debugMarker.spec.js"}