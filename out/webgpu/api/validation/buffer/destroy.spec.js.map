{"version":3,"sources":["../../../../../src/webgpu/api/validation/buffer/destroy.spec.ts"],"names":["description","makeTestGroup","GPUConst","ValidationTest","g","test","desc","paramsSubcasesOnly","u","combine","combineWithParams","size","usage","BufferUsage","COPY_SRC","MAP_WRITE","COPY_DST","MAP_READ","fn","t","buf","device","createBuffer","params","destroy","unimplemented"],"mappings":";AAAA;AACA,GADA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA,CAFO,CAIP,SAASC,aAAT,QAA8B,4CAA9B;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,cAAT,QAA+B,uBAA/B;;AAEA,OAAO,MAAMC,CAAC,GAAGH,aAAa,CAACE,cAAD,CAAvB;;AAEPC,CAAC,CAACC,IAAF,CAAO,OAAP;AACGC,IADH,CACQ,0FADR;AAEGC,kBAFH,CAEsB,CAAAC,CAAC;AACnBA,CAAC,CAAC;AAAD,CACEC,OADH,CACW,kBADX,EAC+B,CAAC,KAAD,EAAQ,IAAR,CAD/B;AAEGC,iBAFH,CAEqB;AACjB,EAAEC,IAAI,EAAE,CAAR,EAAWC,KAAK,EAAEV,QAAQ,CAACW,WAAT,CAAqBC,QAAvC,EADiB;AAEjB,EAAEH,IAAI,EAAE,CAAR,EAAWC,KAAK,EAAEV,QAAQ,CAACW,WAAT,CAAqBE,SAArB,GAAiCb,QAAQ,CAACW,WAAT,CAAqBC,QAAxE,EAFiB;AAGjB,EAAEH,IAAI,EAAE,CAAR,EAAWC,KAAK,EAAEV,QAAQ,CAACW,WAAT,CAAqBG,QAArB,GAAgCd,QAAQ,CAACW,WAAT,CAAqBI,QAAvE,EAHiB,CAFrB,CAHJ;;;AAWGC,EAXH,CAWM,MAAMC,CAAN,IAAW;AACb,QAAMC,GAAG,GAAGD,CAAC,CAACE,MAAF,CAASC,YAAT,CAAsBH,CAAC,CAACI,MAAxB,CAAZ;;AAEAH,EAAAA,GAAG,CAACI,OAAJ;AACAJ,EAAAA,GAAG,CAACI,OAAJ;AACD,CAhBH;;AAkBApB,CAAC,CAACC,IAAF,CAAO,cAAP;AACGC,IADH;AAEK;AACL,gCAHA;;AAKGmB,aALH","sourcesContent":["export const description = `\nDestroying a buffer more than once is allowed.\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { GPUConst } from '../../../constants.js';\nimport { ValidationTest } from '../validation_test.js';\n\nexport const g = makeTestGroup(ValidationTest);\n\ng.test('twice')\n  .desc('Tests various mapping-related descripton options that could affect how state is tracked.')\n  .paramsSubcasesOnly(u =>\n    u //\n      .combine('mappedAtCreation', [false, true])\n      .combineWithParams([\n        { size: 4, usage: GPUConst.BufferUsage.COPY_SRC },\n        { size: 4, usage: GPUConst.BufferUsage.MAP_WRITE | GPUConst.BufferUsage.COPY_SRC },\n        { size: 4, usage: GPUConst.BufferUsage.COPY_DST | GPUConst.BufferUsage.MAP_READ },\n      ])\n  )\n  .fn(async t => {\n    const buf = t.device.createBuffer(t.params);\n\n    buf.destroy();\n    buf.destroy();\n  });\n\ng.test('while_mapped')\n  .desc(\n    `Test destroying a {mappable, unmappable mapAtCreation, mappable mapAtCreation} buffer while it\nis {mapped, mapped at creation}`\n  )\n  .unimplemented();\n"],"file":"destroy.spec.js"}