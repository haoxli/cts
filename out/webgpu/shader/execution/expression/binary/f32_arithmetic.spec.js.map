{"version":3,"file":"f32_arithmetic.spec.js","names":["description","makeTestGroup","GPUTest","TypeF32","TypeVec","additionInterval","divisionInterval","multiplicationInterval","remainderInterval","subtractionInterval","toF32Vector","fullF32Range","sparseVectorF32Range","makeCaseCache","allInputSources","generateBinaryToF32IntervalCases","generateF32VectorToVectorCases","generateVectorF32ToVectorCases","run","binary","compoundBinary","additionVectorScalarInterval","v","s","map","e","additionScalarVectorInterval","subtractionVectorScalarInterval","subtractionScalarVectorInterval","multiplicationVectorScalarInterval","multiplicationScalarVectorInterval","divisionVectorScalarInterval","divisionScalarVectorInterval","remainderVectorScalarInterval","remainderScalarVectorInterval","g","d","addition_const","addition_non_const","addition_vec2_scalar_const","addition_vec2_scalar_non_const","addition_vec3_scalar_const","addition_vec3_scalar_non_const","addition_vec4_scalar_const","addition_vec4_scalar_non_const","addition_scalar_vec2_const","addition_scalar_vec2_non_const","addition_scalar_vec3_const","addition_scalar_vec3_non_const","addition_scalar_vec4_const","addition_scalar_vec4_non_const","subtraction_const","subtraction_non_const","subtraction_vec2_scalar_const","subtraction_vec2_scalar_non_const","subtraction_vec3_scalar_const","subtraction_vec3_scalar_non_const","subtraction_vec4_scalar_const","subtraction_vec4_scalar_non_const","subtraction_scalar_vec2_const","subtraction_scalar_vec2_non_const","subtraction_scalar_vec3_const","subtraction_scalar_vec3_non_const","subtraction_scalar_vec4_const","subtraction_scalar_vec4_non_const","multiplication_const","multiplication_non_const","multiplication_vec2_scalar_const","multiplication_vec2_scalar_non_const","multiplication_vec3_scalar_const","multiplication_vec3_scalar_non_const","multiplication_vec4_scalar_const","multiplication_vec4_scalar_non_const","multiplication_scalar_vec2_const","multiplication_scalar_vec2_non_const","multiplication_scalar_vec3_const","multiplication_scalar_vec3_non_const","multiplication_scalar_vec4_const","multiplication_scalar_vec4_non_const","division_const","division_non_const","division_vec2_scalar_const","division_vec2_scalar_non_const","division_vec3_scalar_const","division_vec3_scalar_non_const","division_vec4_scalar_const","division_vec4_scalar_non_const","division_scalar_vec2_const","division_scalar_vec2_non_const","division_scalar_vec3_const","division_scalar_vec3_non_const","division_scalar_vec4_const","division_scalar_vec4_non_const","remainder_const","remainder_non_const","remainder_vec2_scalar_const","remainder_vec2_scalar_non_const","remainder_vec3_scalar_const","remainder_vec3_scalar_non_const","remainder_vec4_scalar_const","remainder_vec4_scalar_non_const","remainder_scalar_vec2_const","remainder_scalar_vec2_non_const","remainder_scalar_vec3_const","remainder_scalar_vec3_non_const","remainder_scalar_vec4_const","remainder_scalar_vec4_non_const","test","specURL","desc","params","u","combine","undefined","fn","t","cases","get","inputSource","dim"],"sources":["../../../../../../src/webgpu/shader/execution/expression/binary/f32_arithmetic.spec.ts"],"sourcesContent":["export const description = `\nExecution Tests for the f32 arithmetic binary expression operations\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../gpu_test.js';\nimport { TypeF32, TypeVec } from '../../../../util/conversion.js';\nimport {\n  additionInterval,\n  divisionInterval,\n  F32Vector,\n  multiplicationInterval,\n  remainderInterval,\n  subtractionInterval,\n  toF32Vector,\n} from '../../../../util/f32_interval.js';\nimport { fullF32Range, sparseVectorF32Range } from '../../../../util/math.js';\nimport { makeCaseCache } from '../case_cache.js';\nimport {\n  allInputSources,\n  generateBinaryToF32IntervalCases,\n  generateF32VectorToVectorCases,\n  generateVectorF32ToVectorCases,\n  run,\n} from '../expression.js';\n\nimport { binary, compoundBinary } from './binary.js';\n\n// Utility wrappers around the interval generators for the scalar-vector and\n// vector-scalar tests.\nconst additionVectorScalarInterval = (v: number[], s: number): F32Vector => {\n  return toF32Vector(v.map(e => additionInterval(e, s)));\n};\n\nconst additionScalarVectorInterval = (s: number, v: number[]): F32Vector => {\n  return toF32Vector(v.map(e => additionInterval(s, e)));\n};\n\nconst subtractionVectorScalarInterval = (v: number[], s: number): F32Vector => {\n  return toF32Vector(v.map(e => subtractionInterval(e, s)));\n};\n\nconst subtractionScalarVectorInterval = (s: number, v: number[]): F32Vector => {\n  return toF32Vector(v.map(e => subtractionInterval(s, e)));\n};\n\nconst multiplicationVectorScalarInterval = (v: number[], s: number): F32Vector => {\n  return toF32Vector(v.map(e => multiplicationInterval(e, s)));\n};\n\nconst multiplicationScalarVectorInterval = (s: number, v: number[]): F32Vector => {\n  return toF32Vector(v.map(e => multiplicationInterval(s, e)));\n};\n\nconst divisionVectorScalarInterval = (v: number[], s: number): F32Vector => {\n  return toF32Vector(v.map(e => divisionInterval(e, s)));\n};\n\nconst divisionScalarVectorInterval = (s: number, v: number[]): F32Vector => {\n  return toF32Vector(v.map(e => divisionInterval(s, e)));\n};\n\nconst remainderVectorScalarInterval = (v: number[], s: number): F32Vector => {\n  return toF32Vector(v.map(e => remainderInterval(e, s)));\n};\n\nconst remainderScalarVectorInterval = (s: number, v: number[]): F32Vector => {\n  return toF32Vector(v.map(e => remainderInterval(s, e)));\n};\n\nexport const g = makeTestGroup(GPUTest);\n\nexport const d = makeCaseCache('binary/f32_arithmetic', {\n  addition_const: () => {\n    return generateBinaryToF32IntervalCases(\n      fullF32Range(),\n      fullF32Range(),\n      'f32-only',\n      additionInterval\n    );\n  },\n  addition_non_const: () => {\n    return generateBinaryToF32IntervalCases(\n      fullF32Range(),\n      fullF32Range(),\n      'unfiltered',\n      additionInterval\n    );\n  },\n  addition_vec2_scalar_const: () => {\n    return generateVectorF32ToVectorCases(\n      sparseVectorF32Range(2),\n      fullF32Range(),\n      'f32-only',\n      additionVectorScalarInterval\n    );\n  },\n  addition_vec2_scalar_non_const: () => {\n    return generateVectorF32ToVectorCases(\n      sparseVectorF32Range(2),\n      fullF32Range(),\n      'unfiltered',\n      additionVectorScalarInterval\n    );\n  },\n  addition_vec3_scalar_const: () => {\n    return generateVectorF32ToVectorCases(\n      sparseVectorF32Range(3),\n      fullF32Range(),\n      'f32-only',\n      additionVectorScalarInterval\n    );\n  },\n  addition_vec3_scalar_non_const: () => {\n    return generateVectorF32ToVectorCases(\n      sparseVectorF32Range(3),\n      fullF32Range(),\n      'unfiltered',\n      additionVectorScalarInterval\n    );\n  },\n  addition_vec4_scalar_const: () => {\n    return generateVectorF32ToVectorCases(\n      sparseVectorF32Range(4),\n      fullF32Range(),\n      'f32-only',\n      additionVectorScalarInterval\n    );\n  },\n  addition_vec4_scalar_non_const: () => {\n    return generateVectorF32ToVectorCases(\n      sparseVectorF32Range(4),\n      fullF32Range(),\n      'unfiltered',\n      additionVectorScalarInterval\n    );\n  },\n  addition_scalar_vec2_const: () => {\n    return generateF32VectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(2),\n      'f32-only',\n      additionScalarVectorInterval\n    );\n  },\n  addition_scalar_vec2_non_const: () => {\n    return generateF32VectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(2),\n      'unfiltered',\n      additionScalarVectorInterval\n    );\n  },\n  addition_scalar_vec3_const: () => {\n    return generateF32VectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(3),\n      'f32-only',\n      additionScalarVectorInterval\n    );\n  },\n  addition_scalar_vec3_non_const: () => {\n    return generateF32VectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(3),\n      'unfiltered',\n      additionScalarVectorInterval\n    );\n  },\n  addition_scalar_vec4_const: () => {\n    return generateF32VectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(4),\n      'f32-only',\n      additionScalarVectorInterval\n    );\n  },\n  addition_scalar_vec4_non_const: () => {\n    return generateF32VectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(4),\n      'unfiltered',\n      additionScalarVectorInterval\n    );\n  },\n  subtraction_const: () => {\n    return generateBinaryToF32IntervalCases(\n      fullF32Range(),\n      fullF32Range(),\n      'f32-only',\n      subtractionInterval\n    );\n  },\n  subtraction_non_const: () => {\n    return generateBinaryToF32IntervalCases(\n      fullF32Range(),\n      fullF32Range(),\n      'unfiltered',\n      subtractionInterval\n    );\n  },\n  subtraction_vec2_scalar_const: () => {\n    return generateVectorF32ToVectorCases(\n      sparseVectorF32Range(2),\n      fullF32Range(),\n      'f32-only',\n      subtractionVectorScalarInterval\n    );\n  },\n  subtraction_vec2_scalar_non_const: () => {\n    return generateVectorF32ToVectorCases(\n      sparseVectorF32Range(2),\n      fullF32Range(),\n      'unfiltered',\n      subtractionVectorScalarInterval\n    );\n  },\n  subtraction_vec3_scalar_const: () => {\n    return generateVectorF32ToVectorCases(\n      sparseVectorF32Range(3),\n      fullF32Range(),\n      'f32-only',\n      subtractionVectorScalarInterval\n    );\n  },\n  subtraction_vec3_scalar_non_const: () => {\n    return generateVectorF32ToVectorCases(\n      sparseVectorF32Range(3),\n      fullF32Range(),\n      'unfiltered',\n      subtractionVectorScalarInterval\n    );\n  },\n  subtraction_vec4_scalar_const: () => {\n    return generateVectorF32ToVectorCases(\n      sparseVectorF32Range(4),\n      fullF32Range(),\n      'f32-only',\n      subtractionVectorScalarInterval\n    );\n  },\n  subtraction_vec4_scalar_non_const: () => {\n    return generateVectorF32ToVectorCases(\n      sparseVectorF32Range(4),\n      fullF32Range(),\n      'unfiltered',\n      subtractionVectorScalarInterval\n    );\n  },\n  subtraction_scalar_vec2_const: () => {\n    return generateF32VectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(2),\n      'f32-only',\n      subtractionScalarVectorInterval\n    );\n  },\n  subtraction_scalar_vec2_non_const: () => {\n    return generateF32VectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(2),\n      'unfiltered',\n      subtractionScalarVectorInterval\n    );\n  },\n  subtraction_scalar_vec3_const: () => {\n    return generateF32VectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(3),\n      'f32-only',\n      subtractionScalarVectorInterval\n    );\n  },\n  subtraction_scalar_vec3_non_const: () => {\n    return generateF32VectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(3),\n      'unfiltered',\n      subtractionScalarVectorInterval\n    );\n  },\n  subtraction_scalar_vec4_const: () => {\n    return generateF32VectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(4),\n      'f32-only',\n      subtractionScalarVectorInterval\n    );\n  },\n  subtraction_scalar_vec4_non_const: () => {\n    return generateF32VectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(4),\n      'unfiltered',\n      subtractionScalarVectorInterval\n    );\n  },\n  multiplication_const: () => {\n    return generateBinaryToF32IntervalCases(\n      fullF32Range(),\n      fullF32Range(),\n      'f32-only',\n      multiplicationInterval\n    );\n  },\n  multiplication_non_const: () => {\n    return generateBinaryToF32IntervalCases(\n      fullF32Range(),\n      fullF32Range(),\n      'unfiltered',\n      multiplicationInterval\n    );\n  },\n  multiplication_vec2_scalar_const: () => {\n    return generateVectorF32ToVectorCases(\n      sparseVectorF32Range(2),\n      fullF32Range(),\n      'f32-only',\n      multiplicationVectorScalarInterval\n    );\n  },\n  multiplication_vec2_scalar_non_const: () => {\n    return generateVectorF32ToVectorCases(\n      sparseVectorF32Range(2),\n      fullF32Range(),\n      'unfiltered',\n      multiplicationVectorScalarInterval\n    );\n  },\n  multiplication_vec3_scalar_const: () => {\n    return generateVectorF32ToVectorCases(\n      sparseVectorF32Range(3),\n      fullF32Range(),\n      'f32-only',\n      multiplicationVectorScalarInterval\n    );\n  },\n  multiplication_vec3_scalar_non_const: () => {\n    return generateVectorF32ToVectorCases(\n      sparseVectorF32Range(3),\n      fullF32Range(),\n      'unfiltered',\n      multiplicationVectorScalarInterval\n    );\n  },\n  multiplication_vec4_scalar_const: () => {\n    return generateVectorF32ToVectorCases(\n      sparseVectorF32Range(4),\n      fullF32Range(),\n      'f32-only',\n      multiplicationVectorScalarInterval\n    );\n  },\n  multiplication_vec4_scalar_non_const: () => {\n    return generateVectorF32ToVectorCases(\n      sparseVectorF32Range(4),\n      fullF32Range(),\n      'unfiltered',\n      multiplicationVectorScalarInterval\n    );\n  },\n  multiplication_scalar_vec2_const: () => {\n    return generateF32VectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(2),\n      'f32-only',\n      multiplicationScalarVectorInterval\n    );\n  },\n  multiplication_scalar_vec2_non_const: () => {\n    return generateF32VectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(2),\n      'unfiltered',\n      multiplicationScalarVectorInterval\n    );\n  },\n  multiplication_scalar_vec3_const: () => {\n    return generateF32VectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(3),\n      'f32-only',\n      multiplicationScalarVectorInterval\n    );\n  },\n  multiplication_scalar_vec3_non_const: () => {\n    return generateF32VectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(3),\n      'unfiltered',\n      multiplicationScalarVectorInterval\n    );\n  },\n  multiplication_scalar_vec4_const: () => {\n    return generateF32VectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(4),\n      'f32-only',\n      multiplicationScalarVectorInterval\n    );\n  },\n  multiplication_scalar_vec4_non_const: () => {\n    return generateF32VectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(4),\n      'unfiltered',\n      multiplicationScalarVectorInterval\n    );\n  },\n  division_const: () => {\n    return generateBinaryToF32IntervalCases(\n      fullF32Range(),\n      fullF32Range(),\n      'f32-only',\n      divisionInterval\n    );\n  },\n  division_non_const: () => {\n    return generateBinaryToF32IntervalCases(\n      fullF32Range(),\n      fullF32Range(),\n      'unfiltered',\n      divisionInterval\n    );\n  },\n  division_vec2_scalar_const: () => {\n    return generateVectorF32ToVectorCases(\n      sparseVectorF32Range(2),\n      fullF32Range(),\n      'f32-only',\n      divisionVectorScalarInterval\n    );\n  },\n  division_vec2_scalar_non_const: () => {\n    return generateVectorF32ToVectorCases(\n      sparseVectorF32Range(2),\n      fullF32Range(),\n      'unfiltered',\n      divisionVectorScalarInterval\n    );\n  },\n  division_vec3_scalar_const: () => {\n    return generateVectorF32ToVectorCases(\n      sparseVectorF32Range(3),\n      fullF32Range(),\n      'f32-only',\n      divisionVectorScalarInterval\n    );\n  },\n  division_vec3_scalar_non_const: () => {\n    return generateVectorF32ToVectorCases(\n      sparseVectorF32Range(3),\n      fullF32Range(),\n      'unfiltered',\n      divisionVectorScalarInterval\n    );\n  },\n  division_vec4_scalar_const: () => {\n    return generateVectorF32ToVectorCases(\n      sparseVectorF32Range(4),\n      fullF32Range(),\n      'f32-only',\n      divisionVectorScalarInterval\n    );\n  },\n  division_vec4_scalar_non_const: () => {\n    return generateVectorF32ToVectorCases(\n      sparseVectorF32Range(4),\n      fullF32Range(),\n      'unfiltered',\n      divisionVectorScalarInterval\n    );\n  },\n  division_scalar_vec2_const: () => {\n    return generateF32VectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(2),\n      'f32-only',\n      divisionScalarVectorInterval\n    );\n  },\n  division_scalar_vec2_non_const: () => {\n    return generateF32VectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(2),\n      'unfiltered',\n      divisionScalarVectorInterval\n    );\n  },\n  division_scalar_vec3_const: () => {\n    return generateF32VectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(3),\n      'f32-only',\n      divisionScalarVectorInterval\n    );\n  },\n  division_scalar_vec3_non_const: () => {\n    return generateF32VectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(3),\n      'unfiltered',\n      divisionScalarVectorInterval\n    );\n  },\n  division_scalar_vec4_const: () => {\n    return generateF32VectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(4),\n      'f32-only',\n      divisionScalarVectorInterval\n    );\n  },\n  division_scalar_vec4_non_const: () => {\n    return generateF32VectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(4),\n      'unfiltered',\n      divisionScalarVectorInterval\n    );\n  },\n  remainder_const: () => {\n    return generateBinaryToF32IntervalCases(\n      fullF32Range(),\n      fullF32Range(),\n      'f32-only',\n      remainderInterval\n    );\n  },\n  remainder_non_const: () => {\n    return generateBinaryToF32IntervalCases(\n      fullF32Range(),\n      fullF32Range(),\n      'unfiltered',\n      remainderInterval\n    );\n  },\n  remainder_vec2_scalar_const: () => {\n    return generateVectorF32ToVectorCases(\n      sparseVectorF32Range(2),\n      fullF32Range(),\n      'f32-only',\n      remainderVectorScalarInterval\n    );\n  },\n  remainder_vec2_scalar_non_const: () => {\n    return generateVectorF32ToVectorCases(\n      sparseVectorF32Range(2),\n      fullF32Range(),\n      'unfiltered',\n      remainderVectorScalarInterval\n    );\n  },\n  remainder_vec3_scalar_const: () => {\n    return generateVectorF32ToVectorCases(\n      sparseVectorF32Range(3),\n      fullF32Range(),\n      'f32-only',\n      remainderVectorScalarInterval\n    );\n  },\n  remainder_vec3_scalar_non_const: () => {\n    return generateVectorF32ToVectorCases(\n      sparseVectorF32Range(3),\n      fullF32Range(),\n      'unfiltered',\n      remainderVectorScalarInterval\n    );\n  },\n  remainder_vec4_scalar_const: () => {\n    return generateVectorF32ToVectorCases(\n      sparseVectorF32Range(4),\n      fullF32Range(),\n      'f32-only',\n      remainderVectorScalarInterval\n    );\n  },\n  remainder_vec4_scalar_non_const: () => {\n    return generateVectorF32ToVectorCases(\n      sparseVectorF32Range(4),\n      fullF32Range(),\n      'unfiltered',\n      remainderVectorScalarInterval\n    );\n  },\n  remainder_scalar_vec2_const: () => {\n    return generateF32VectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(2),\n      'f32-only',\n      remainderScalarVectorInterval\n    );\n  },\n  remainder_scalar_vec2_non_const: () => {\n    return generateF32VectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(2),\n      'unfiltered',\n      remainderScalarVectorInterval\n    );\n  },\n  remainder_scalar_vec3_const: () => {\n    return generateF32VectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(3),\n      'f32-only',\n      remainderScalarVectorInterval\n    );\n  },\n  remainder_scalar_vec3_non_const: () => {\n    return generateF32VectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(3),\n      'unfiltered',\n      remainderScalarVectorInterval\n    );\n  },\n  remainder_scalar_vec4_const: () => {\n    return generateF32VectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(4),\n      'f32-only',\n      remainderScalarVectorInterval\n    );\n  },\n  remainder_scalar_vec4_non_const: () => {\n    return generateF32VectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(4),\n      'unfiltered',\n      remainderScalarVectorInterval\n    );\n  },\n});\n\ng.test('addition')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x + y\nAccuracy: Correctly rounded\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'addition_const' : 'addition_non_const'\n    );\n    await run(t, binary('+'), [TypeF32, TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('addition_compound')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x *= y\nAccuracy: Correctly rounded\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'addition_const' : 'addition_non_const'\n    );\n    await run(t, compoundBinary('+='), [TypeF32, TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('addition_vector_scalar')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x + y, where x is a vector and y is a scalar\nAccuracy: Correctly rounded\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources).combine('dim', [2, 3, 4] as const))\n  .fn(async t => {\n    const dim = t.params.dim;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `addition_vec${dim}_scalar_const`\n        : `addition_vec${dim}_scalar_non_const`\n    );\n    await run(\n      t,\n      binary('+'),\n      [TypeVec(dim, TypeF32), TypeF32],\n      TypeVec(dim, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('addition_vector_scalar_compound')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x += y, where x is a vector and y is a scalar\nAccuracy: Correctly rounded\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources).combine('dim', [2, 3, 4] as const))\n  .fn(async t => {\n    const dim = t.params.dim;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `addition_vec${dim}_scalar_const`\n        : `addition_vec${dim}_scalar_non_const`\n    );\n    await run(\n      t,\n      compoundBinary('+='),\n      [TypeVec(dim, TypeF32), TypeF32],\n      TypeVec(dim, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('addition_scalar_vector')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x + y, where x is a scalar and y is a vector\nAccuracy: Correctly rounded\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources).combine('dim', [2, 3, 4] as const))\n  .fn(async t => {\n    const dim = t.params.dim;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `addition_scalar_vec${dim}_const`\n        : `addition_scalar_vec${dim}_non_const`\n    );\n    await run(\n      t,\n      binary('+'),\n      [TypeF32, TypeVec(dim, TypeF32)],\n      TypeVec(dim, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('subtraction')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x - y\nAccuracy: Correctly rounded\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'subtraction_const' : 'subtraction_non_const'\n    );\n    await run(t, binary('-'), [TypeF32, TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('subtraction_compound')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x -= y\nAccuracy: Correctly rounded\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'subtraction_const' : 'subtraction_non_const'\n    );\n    await run(t, compoundBinary('-='), [TypeF32, TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('subtraction_vector_scalar')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x - y, where x is a vector and y is a scalar\nAccuracy: Correctly rounded\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources).combine('dim', [2, 3, 4] as const))\n  .fn(async t => {\n    const dim = t.params.dim;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `subtraction_vec${dim}_scalar_const`\n        : `subtraction_vec${dim}_scalar_non_const`\n    );\n    await run(\n      t,\n      binary('-'),\n      [TypeVec(dim, TypeF32), TypeF32],\n      TypeVec(dim, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('subtraction_vector_scalar_compound')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x -= y, where x is a vector and y is a scalar\nAccuracy: Correctly rounded\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources).combine('dim', [2, 3, 4] as const))\n  .fn(async t => {\n    const dim = t.params.dim;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `subtraction_vec${dim}_scalar_const`\n        : `subtraction_vec${dim}_scalar_non_const`\n    );\n    await run(\n      t,\n      compoundBinary('-='),\n      [TypeVec(dim, TypeF32), TypeF32],\n      TypeVec(dim, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('subtraction_scalar_vector')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x - y, where x is a scalar and y is a vector\nAccuracy: Correctly rounded\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources).combine('dim', [2, 3, 4] as const))\n  .fn(async t => {\n    const dim = t.params.dim;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `subtraction_scalar_vec${dim}_const`\n        : `subtraction_scalar_vec${dim}_non_const`\n    );\n    await run(\n      t,\n      binary('-'),\n      [TypeF32, TypeVec(dim, TypeF32)],\n      TypeVec(dim, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('multiplication')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x * y\nAccuracy: Correctly rounded\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'multiplication_const' : 'multiplication_non_const'\n    );\n    await run(t, binary('*'), [TypeF32, TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('multiplication_compound')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x *= y\nAccuracy: Correctly rounded\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'multiplication_const' : 'multiplication_non_const'\n    );\n    await run(t, compoundBinary('*='), [TypeF32, TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('multiplication_vector_scalar')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x * y, where x is a vector and y is a scalar\nAccuracy: Correctly rounded\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources).combine('dim', [2, 3, 4] as const))\n  .fn(async t => {\n    const dim = t.params.dim;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `multiplication_vec${dim}_scalar_const`\n        : `multiplication_vec${dim}_scalar_non_const`\n    );\n    await run(\n      t,\n      binary('*'),\n      [TypeVec(dim, TypeF32), TypeF32],\n      TypeVec(dim, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('multiplication_vector_scalar_compound')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x *= y, where x is a vector and y is a scalar\nAccuracy: Correctly rounded\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources).combine('dim', [2, 3, 4] as const))\n  .fn(async t => {\n    const dim = t.params.dim;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `multiplication_vec${dim}_scalar_const`\n        : `multiplication_vec${dim}_scalar_non_const`\n    );\n    await run(\n      t,\n      compoundBinary('*='),\n      [TypeVec(dim, TypeF32), TypeF32],\n      TypeVec(dim, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('multiplication_scalar_vector')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x * y, where x is a scalar and y is a vector\nAccuracy: Correctly rounded\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources).combine('dim', [2, 3, 4] as const))\n  .fn(async t => {\n    const dim = t.params.dim;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `multiplication_scalar_vec${dim}_const`\n        : `multiplication_scalar_vec${dim}_non_const`\n    );\n    await run(\n      t,\n      binary('*'),\n      [TypeF32, TypeVec(dim, TypeF32)],\n      TypeVec(dim, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('division')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x / y\nAccuracy: 2.5 ULP for |y| in the range [2^-126, 2^126]\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'division_const' : 'division_non_const'\n    );\n    await run(t, binary('/'), [TypeF32, TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('division_compound')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x /= y\nAccuracy: 2.5 ULP for |y| in the range [2^-126, 2^126]\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'division_const' : 'division_non_const'\n    );\n    await run(t, compoundBinary('/='), [TypeF32, TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('division_vector_scalar')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x / y, where x is a vector and y is a scalar\nAccuracy: Correctly rounded\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources).combine('dim', [2, 3, 4] as const))\n  .fn(async t => {\n    const dim = t.params.dim;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `division_vec${dim}_scalar_const`\n        : `division_vec${dim}_scalar_non_const`\n    );\n    await run(\n      t,\n      binary('/'),\n      [TypeVec(dim, TypeF32), TypeF32],\n      TypeVec(dim, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('division_vector_scalar_compound')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x /= y, where x is a vector and y is a scalar\nAccuracy: Correctly rounded\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources).combine('dim', [2, 3, 4] as const))\n  .fn(async t => {\n    const dim = t.params.dim;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `division_vec${dim}_scalar_const`\n        : `division_vec${dim}_scalar_non_const`\n    );\n    await run(\n      t,\n      compoundBinary('/='),\n      [TypeVec(dim, TypeF32), TypeF32],\n      TypeVec(dim, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('division_scalar_vector')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x / y, where x is a scalar and y is a vector\nAccuracy: Correctly rounded\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources).combine('dim', [2, 3, 4] as const))\n  .fn(async t => {\n    const dim = t.params.dim;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `division_scalar_vec${dim}_const`\n        : `division_scalar_vec${dim}_non_const`\n    );\n    await run(\n      t,\n      binary('/'),\n      [TypeF32, TypeVec(dim, TypeF32)],\n      TypeVec(dim, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('remainder')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x % y\nAccuracy: Derived from x - y * trunc(x/y)\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'remainder_const' : 'remainder_non_const'\n    );\n    await run(t, binary('%'), [TypeF32, TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('remainder_compound')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x %= y\nAccuracy: Derived from x - y * trunc(x/y)\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'remainder_const' : 'remainder_non_const'\n    );\n    await run(t, compoundBinary('%='), [TypeF32, TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('remainder_vector_scalar')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x % y, where x is a vector and y is a scalar\nAccuracy: Correctly rounded\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources).combine('dim', [2, 3, 4] as const))\n  .fn(async t => {\n    const dim = t.params.dim;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `remainder_vec${dim}_scalar_const`\n        : `remainder_vec${dim}_scalar_non_const`\n    );\n    await run(\n      t,\n      binary('%'),\n      [TypeVec(dim, TypeF32), TypeF32],\n      TypeVec(dim, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('remainder_vector_scalar_compound')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x %= y, where x is a vector and y is a scalar\nAccuracy: Correctly rounded\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources).combine('dim', [2, 3, 4] as const))\n  .fn(async t => {\n    const dim = t.params.dim;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `remainder_vec${dim}_scalar_const`\n        : `remainder_vec${dim}_scalar_non_const`\n    );\n    await run(\n      t,\n      compoundBinary('%='),\n      [TypeVec(dim, TypeF32), TypeF32],\n      TypeVec(dim, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('remainder_scalar_vector')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x % y, where x is a scalar and y is a vector\nAccuracy: Correctly rounded\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources).combine('dim', [2, 3, 4] as const))\n  .fn(async t => {\n    const dim = t.params.dim;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `remainder_scalar_vec${dim}_const`\n        : `remainder_scalar_vec${dim}_non_const`\n    );\n    await run(\n      t,\n      binary('%'),\n      [TypeF32, TypeVec(dim, TypeF32)],\n      TypeVec(dim, TypeF32),\n      t.params,\n      cases\n    );\n  });\n"],"mappings":"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"}