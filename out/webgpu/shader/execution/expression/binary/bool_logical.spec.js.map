{"version":3,"sources":["../../../../../../src/webgpu/shader/execution/expression/binary/bool_logical.spec.ts"],"names":["description","makeTestGroup","GPUTest","bool","TypeBool","allInputSources","run","binary","g","test","specURL","desc","params","u","combine","undefined","fn","t","cases","input","expected"],"mappings":"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","sourcesContent":["export const description = `\nExecution Tests for the boolean binary logical expression operations\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../gpu_test.js';\nimport { bool, TypeBool } from '../../../../util/conversion.js';\nimport { allInputSources, run } from '../expression.js';\n\nimport { binary } from './binary.js';\n\nexport const g = makeTestGroup(GPUTest);\n\n// Short circuiting vs no short circuiting is not tested here, it is covered in\n// src/webgpu/shader/execution/evaluation_order.spec.ts\n\ng.test('and')\n  .specURL('https://www.w3.org/TR/WGSL/#logical-expr')\n  .desc(\n    `\nExpression: e1 & e2\nLogical \"and\". Component-wise when T is a vector. Evaluates both e1 and e2.\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = [\n      { input: [bool(false), bool(false)], expected: bool(false) },\n      { input: [bool(true), bool(false)], expected: bool(false) },\n      { input: [bool(false), bool(true)], expected: bool(false) },\n      { input: [bool(true), bool(true)], expected: bool(true) },\n    ];\n\n    await run(t, binary('&'), [TypeBool, TypeBool], TypeBool, t.params, cases);\n  });\n\ng.test('and_short_circuit')\n  .specURL('https://www.w3.org/TR/WGSL/#logical-expr')\n  .desc(\n    `\nExpression: e1 && e2\nshort_circuiting \"and\". Yields true if both e1 and e2 are true; evaluates e2 only if e1 is true.\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = [\n      { input: [bool(false), bool(false)], expected: bool(false) },\n      { input: [bool(true), bool(false)], expected: bool(false) },\n      { input: [bool(false), bool(true)], expected: bool(false) },\n      { input: [bool(true), bool(true)], expected: bool(true) },\n    ];\n\n    await run(t, binary('&&'), [TypeBool, TypeBool], TypeBool, t.params, cases);\n  });\n\ng.test('or')\n  .specURL('https://www.w3.org/TR/WGSL/#logical-expr')\n  .desc(\n    `\nExpression: e1 | e2\nLogical \"or\". Component-wise when T is a vector. Evaluates both e1 and e2.\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = [\n      { input: [bool(false), bool(false)], expected: bool(false) },\n      { input: [bool(true), bool(false)], expected: bool(true) },\n      { input: [bool(false), bool(true)], expected: bool(true) },\n      { input: [bool(true), bool(true)], expected: bool(true) },\n    ];\n\n    await run(t, binary('|'), [TypeBool, TypeBool], TypeBool, t.params, cases);\n  });\n\ng.test('or_short_circuit')\n  .specURL('https://www.w3.org/TR/WGSL/#logical-expr')\n  .desc(\n    `\nExpression: e1 || e2\nshort_circuiting \"and\". Yields true if both e1 and e2 are true; evaluates e2 only if e1 is true.\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = [\n      { input: [bool(false), bool(false)], expected: bool(false) },\n      { input: [bool(true), bool(false)], expected: bool(true) },\n      { input: [bool(false), bool(true)], expected: bool(true) },\n      { input: [bool(true), bool(true)], expected: bool(true) },\n    ];\n\n    await run(t, binary('||'), [TypeBool, TypeBool], TypeBool, t.params, cases);\n  });\n\ng.test('equals')\n  .specURL('https://www.w3.org/TR/WGSL/#logical-expr')\n  .desc(\n    `\nExpression: e1 == e2\nEquality. Component-wise when T is a vector.\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = [\n      { input: [bool(false), bool(false)], expected: bool(true) },\n      { input: [bool(true), bool(false)], expected: bool(false) },\n      { input: [bool(false), bool(true)], expected: bool(false) },\n      { input: [bool(true), bool(true)], expected: bool(true) },\n    ];\n\n    await run(t, binary('=='), [TypeBool, TypeBool], TypeBool, t.params, cases);\n  });\n\ng.test('not_equals')\n  .specURL('https://www.w3.org/TR/WGSL/#logical-expr')\n  .desc(\n    `\nExpression: e1 != e2\nEquality. Component-wise when T is a vector.\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = [\n      { input: [bool(false), bool(false)], expected: bool(false) },\n      { input: [bool(true), bool(false)], expected: bool(true) },\n      { input: [bool(false), bool(true)], expected: bool(true) },\n      { input: [bool(true), bool(true)], expected: bool(false) },\n    ];\n\n    await run(t, binary('!='), [TypeBool, TypeBool], TypeBool, t.params, cases);\n  });\n"],"file":"bool_logical.spec.js"}