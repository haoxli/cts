{"version":3,"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/extractBits.spec.ts"],"names":["description","makeTestGroup","GPUTest","i32Bits","TypeI32","u32","TypeU32","u32Bits","vec2","vec3","vec4","TypeVec","allInputSources","run","builtin","g","test","specURL","desc","params","u","combine","fn","t","cfg","T","width","V","x","y","z","w","undefined","all_1","all_0","low_1","high_1","pattern","cases","input","expected","inputSource","push"],"mappings":"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","sourcesContent":["export const description = `\nExecution tests for the 'extractBits' builtin function\n\nT is u32 or vecN<u32>\n@const fn extractBits(e: T, offset: u32, count: u32) -> T\nReads bits from an integer, without sign extension.\n\nWhen T is a scalar type, then:\n  w is the bit width of T\n  o = min(offset,w)\n  c = min(count, w - o)\n\nThe result is 0 if c is 0.\nOtherwise, bits 0..c-1 of the result are copied from bits o..o+c-1 of e.\nOther bits of the result are 0.\nComponent-wise when T is a vector.\n\n\nT is i32 or vecN<i32>\n@const fn extractBits(e: T, offset: u32, count: u32) -> T\nReads bits from an integer, with sign extension.\n\nWhen T is a scalar type, then:\n  w is the bit width of T\n  o = min(offset,w)\n  c = min(count, w - o)\n\nThe result is 0 if c is 0.\nOtherwise, bits 0..c-1 of the result are copied from bits o..o+c-1 of e.\nOther bits of the result are the same as bit c-1 of the result.\nComponent-wise when T is a vector.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport {\n  i32Bits,\n  TypeI32,\n  u32,\n  TypeU32,\n  u32Bits,\n  vec2,\n  vec3,\n  vec4,\n  TypeVec,\n} from '../../../../../util/conversion.js';\nimport { allInputSources, Config, run } from '../../expression.js';\n\nimport { builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('u32')\n  .specURL('https://www.w3.org/TR/WGSL/#integer-builtin-functions')\n  .desc(`u32 tests`)\n  .params(u => u.combine('inputSource', allInputSources).combine('width', [1, 2, 3, 4]))\n  .fn(async t => {\n    const cfg: Config = t.params;\n\n    const T = t.params.width === 1 ? TypeU32 : TypeVec(t.params.width, TypeU32);\n\n    const V = (x: number, y?: number, z?: number, w?: number) => {\n      y = y === undefined ? x : y;\n      z = z === undefined ? x : z;\n      w = w === undefined ? x : w;\n\n      switch (t.params.width) {\n        case 1:\n          return u32Bits(x);\n        case 2:\n          return vec2(u32Bits(x), u32Bits(y));\n        case 3:\n          return vec3(u32Bits(x), u32Bits(y), u32Bits(z));\n        default:\n          return vec4(u32Bits(x), u32Bits(y), u32Bits(z), u32Bits(w));\n      }\n    };\n\n    const all_1 = V(0b11111111111111111111111111111111);\n    const all_0 = V(0b00000000000000000000000000000000);\n    const low_1 = V(0b00000000000000000000000000000001);\n    const high_1 = V(0b10000000000000000000000000000000);\n    const pattern = V(\n      0b00000000000111011100000000000000,\n      0b11111111111000000011111111111111,\n      0b00000000010101010101000000000000,\n      0b00000000001010101010100000000000\n    );\n\n    const cases = [\n      { input: [all_0, u32(0), u32(32)], expected: all_0 },\n      { input: [all_0, u32(1), u32(10)], expected: all_0 },\n      { input: [all_0, u32(2), u32(5)], expected: all_0 },\n      { input: [all_0, u32(0), u32(1)], expected: all_0 },\n      { input: [all_0, u32(31), u32(1)], expected: all_0 },\n\n      { input: [all_1, u32(0), u32(32)], expected: all_1 },\n      {\n        input: [all_1, u32(1), u32(10)],\n        expected: V(0b00000000000000000000001111111111),\n      },\n      {\n        input: [all_1, u32(2), u32(5)],\n        expected: V(0b00000000000000000000000000011111),\n      },\n      { input: [all_1, u32(0), u32(1)], expected: low_1 },\n      { input: [all_1, u32(31), u32(1)], expected: low_1 },\n\n      // Patterns\n      { input: [pattern, u32(0), u32(32)], expected: pattern },\n      {\n        input: [pattern, u32(1), u32(31)],\n        expected: V(\n          0b00000000000011101110000000000000,\n          0b01111111111100000001111111111111,\n          0b00000000001010101010100000000000,\n          0b00000000000101010101010000000000\n        ),\n      },\n      {\n        input: [pattern, u32(14), u32(18)],\n        expected: V(\n          0b00000000000000000000000001110111,\n          0b00000000000000111111111110000000,\n          0b00000000000000000000000101010101,\n          0b00000000000000000000000010101010\n        ),\n      },\n      {\n        input: [pattern, u32(14), u32(7)],\n        expected: V(\n          0b00000000000000000000000001110111,\n          0b00000000000000000000000000000000,\n          0b00000000000000000000000001010101,\n          0b00000000000000000000000000101010\n        ),\n      },\n      {\n        input: [pattern, u32(14), u32(4)],\n        expected: V(\n          0b00000000000000000000000000000111,\n          0b00000000000000000000000000000000,\n          0b00000000000000000000000000000101,\n          0b00000000000000000000000000001010\n        ),\n      },\n      {\n        input: [pattern, u32(14), u32(3)],\n        expected: V(\n          0b00000000000000000000000000000111,\n          0b00000000000000000000000000000000,\n          0b00000000000000000000000000000101,\n          0b00000000000000000000000000000010\n        ),\n      },\n      {\n        input: [pattern, u32(18), u32(3)],\n        expected: V(\n          0b00000000000000000000000000000111,\n          0b00000000000000000000000000000000,\n          0b00000000000000000000000000000101,\n          0b00000000000000000000000000000010\n        ),\n      },\n      { input: [low_1, u32(0), u32(1)], expected: low_1 },\n      { input: [high_1, u32(31), u32(1)], expected: low_1 },\n\n      // Zero count\n      { input: [all_1, u32(0), u32(0)], expected: all_0 },\n      { input: [all_0, u32(0), u32(0)], expected: all_0 },\n      { input: [low_1, u32(0), u32(0)], expected: all_0 },\n      { input: [high_1, u32(31), u32(0)], expected: all_0 },\n      { input: [pattern, u32(0), u32(0)], expected: all_0 },\n    ];\n\n    if (t.params.inputSource !== 'const') {\n      cases.push(\n        ...[\n          // End overflow\n          { input: [low_1, u32(0), u32(99)], expected: low_1 },\n          { input: [high_1, u32(31), u32(99)], expected: low_1 },\n          { input: [pattern, u32(0), u32(99)], expected: pattern },\n          {\n            input: [pattern, u32(14), u32(99)],\n            expected: V(\n              0b00000000000000000000000001110111,\n              0b00000000000000111111111110000000,\n              0b00000000000000000000000101010101,\n              0b00000000000000000000000010101010\n            ),\n          },\n        ]\n      );\n    }\n\n    await run(t, builtin('extractBits'), [T, TypeU32, TypeU32], T, cfg, cases);\n  });\n\ng.test('i32')\n  .specURL('https://www.w3.org/TR/WGSL/#integer-builtin-functions')\n  .desc(`i32 tests`)\n  .params(u => u.combine('inputSource', allInputSources).combine('width', [1, 2, 3, 4]))\n  .fn(async t => {\n    const cfg: Config = t.params;\n\n    const T = t.params.width === 1 ? TypeI32 : TypeVec(t.params.width, TypeI32);\n\n    const V = (x: number, y?: number, z?: number, w?: number) => {\n      y = y === undefined ? x : y;\n      z = z === undefined ? x : z;\n      w = w === undefined ? x : w;\n\n      switch (t.params.width) {\n        case 1:\n          return i32Bits(x);\n        case 2:\n          return vec2(i32Bits(x), i32Bits(y));\n        case 3:\n          return vec3(i32Bits(x), i32Bits(y), i32Bits(z));\n        default:\n          return vec4(i32Bits(x), i32Bits(y), i32Bits(z), i32Bits(w));\n      }\n    };\n\n    const all_1 = V(0b11111111111111111111111111111111);\n    const all_0 = V(0b00000000000000000000000000000000);\n    const low_1 = V(0b00000000000000000000000000000001);\n    const high_1 = V(0b10000000000000000000000000000000);\n    const pattern = V(\n      0b00000000000111011100000000000000,\n      0b11111111111000000011111111111111,\n      0b00000000010101010101000000000000,\n      0b00000000001010101010100000000000\n    );\n\n    const cases = [\n      { input: [all_0, u32(0), u32(32)], expected: all_0 },\n      { input: [all_0, u32(1), u32(10)], expected: all_0 },\n      { input: [all_0, u32(2), u32(5)], expected: all_0 },\n      { input: [all_0, u32(0), u32(1)], expected: all_0 },\n      { input: [all_0, u32(31), u32(1)], expected: all_0 },\n\n      { input: [all_1, u32(0), u32(32)], expected: all_1 },\n      { input: [all_1, u32(1), u32(10)], expected: all_1 },\n      { input: [all_1, u32(2), u32(5)], expected: all_1 },\n      { input: [all_1, u32(0), u32(1)], expected: all_1 },\n      { input: [all_1, u32(31), u32(1)], expected: all_1 },\n\n      // Patterns\n      { input: [pattern, u32(0), u32(32)], expected: pattern },\n      {\n        input: [pattern, u32(1), u32(31)],\n        expected: V(\n          0b00000000000011101110000000000000,\n          0b11111111111100000001111111111111,\n          0b00000000001010101010100000000000,\n          0b00000000000101010101010000000000\n        ),\n      },\n      {\n        input: [pattern, u32(14), u32(18)],\n        expected: V(\n          0b00000000000000000000000001110111,\n          0b11111111111111111111111110000000,\n          0b00000000000000000000000101010101,\n          0b00000000000000000000000010101010\n        ),\n      },\n      {\n        input: [pattern, u32(14), u32(7)],\n        expected: V(\n          0b11111111111111111111111111110111,\n          0b00000000000000000000000000000000,\n          0b11111111111111111111111111010101,\n          0b00000000000000000000000000101010\n        ),\n      },\n      {\n        input: [pattern, u32(14), u32(4)],\n        expected: V(\n          0b00000000000000000000000000000111,\n          0b00000000000000000000000000000000,\n          0b00000000000000000000000000000101,\n          0b11111111111111111111111111111010\n        ),\n      },\n      {\n        input: [pattern, u32(14), u32(3)],\n        expected: V(\n          0b11111111111111111111111111111111,\n          0b00000000000000000000000000000000,\n          0b11111111111111111111111111111101,\n          0b00000000000000000000000000000010\n        ),\n      },\n      {\n        input: [pattern, u32(18), u32(3)],\n        expected: V(\n          0b11111111111111111111111111111111,\n          0b00000000000000000000000000000000,\n          0b11111111111111111111111111111101,\n          0b00000000000000000000000000000010\n        ),\n      },\n      { input: [low_1, u32(0), u32(1)], expected: all_1 },\n      { input: [high_1, u32(31), u32(1)], expected: all_1 },\n\n      // Zero count\n      { input: [all_1, u32(0), u32(0)], expected: all_0 },\n      { input: [all_0, u32(0), u32(0)], expected: all_0 },\n      { input: [low_1, u32(0), u32(0)], expected: all_0 },\n      { input: [high_1, u32(31), u32(0)], expected: all_0 },\n      { input: [pattern, u32(0), u32(0)], expected: all_0 },\n    ];\n\n    if (t.params.inputSource !== 'const') {\n      cases.push(\n        ...[\n          // End overflow\n          { input: [low_1, u32(0), u32(99)], expected: low_1 },\n          { input: [high_1, u32(31), u32(99)], expected: all_1 },\n          { input: [pattern, u32(0), u32(99)], expected: pattern },\n          {\n            input: [pattern, u32(14), u32(99)],\n            expected: V(\n              0b00000000000000000000000001110111,\n              0b11111111111111111111111110000000,\n              0b00000000000000000000000101010101,\n              0b00000000000000000000000010101010\n            ),\n          },\n        ]\n      );\n    }\n\n    await run(t, builtin('extractBits'), [T, TypeU32, TypeU32], T, cfg, cases);\n  });\n"],"file":"extractBits.spec.js"}