{"version":3,"sources":["../../../../src/webgpu/shader/validation/builtin_function.spec.ts"],"names":["description","makeTestGroup","ShaderValidationTest","g","kTestTypes","test","desc","params","u","combine","fn","t","result","eT","code","validT","T","expecte","expectation","indexOf","expectCompileResult","e1T","e2T","expecte1","expecte2","e3T","expecte3","e2I","I","e3U","U","e3I"],"mappings":"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","sourcesContent":["export const description = 'builtin functions';\n\nimport { makeTestGroup } from '../../../common/framework/test_group.js';\n\nimport { ShaderValidationTest } from './shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kTestTypes = [\n  'f32',\n  'i32',\n  'u32',\n  'bool',\n  'vec4<f32>',\n  'vec4<i32>',\n  'vec4<u32>',\n  'vec4<bool>',\n  'mat4x4<f32>',\n  // TODO(sarahM0): 12 is a random number here. find a solution to replace it.\n  'array<f32, 12>',\n  'array<i32, 12>',\n  'array<u32, 12>',\n  'array<bool, 12>',\n] as const;\n\ng.test('abs')\n  .desc(\n    `\nabs(e: T ) -> T\n`\n  )\n  .params(u => u.combine('result', kTestTypes).combine('eT', kTestTypes))\n  .fn(t => {\n    const { result, eT } = t.params;\n\n    const code = `\n[[stage(vertex)]]\nfn vertex_main() -> [[builtin(position)]] vec4<f32> {\n  var v:${result} = abs(${eT}());\n  return vec4<f32>();\n}\n`;\n    // validT\n    const validT = [\n      'f32',\n      'i32',\n      'u32',\n      'vec2<f32>',\n      'vec3<f32>',\n      'vec4<f32>',\n      'vec2<i32>',\n      'vec3<i32>',\n      'vec4<i32>',\n      'vec2<u32>',\n      'vec3<u32>',\n      'vec4<u32>',\n    ];\n\n    // init T\n    const T = eT;\n\n    // bind expectations to T\n    const expecte = eT === T;\n\n    // final expectation\n    const expectation = expecte && result === T && validT.indexOf(result) > -1;\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('acos')\n  .desc(\n    `\nacos(e: T ) -> T\n`\n  )\n  .params(u => u.combine('result', kTestTypes).combine('eT', kTestTypes))\n  .fn(t => {\n    const { result, eT } = t.params;\n\n    const code = `\n[[stage(vertex)]]\nfn vertex_main() -> [[builtin(position)]] vec4<f32> {\n  var v:${result} = acos(${eT}());\n  return vec4<f32>();\n}\n`;\n    // validT\n    const validT = ['f32', 'vec2<f32>', 'vec3<f32>', 'vec4<f32>'];\n\n    // init T\n    const T = eT;\n\n    // bind expectations to T\n    const expecte = eT === T;\n\n    // final expectation\n    const expectation = expecte && result === T && validT.indexOf(result) > -1;\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('asin')\n  .desc(\n    `\nasin(e: T ) -> T\n`\n  )\n  .params(u => u.combine('result', kTestTypes).combine('eT', kTestTypes))\n  .fn(t => {\n    const { result, eT } = t.params;\n\n    const code = `\n[[stage(vertex)]]\nfn vertex_main() -> [[builtin(position)]] vec4<f32> {\n  var v:${result} = asin(${eT}());\n  return vec4<f32>();\n}\n`;\n    // validT\n    const validT = ['f32', 'vec2<f32>', 'vec3<f32>', 'vec4<f32>'];\n\n    // init T\n    const T = eT;\n\n    // bind expectations to T\n    const expecte = eT === T;\n\n    // final expectation\n    const expectation = expecte && result === T && validT.indexOf(result) > -1;\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('atan')\n  .desc(\n    `\natan(e: T ) -> T\n`\n  )\n  .params(u => u.combine('result', kTestTypes).combine('eT', kTestTypes))\n  .fn(t => {\n    const { result, eT } = t.params;\n\n    const code = `\n[[stage(vertex)]]\nfn vertex_main() -> [[builtin(position)]] vec4<f32> {\n  var v:${result} = atan(${eT}());\n  return vec4<f32>();\n}\n`;\n    // validT\n    const validT = ['f32', 'vec2<f32>', 'vec3<f32>', 'vec4<f32>'];\n\n    // init T\n    const T = eT;\n\n    // bind expectations to T\n    const expecte = eT === T;\n\n    // final expectation\n    const expectation = expecte && result === T && validT.indexOf(result) > -1;\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('atan2')\n  .desc(\n    `\natan2(e1: T ,e2: T ) -> T\n`\n  )\n  .params(u =>\n    u.combine('result', kTestTypes).combine('e1T', kTestTypes).combine('e2T', kTestTypes)\n  )\n  .fn(t => {\n    const { result, e1T, e2T } = t.params;\n\n    const code = `\n[[stage(vertex)]]\nfn vertex_main() -> [[builtin(position)]] vec4<f32> {\n  var v:${result} = atan2(${e1T}(), ${e2T}());\n  return vec4<f32>();\n}\n`;\n    // validT\n    const validT = ['f32', 'vec2<f32>', 'vec3<f32>', 'vec4<f32>'];\n\n    // init T\n    const T = e1T;\n\n    // bind expectations to T\n    const expecte1 = e1T === T;\n    const expecte2 = e2T === T;\n\n    // final expectation\n    const expectation = expecte1 && expecte2 && result === T && validT.indexOf(result) > -1;\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('ceil')\n  .desc(\n    `\nceil(e: T ) -> T\n`\n  )\n  .params(u => u.combine('result', kTestTypes).combine('eT', kTestTypes))\n  .fn(t => {\n    const { result, eT } = t.params;\n\n    const code = `\n[[stage(vertex)]]\nfn vertex_main() -> [[builtin(position)]] vec4<f32> {\n  var v:${result} = ceil(${eT}());\n  return vec4<f32>();\n}\n`;\n    // validT\n    const validT = ['f32', 'vec2<f32>', 'vec3<f32>', 'vec4<f32>'];\n\n    // init T\n    const T = eT;\n\n    // bind expectations to T\n    const expecte = eT === T;\n\n    // final expectation\n    const expectation = expecte && result === T && validT.indexOf(result) > -1;\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('clamp')\n  .desc(\n    `\nclamp(e1: T ,e2: T ,e3: T) -> T\n`\n  )\n  .params(u =>\n    u\n      .combine('result', kTestTypes)\n      .combine('e1T', kTestTypes)\n      .combine('e2T', kTestTypes)\n      .combine('e3T', kTestTypes)\n  )\n  .fn(t => {\n    const { result, e1T, e2T, e3T } = t.params;\n\n    const code = `\n[[stage(vertex)]]\nfn vertex_main() -> [[builtin(position)]] vec4<f32> {\n  var v:${result} = clamp(${e1T}(), ${e2T}(), ${e3T}());\n  return vec4<f32>();\n}\n`;\n    // validT\n    const validT = [\n      'f32',\n      'u32',\n      'i32',\n      'vec2<f32>',\n      'vec3<f32>',\n      'vec4<f32>',\n      'vec2<u32>',\n      'vec3<u32>',\n      'vec4<u32>',\n      'vec2<i32>',\n      'vec3<i32>',\n      'vec4<i32>',\n    ];\n\n    // init T\n    const T = e1T;\n\n    // bind expectations to T\n    const expecte1 = e1T === T;\n    const expecte2 = e2T === T;\n    const expecte3 = e3T === T;\n\n    // final expectation\n    const expectation =\n      expecte1 && expecte2 && expecte3 && result === T && validT.indexOf(result) > -1;\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('cos')\n  .desc(\n    `\ncos(e: T ) -> T\n`\n  )\n  .params(u => u.combine('result', kTestTypes).combine('eT', kTestTypes))\n  .fn(t => {\n    const { result, eT } = t.params;\n\n    const code = `\n[[stage(vertex)]]\nfn vertex_main() -> [[builtin(position)]] vec4<f32> {\n  var v:${result} = cos(${eT}());\n  return vec4<f32>();\n}\n`;\n    // validT\n    const validT = ['f32', 'vec2<f32>', 'vec3<f32>', 'vec4<f32>'];\n\n    // init T\n    const T = eT;\n\n    // bind expectations to T\n    const expecte = eT === T;\n\n    // final expectation\n    const expectation = expecte && result === T && validT.indexOf(result) > -1;\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('cosh')\n  .desc(\n    `\ncosh(e: T ) -> T\n`\n  )\n  .params(u => u.combine('result', kTestTypes).combine('eT', kTestTypes))\n  .fn(t => {\n    const { result, eT } = t.params;\n\n    const code = `\n[[stage(vertex)]]\nfn vertex_main() -> [[builtin(position)]] vec4<f32> {\n  var v:${result} = cosh(${eT}());\n  return vec4<f32>();\n}\n`;\n    // validT\n    const validT = ['f32', 'vec2<f32>', 'vec3<f32>', 'vec4<f32>'];\n\n    // init T\n    const T = eT;\n\n    // bind expectations to T\n    const expecte = eT === T;\n\n    // final expectation\n    const expectation = expecte && result === T && validT.indexOf(result) > -1;\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('exp')\n  .desc(\n    `\nexp(e1: T ) -> T\n`\n  )\n  .params(u => u.combine('result', kTestTypes).combine('e1T', kTestTypes))\n  .fn(t => {\n    const { result, e1T } = t.params;\n\n    const code = `\n[[stage(vertex)]]\nfn vertex_main() -> [[builtin(position)]] vec4<f32> {\n  var v:${result} = exp(${e1T}());\n  return vec4<f32>();\n}\n`;\n    // validT\n    const validT = ['f32', 'vec2<f32>', 'vec3<f32>', 'vec4<f32>'];\n\n    // init T\n    const T = e1T;\n\n    // bind expectations to T\n    const expecte1 = e1T === T;\n\n    // final expectation\n    const expectation = expecte1 && result === T && validT.indexOf(result) > -1;\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('exp2')\n  .desc(\n    `\nexp2(e: T ) -> T\n`\n  )\n  .params(u => u.combine('result', kTestTypes).combine('eT', kTestTypes))\n  .fn(t => {\n    const { result, eT } = t.params;\n\n    const code = `\n[[stage(vertex)]]\nfn vertex_main() -> [[builtin(position)]] vec4<f32> {\n  var v:${result} = exp2(${eT}());\n  return vec4<f32>();\n}\n`;\n    // validT\n    const validT = ['f32', 'vec2<f32>', 'vec3<f32>', 'vec4<f32>'];\n\n    // init T\n    const T = eT;\n\n    // bind expectations to T\n    const expecte = eT === T;\n\n    // final expectation\n    const expectation = expecte && result === T && validT.indexOf(result) > -1;\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('faceForward')\n  .desc(\n    `\nfaceForward(e1: T ,e2: T ,e3: T ) -> T\n`\n  )\n  .params(u =>\n    u\n      .combine('result', kTestTypes)\n      .combine('e1T', kTestTypes)\n      .combine('e2T', kTestTypes)\n      .combine('e3T', kTestTypes)\n  )\n  .fn(t => {\n    const { result, e1T, e2T, e3T } = t.params;\n\n    const code = `\n[[stage(vertex)]]\nfn vertex_main() -> [[builtin(position)]] vec4<f32> {\n  var v:${result} = faceForward(${e1T}(), ${e2T}(), ${e3T}());\n  return vec4<f32>();\n}\n`;\n    // validT\n    const validT = ['vec2<f32>', 'vec3<f32>', 'vec4<f32>'];\n\n    // init T\n    const T = e1T;\n\n    // bind expectations to T\n    const expecte1 = e1T === T;\n    const expecte2 = e2T === T;\n    const expecte3 = e3T === T;\n\n    // final expectation\n    const expectation =\n      expecte1 && expecte2 && expecte3 && result === T && validT.indexOf(result) > -1;\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('floor')\n  .desc(\n    `\nfloor(e: T ) -> T\n`\n  )\n  .params(u => u.combine('result', kTestTypes).combine('eT', kTestTypes))\n  .fn(t => {\n    const { result, eT } = t.params;\n\n    const code = `\n[[stage(vertex)]]\nfn vertex_main() -> [[builtin(position)]] vec4<f32> {\n  var v:${result} = floor(${eT}());\n  return vec4<f32>();\n}\n`;\n    // validT\n    const validT = ['f32', 'vec2<f32>', 'vec3<f32>', 'vec4<f32>'];\n\n    // init T\n    const T = eT;\n\n    // bind expectations to T\n    const expecte = eT === T;\n\n    // final expectation\n    const expectation = expecte && result === T && validT.indexOf(result) > -1;\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('fma')\n  .desc(\n    `\nfma(e1: T ,e2: T ,e3: T ) -> T\n`\n  )\n  .params(u =>\n    u\n      .combine('result', kTestTypes)\n      .combine('e1T', kTestTypes)\n      .combine('e2T', kTestTypes)\n      .combine('e3T', kTestTypes)\n  )\n  .fn(t => {\n    const { result, e1T, e2T, e3T } = t.params;\n\n    const code = `\n[[stage(vertex)]]\nfn vertex_main() -> [[builtin(position)]] vec4<f32> {\n  var v:${result} = fma(${e1T}(), ${e2T}(), ${e3T}());\n  return vec4<f32>();\n}\n`;\n    // validT\n    const validT = ['f32'];\n\n    // init T\n    const T = e1T;\n\n    // bind expectations to T\n    const expecte1 = e1T === T;\n    const expecte2 = e2T === T;\n    const expecte3 = e3T === T;\n\n    // final expectation\n    const expectation =\n      expecte1 && expecte2 && expecte3 && result === T && validT.indexOf(result) > -1;\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('fract')\n  .desc(\n    `\nfract(e: T ) -> T\n`\n  )\n  .params(u => u.combine('result', kTestTypes).combine('eT', kTestTypes))\n  .fn(t => {\n    const { result, eT } = t.params;\n\n    const code = `\n[[stage(vertex)]]\nfn vertex_main() -> [[builtin(position)]] vec4<f32> {\n  var v:${result} = fract(${eT}());\n  return vec4<f32>();\n}\n`;\n    // validT\n    const validT = ['f32', 'vec2<f32>', 'vec3<f32>', 'vec4<f32>'];\n\n    // init T\n    const T = eT;\n\n    // bind expectations to T\n    const expecte = eT === T;\n\n    // final expectation\n    const expectation = expecte && result === T && validT.indexOf(result) > -1;\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('inverseSqrt')\n  .desc(\n    `\ninverseSqrt(e: T ) -> T\n`\n  )\n  .params(u => u.combine('result', kTestTypes).combine('eT', kTestTypes))\n  .fn(t => {\n    const { result, eT } = t.params;\n\n    const code = `\n[[stage(vertex)]]\nfn vertex_main() -> [[builtin(position)]] vec4<f32> {\n  var v:${result} = inverseSqrt(${eT}());\n  return vec4<f32>();\n}\n`;\n    // validT\n    const validT = ['f32', 'vec2<f32>', 'vec3<f32>', 'vec4<f32>'];\n\n    // init T\n    const T = eT;\n\n    // bind expectations to T\n    const expecte = eT === T;\n\n    // final expectation\n    const expectation = expecte && result === T && validT.indexOf(result) > -1;\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('ldexp')\n  .desc(\n    `\nldexp(e1: T ,e2: I ) -> T\n`\n  )\n  .params(u =>\n    u.combine('result', kTestTypes).combine('e1T', kTestTypes).combine('e2I', kTestTypes)\n  )\n  .fn(t => {\n    const { result, e1T, e2I } = t.params;\n\n    const code = `\n[[stage(vertex)]]\nfn vertex_main() -> [[builtin(position)]] vec4<f32> {\n  var v:${result} = ldexp(${e1T}(), ${e2I}());\n  return vec4<f32>();\n}\n`;\n    // validT\n    const validT = ['f32', 'vec2<f32>', 'vec3<f32>', 'vec4<f32>'];\n\n    // init T\n    const T = e1T;\n    const I = e2I;\n\n    // bind expectations to T\n    const expecte1 = e1T === T;\n    const expecte2 = e2I === I;\n\n    // final expectation\n    const expectation = expecte1 && expecte2 && result === T && validT.indexOf(result) > -1;\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('log')\n  .desc(\n    `\nlog(e: T ) -> T\n`\n  )\n  .params(u => u.combine('result', kTestTypes).combine('eT', kTestTypes))\n  .fn(t => {\n    const { result, eT } = t.params;\n\n    const code = `\n[[stage(vertex)]]\nfn vertex_main() -> [[builtin(position)]] vec4<f32> {\n  var v:${result} = log(${eT}());\n  return vec4<f32>();\n}\n`;\n    // validT\n    const validT = ['f32', 'vec2<f32>', 'vec3<f32>', 'vec4<f32>'];\n\n    // init T\n    const T = eT;\n\n    // bind expectations to T\n    const expecte = eT === T;\n\n    // final expectation\n    const expectation = expecte && result === T && validT.indexOf(result) > -1;\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('log2')\n  .desc(\n    `\nlog2(e: T ) -> T\n`\n  )\n  .params(u => u.combine('result', kTestTypes).combine('eT', kTestTypes))\n  .fn(t => {\n    const { result, eT } = t.params;\n\n    const code = `\n[[stage(vertex)]]\nfn vertex_main() -> [[builtin(position)]] vec4<f32> {\n  var v:${result} = log2(${eT}());\n  return vec4<f32>();\n}\n`;\n    // validT\n    const validT = ['f32', 'vec2<f32>', 'vec3<f32>', 'vec4<f32>'];\n\n    // init T\n    const T = eT;\n\n    // bind expectations to T\n    const expecte = eT === T;\n\n    // final expectation\n    const expectation = expecte && result === T && validT.indexOf(result) > -1;\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('max')\n  .desc(\n    `\nmax(e1: T ,e2: T ) -> T\n`\n  )\n  .params(u =>\n    u.combine('result', kTestTypes).combine('e1T', kTestTypes).combine('e2T', kTestTypes)\n  )\n  .fn(t => {\n    const { result, e1T, e2T } = t.params;\n\n    const code = `\n[[stage(vertex)]]\nfn vertex_main() -> [[builtin(position)]] vec4<f32> {\n  var v:${result} = max(${e1T}(), ${e2T}());\n  return vec4<f32>();\n}\n`;\n    // validT\n    const validT = [\n      'f32',\n      'u32',\n      'i32',\n      'vec2<f32>',\n      'vec3<f32>',\n      'vec4<f32>',\n      'vec2<u32>',\n      'vec3<u32>',\n      'vec4<u32>',\n      'vec2<i32>',\n      'vec3<i32>',\n      'vec4<i32>',\n    ];\n\n    // init T\n    const T = e1T;\n\n    // bind expectations to T\n    const expecte1 = e1T === T;\n    const expecte2 = e2T === T;\n\n    // final expectation\n    const expectation = expecte1 && expecte2 && result === T && validT.indexOf(result) > -1;\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('min')\n  .desc(\n    `\nmin(e1: T ,e2: T ) -> T\n`\n  )\n  .params(u =>\n    u.combine('result', kTestTypes).combine('e1T', kTestTypes).combine('e2T', kTestTypes)\n  )\n  .fn(t => {\n    const { result, e1T, e2T } = t.params;\n\n    const code = `\n[[stage(vertex)]]\nfn vertex_main() -> [[builtin(position)]] vec4<f32> {\n  var v:${result} = min(${e1T}(), ${e2T}());\n  return vec4<f32>();\n}\n`;\n    // validT\n    const validT = [\n      'f32',\n      'u32',\n      'i32',\n      'vec2<f32>',\n      'vec3<f32>',\n      'vec4<f32>',\n      'vec2<u32>',\n      'vec3<u32>',\n      'vec4<u32>',\n      'vec2<i32>',\n      'vec3<i32>',\n      'vec4<i32>',\n    ];\n\n    // init T\n    const T = e1T;\n\n    // bind expectations to T\n    const expecte1 = e1T === T;\n    const expecte2 = e2T === T;\n\n    // final expectation\n    const expectation = expecte1 && expecte2 && result === T && validT.indexOf(result) > -1;\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('mix')\n  .desc(\n    `\nmix(e1: T ,e2: T ,e3: U) -> T\n`\n  )\n  .params(u =>\n    u\n      .combine('result', kTestTypes)\n      .combine('e1T', kTestTypes)\n      .combine('e2T', kTestTypes)\n      .combine('e3U', kTestTypes)\n  )\n  .fn(t => {\n    const { result, e1T, e2T, e3U } = t.params;\n\n    const code = `\n[[stage(vertex)]]\nfn vertex_main() -> [[builtin(position)]] vec4<f32> {\n  var v:${result} = mix(${e1T}(), ${e2T}(), ${e3U}());\n  return vec4<f32>();\n}\n`;\n    // validT\n    const validT = ['f32', 'vec2<f32>', 'vec3<f32>', 'vec4<f32>'];\n\n    // init T\n    const T = e1T;\n    const U = e3U;\n\n    // bind expectations to T\n    const expecte1 = e1T === T;\n    const expecte2 = e2T === T;\n    const expecte3 = e3U === U;\n\n    // final expectation\n    const expectation =\n      expecte1 && expecte2 && expecte3 && result === T && validT.indexOf(result) > -1;\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('pow')\n  .desc(\n    `\npow(e1: T ,e2: T ) -> T\n`\n  )\n  .params(u =>\n    u.combine('result', kTestTypes).combine('e1T', kTestTypes).combine('e2T', kTestTypes)\n  )\n  .fn(t => {\n    const { result, e1T, e2T } = t.params;\n\n    const code = `\n[[stage(vertex)]]\nfn vertex_main() -> [[builtin(position)]] vec4<f32> {\n  var v:${result} = pow(${e1T}(), ${e2T}());\n  return vec4<f32>();\n}\n`;\n    // validT\n    const validT = ['f32', 'vec2<f32>', 'vec3<f32>', 'vec4<f32>'];\n\n    // init T\n    const T = e1T;\n\n    // bind expectations to T\n    const expecte1 = e1T === T;\n    const expecte2 = e2T === T;\n\n    // final expectation\n    const expectation = expecte1 && expecte2 && result === T && validT.indexOf(result) > -1;\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('quantizeToF16')\n  .desc(\n    `\nquantizeToF16(e: T ) -> T\n`\n  )\n  .params(u => u.combine('result', kTestTypes).combine('eT', kTestTypes))\n  .fn(t => {\n    const { result, eT } = t.params;\n\n    const code = `\n[[stage(vertex)]]\nfn vertex_main() -> [[builtin(position)]] vec4<f32> {\n  var v:${result} = quantizeToF16(${eT}());\n  return vec4<f32>();\n}\n`;\n    // validT\n    const validT = ['f32', 'vec2<f32>', 'vec3<f32>', 'vec4<f32>'];\n\n    // init T\n    const T = eT;\n\n    // bind expectations to T\n    const expecte = eT === T;\n\n    // final expectation\n    const expectation = expecte && result === T && validT.indexOf(result) > -1;\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('reflect')\n  .desc(\n    `\nreflect(e1: T ,e2: T ) -> T\n`\n  )\n  .params(u =>\n    u.combine('result', kTestTypes).combine('e1T', kTestTypes).combine('e2T', kTestTypes)\n  )\n  .fn(t => {\n    const { result, e1T, e2T } = t.params;\n\n    const code = `\n[[stage(vertex)]]\nfn vertex_main() -> [[builtin(position)]] vec4<f32> {\n  var v:${result} = reflect(${e1T}(), ${e2T}());\n  return vec4<f32>();\n}\n`;\n    // validT\n    const validT = ['vec2<f32>', 'vec3<f32>', 'vec4<f32>'];\n\n    // init T\n    const T = e1T;\n\n    // bind expectations to T\n    const expecte1 = e1T === T;\n    const expecte2 = e2T === T;\n\n    // final expectation\n    const expectation = expecte1 && expecte2 && result === T && validT.indexOf(result) > -1;\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('refract')\n  .desc(\n    `\nrefract(e1: T ,e2: T ,e3: I ) -> T\n`\n  )\n  .params(u =>\n    u\n      .combine('result', kTestTypes)\n      .combine('e1T', kTestTypes)\n      .combine('e2T', kTestTypes)\n      .combine('e3I', kTestTypes)\n  )\n  .fn(t => {\n    const { result, e1T, e2T, e3I } = t.params;\n\n    const code = `\n[[stage(vertex)]]\nfn vertex_main() -> [[builtin(position)]] vec4<f32> {\n  var v:${result} = refract(${e1T}(), ${e2T}(), ${e3I}());\n  return vec4<f32>();\n}\n`;\n    // validT\n    const validT = ['vec2<f32>', 'vec3<f32>', 'vec4<f32>I'];\n\n    // init T\n    const T = e1T;\n    const I = e3I;\n\n    // bind expectations to T\n    const expecte1 = e1T === T;\n    const expecte2 = e2T === T;\n    const expecte3 = e3I === I;\n\n    // final expectation\n    const expectation =\n      expecte1 && expecte2 && expecte3 && result === T && validT.indexOf(result) > -1;\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('round')\n  .desc(\n    `\nround(e: T ) -> T\n`\n  )\n  .params(u => u.combine('result', kTestTypes).combine('eT', kTestTypes))\n  .fn(t => {\n    const { result, eT } = t.params;\n\n    const code = `\n[[stage(vertex)]]\nfn vertex_main() -> [[builtin(position)]] vec4<f32> {\n  var v:${result} = round(${eT}());\n  return vec4<f32>();\n}\n`;\n    // validT\n    const validT = ['f32', 'vec2<f32>', 'vec3<f32>', 'vec4<f32>'];\n\n    // init T\n    const T = eT;\n\n    // bind expectations to T\n    const expecte = eT === T;\n\n    // final expectation\n    const expectation = expecte && result === T && validT.indexOf(result) > -1;\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('sign')\n  .desc(\n    `\nsign(e: T ) -> T\n`\n  )\n  .params(u => u.combine('result', kTestTypes).combine('eT', kTestTypes))\n  .fn(t => {\n    const { result, eT } = t.params;\n\n    const code = `\n[[stage(vertex)]]\nfn vertex_main() -> [[builtin(position)]] vec4<f32> {\n  var v:${result} = sign(${eT}());\n  return vec4<f32>();\n}\n`;\n    // validT\n    const validT = ['f32', 'vec2<f32>', 'vec3<f32>', 'vec4<f32>'];\n\n    // init T\n    const T = eT;\n\n    // bind expectations to T\n    const expecte = eT === T;\n\n    // final expectation\n    const expectation = expecte && result === T && validT.indexOf(result) > -1;\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('sin')\n  .desc(\n    `\nsin(e: T ) -> T\n`\n  )\n  .params(u => u.combine('result', kTestTypes).combine('eT', kTestTypes))\n  .fn(t => {\n    const { result, eT } = t.params;\n\n    const code = `\n[[stage(vertex)]]\nfn vertex_main() -> [[builtin(position)]] vec4<f32> {\n  var v:${result} = sin(${eT}());\n  return vec4<f32>();\n}\n`;\n    // validT\n    const validT = ['f32', 'vec2<f32>', 'vec3<f32>', 'vec4<f32>'];\n\n    // init T\n    const T = eT;\n\n    // bind expectations to T\n    const expecte = eT === T;\n\n    // final expectation\n    const expectation = expecte && result === T && validT.indexOf(result) > -1;\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('sinh')\n  .desc(\n    `\nsinh(e: T ) -> T\n`\n  )\n  .params(u => u.combine('result', kTestTypes).combine('eT', kTestTypes))\n  .fn(t => {\n    const { result, eT } = t.params;\n\n    const code = `\n[[stage(vertex)]]\nfn vertex_main() -> [[builtin(position)]] vec4<f32> {\n  var v:${result} = sinh(${eT}());\n  return vec4<f32>();\n}\n`;\n    // validT\n    const validT = ['f32', 'vec2<f32>', 'vec3<f32>', 'vec4<f32>'];\n\n    // init T\n    const T = eT;\n\n    // bind expectations to T\n    const expecte = eT === T;\n\n    // final expectation\n    const expectation = expecte && result === T && validT.indexOf(result) > -1;\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('smoothStep')\n  .desc(\n    `\nsmoothStep(e1: T ,e2: T ,e3: T ) -> T\n`\n  )\n  .params(u =>\n    u\n      .combine('result', kTestTypes)\n      .combine('e1T', kTestTypes)\n      .combine('e2T', kTestTypes)\n      .combine('e3T', kTestTypes)\n  )\n  .fn(t => {\n    const { result, e1T, e2T, e3T } = t.params;\n\n    const code = `\n[[stage(vertex)]]\nfn vertex_main() -> [[builtin(position)]] vec4<f32> {\n  var v:${result} = smoothStep(${e1T}(), ${e2T}(), ${e3T}());\n  return vec4<f32>();\n}\n`;\n    // validT\n    const validT = ['f32', 'vec2<f32>', 'vec3<f32>', 'vec4<f32>'];\n\n    // init T\n    const T = e1T;\n\n    // bind expectations to T\n    const expecte1 = e1T === T;\n    const expecte2 = e2T === T;\n    const expecte3 = e3T === T;\n\n    // final expectation\n    const expectation =\n      expecte1 && expecte2 && expecte3 && result === T && validT.indexOf(result) > -1;\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('sqrt')\n  .desc(\n    `\nsqrt(e: T ) -> T\n`\n  )\n  .params(u => u.combine('result', kTestTypes).combine('eT', kTestTypes))\n  .fn(t => {\n    const { result, eT } = t.params;\n\n    const code = `\n[[stage(vertex)]]\nfn vertex_main() -> [[builtin(position)]] vec4<f32> {\n  var v:${result} = sqrt(${eT}());\n  return vec4<f32>();\n}\n`;\n    // validT\n    const validT = ['f32', 'vec2<f32>', 'vec3<f32>', 'vec4<f32>'];\n\n    // init T\n    const T = eT;\n\n    // bind expectations to T\n    const expecte = eT === T;\n\n    // final expectation\n    const expectation = expecte && result === T && validT.indexOf(result) > -1;\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('step')\n  .desc(\n    `\nstep(e1: T ,e2: T ) -> T\n`\n  )\n  .params(u =>\n    u.combine('result', kTestTypes).combine('e1T', kTestTypes).combine('e2T', kTestTypes)\n  )\n  .fn(t => {\n    const { result, e1T, e2T } = t.params;\n\n    const code = `\n[[stage(vertex)]]\nfn vertex_main() -> [[builtin(position)]] vec4<f32> {\n  var v:${result} = step(${e1T}(), ${e2T}());\n  return vec4<f32>();\n}\n`;\n    // validT\n    const validT = ['f32', 'vec2<f32>', 'vec3<f32>', 'vec4<f32>'];\n\n    // init T\n    const T = e1T;\n\n    // bind expectations to T\n    const expecte1 = e1T === T;\n    const expecte2 = e2T === T;\n\n    // final expectation\n    const expectation = expecte1 && expecte2 && result === T && validT.indexOf(result) > -1;\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('tan')\n  .desc(\n    `\ntan(e: T ) -> T\n`\n  )\n  .params(u => u.combine('result', kTestTypes).combine('eT', kTestTypes))\n  .fn(t => {\n    const { result, eT } = t.params;\n\n    const code = `\n[[stage(vertex)]]\nfn vertex_main() -> [[builtin(position)]] vec4<f32> {\n  var v:${result} = tan(${eT}());\n  return vec4<f32>();\n}\n`;\n    // validT\n    const validT = ['f32', 'vec2<f32>', 'vec3<f32>', 'vec4<f32>'];\n\n    // init T\n    const T = eT;\n\n    // bind expectations to T\n    const expecte = eT === T;\n\n    // final expectation\n    const expectation = expecte && result === T && validT.indexOf(result) > -1;\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('tanh')\n  .desc(\n    `\ntanh(e: T ) -> T\n`\n  )\n  .params(u => u.combine('result', kTestTypes).combine('eT', kTestTypes))\n  .fn(t => {\n    const { result, eT } = t.params;\n\n    const code = `\n[[stage(vertex)]]\nfn vertex_main() -> [[builtin(position)]] vec4<f32> {\n  var v:${result} = tanh(${eT}());\n  return vec4<f32>();\n}\n`;\n    // validT\n    const validT = ['f32', 'vec2<f32>', 'vec3<f32>', 'vec4<f32>'];\n\n    // init T\n    const T = eT;\n\n    // bind expectations to T\n    const expecte = eT === T;\n\n    // final expectation\n    const expectation = expecte && result === T && validT.indexOf(result) > -1;\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('trunc')\n  .desc(\n    `\ntrunc(e: T ) -> T\n`\n  )\n  .params(u => u.combine('result', kTestTypes).combine('eT', kTestTypes))\n  .fn(t => {\n    const { result, eT } = t.params;\n\n    const code = `\n[[stage(vertex)]]\nfn vertex_main() -> [[builtin(position)]] vec4<f32> {\n  var v:${result} = trunc(${eT}());\n  return vec4<f32>();\n}\n`;\n    // validT\n    const validT = ['f32', 'vec2<f32>', 'vec3<f32>', 'vec4<f32>'];\n\n    // init T\n    const T = eT;\n\n    // bind expectations to T\n    const expecte = eT === T;\n\n    // final expectation\n    const expectation = expecte && result === T && validT.indexOf(result) > -1;\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('countOneBits')\n  .desc(\n    `\ncountOneBits(e: T ) -> T\n`\n  )\n  .params(u => u.combine('result', kTestTypes).combine('eT', kTestTypes))\n  .fn(t => {\n    const { result, eT } = t.params;\n\n    const code = `\n[[stage(vertex)]]\nfn vertex_main() -> [[builtin(position)]] vec4<f32> {\n  var v:${result} = countOneBits(${eT}());\n  return vec4<f32>();\n}\n`;\n    // validT\n    const validT = ['i32,'];\n\n    // init T\n    const T = eT;\n\n    // bind expectations to T\n    const expecte = eT === T;\n\n    // final expectation\n    const expectation = expecte && result === T && validT.indexOf(result) > -1;\n    t.expectCompileResult(expectation, code);\n  });\n\ng.test('reverseBits')\n  .desc(\n    `\nreverseBits(e: T ) -> T\n`\n  )\n  .params(u => u.combine('result', kTestTypes).combine('eT', kTestTypes))\n  .fn(t => {\n    const { result, eT } = t.params;\n\n    const code = `\n[[stage(vertex)]]\nfn vertex_main() -> [[builtin(position)]] vec4<f32> {\n  var v:${result} = reverseBits(${eT}());\n  return vec4<f32>();\n}\n`;\n    // validT\n    const validT = ['i32,'];\n\n    // init T\n    const T = eT;\n\n    // bind expectations to T\n    const expecte = eT === T;\n\n    // final expectation\n    const expectation = expecte && result === T && validT.indexOf(result) > -1;\n    t.expectCompileResult(expectation, code);\n  });\n"],"file":"builtin_function.spec.js"}