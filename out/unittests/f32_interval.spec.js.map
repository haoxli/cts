{"version":3,"sources":["../../src/unittests/f32_interval.spec.ts"],"names":["description","makeTestGroup","objectEquals","kValue","absInterval","absoluteErrorInterval","acosInterval","acoshAlternativeInterval","acoshPrimaryInterval","additionInterval","asinInterval","asinhInterval","atanInterval","atan2Interval","atanhInterval","ceilInterval","clampMedianInterval","clampMinMaxInterval","correctlyRoundedInterval","cosInterval","coshInterval","crossInterval","degreesInterval","distanceInterval","divisionInterval","dotInterval","expInterval","exp2Interval","F32Interval","faceForwardIntervals","floorInterval","fractInterval","inverseSqrtInterval","ldexpInterval","lengthInterval","logInterval","log2Interval","maxInterval","minInterval","mixImpreciseInterval","mixPreciseInterval","multiplicationInterval","negationInterval","normalizeInterval","powInterval","quantizeToF16Interval","radiansInterval","reflectInterval","remainderInterval","roundInterval","saturateInterval","signInterval","sinInterval","sinhInterval","smoothStepInterval","sqrtInterval","stepInterval","subtractionInterval","tanInterval","tanhInterval","toF32Vector","truncInterval","ulpInterval","unpack2x16floatInterval","unpack2x16snormInterval","unpack2x16unormInterval","unpack4x8snormInterval","unpack4x8unormInterval","hexToF32","hexToF64","oneULP","UnitTest","g","kAny","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","plusNULP","x","n","plusOneULP","minusNULP","minusOneULP","applyError","expected","error","begin","end","length","test","paramsSubcasesOnly","input","f32","positive","max","negative","min","infinity","fn","t","i","params","expect","bounds","value","NaN","subnormal","got","contains","lhs","rhs","intervals","nearest_max","nearest_min","map","span","num_ulp","pi","third","quarter","sixth","powTwo","to30","whole","_","three_quarters","half","e","Math","abs","less_than_one","f16","y","i32","edge","z","low","high","kZeroBounds","kOneBoundsSnorm","kOneBoundsUnorm","kNegOneBoundsSnorm","kHalfBounds2x16snorm","kNegHalfBounds2x16snorm","kHalfBounds2x16unorm","kHalfBounds4x8snorm","kNegHalfBounds4x8snorm","kHalfBounds4x8unorm"],"mappings":"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","sourcesContent":["export const description = `\nF32Interval unit tests.\n`;\n\nimport { makeTestGroup } from '../common/framework/test_group.js';\nimport { objectEquals } from '../common/util/util.js';\nimport { kValue } from '../webgpu/util/constants.js';\nimport {\n  absInterval,\n  absoluteErrorInterval,\n  acosInterval,\n  acoshAlternativeInterval,\n  acoshPrimaryInterval,\n  additionInterval,\n  asinInterval,\n  asinhInterval,\n  atanInterval,\n  atan2Interval,\n  atanhInterval,\n  ceilInterval,\n  clampMedianInterval,\n  clampMinMaxInterval,\n  correctlyRoundedInterval,\n  cosInterval,\n  coshInterval,\n  crossInterval,\n  degreesInterval,\n  distanceInterval,\n  divisionInterval,\n  dotInterval,\n  expInterval,\n  exp2Interval,\n  F32Interval,\n  faceForwardIntervals,\n  floorInterval,\n  fractInterval,\n  IntervalBounds,\n  inverseSqrtInterval,\n  ldexpInterval,\n  lengthInterval,\n  logInterval,\n  log2Interval,\n  maxInterval,\n  minInterval,\n  mixImpreciseInterval,\n  mixPreciseInterval,\n  multiplicationInterval,\n  negationInterval,\n  normalizeInterval,\n  powInterval,\n  quantizeToF16Interval,\n  radiansInterval,\n  reflectInterval,\n  remainderInterval,\n  roundInterval,\n  saturateInterval,\n  signInterval,\n  sinInterval,\n  sinhInterval,\n  smoothStepInterval,\n  sqrtInterval,\n  stepInterval,\n  subtractionInterval,\n  tanInterval,\n  tanhInterval,\n  toF32Vector,\n  truncInterval,\n  ulpInterval,\n  unpack2x16floatInterval,\n  unpack2x16snormInterval,\n  unpack2x16unormInterval,\n  unpack4x8snormInterval,\n  unpack4x8unormInterval,\n} from '../webgpu/util/f32_interval.js';\nimport { hexToF32, hexToF64, oneULP } from '../webgpu/util/math.js';\n\nimport { UnitTest } from './unit_test.js';\n\nexport const g = makeTestGroup(UnitTest);\n\n/** Bounds indicating an expectation of an interval of all possible values */\nconst kAny: IntervalBounds = [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY];\n\n/** @returns a number N * ULP greater than the provided number */\nfunction plusNULP(x: number, n: number): number {\n  return x + n * oneULP(x);\n}\n\n/** @returns a number one ULP greater than the provided number */\nfunction plusOneULP(x: number): number {\n  return plusNULP(x, 1);\n}\n\n/** @returns a number N * ULP less than the provided number */\nfunction minusNULP(x: number, n: number): number {\n  return x - n * oneULP(x);\n}\n\n/** @returns a number one ULP less than the provided number */\nfunction minusOneULP(x: number): number {\n  return minusNULP(x, 1);\n}\n\n/** @returns the expected IntervalBounds adjusted by the given error function\n *\n * @param expected the bounds to be adjusted\n * @param error error function to adjust the bounds via\n */\nfunction applyError(expected: IntervalBounds, error: (n: number) => number): IntervalBounds {\n  if (expected !== kAny) {\n    const begin = expected[0];\n    const end = expected.length === 2 ? expected[1] : begin;\n    expected = [begin - error(begin), end + error(end)];\n  }\n\n  return expected;\n}\n\ninterface ConstructorCase {\n  input: IntervalBounds;\n  expected: IntervalBounds;\n}\n\ng.test('constructor')\n  .paramsSubcasesOnly<ConstructorCase>(\n    // prettier-ignore\n    [\n      // Common cases\n      { input: [0, 10], expected: [0, 10]},\n      { input: [-5, 0], expected: [-5, 0]},\n      { input: [-5, 10], expected: [-5, 10]},\n      { input: [0], expected: [0]},\n      { input: [10], expected: [10]},\n      { input: [-5], expected: [-5]},\n\n      // Edges\n      { input: [0, kValue.f32.positive.max], expected: [0, kValue.f32.positive.max]},\n      { input: [kValue.f32.negative.min, 0], expected: [kValue.f32.negative.min, 0]},\n      { input: [kValue.f32.negative.min, kValue.f32.positive.max], expected: [kValue.f32.negative.min, kValue.f32.positive.max]},\n\n      // Out of range\n      { input: [0, 2 * kValue.f32.positive.max], expected: [0, 2 * kValue.f32.positive.max]},\n      { input: [2 * kValue.f32.negative.min, 0], expected: [2 * kValue.f32.negative.min, 0]},\n      { input: [2 * kValue.f32.negative.min, 2 * kValue.f32.positive.max], expected: [2 * kValue.f32.negative.min, 2 * kValue.f32.positive.max]},\n\n      // Infinities\n      { input: [0, kValue.f32.infinity.positive], expected: [0, Number.POSITIVE_INFINITY]},\n      { input: [kValue.f32.infinity.negative, 0], expected: [Number.NEGATIVE_INFINITY, 0]},\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], expected: kAny},\n    ]\n  )\n  .fn(t => {\n    const i = new F32Interval(...t.params.input);\n    t.expect(\n      objectEquals(i.bounds(), t.params.expected),\n      `F32Interval([${t.params.input}]) returned ${i}. Expected [${t.params.expected}]`\n    );\n  });\n\ninterface ContainsNumberCase {\n  bounds: IntervalBounds;\n  value: number;\n  expected: boolean;\n}\n\ng.test('contains_number')\n  .paramsSubcasesOnly<ContainsNumberCase>(\n    // prettier-ignore\n    [\n    // Common usage\n    { bounds: [0, 10], value: 0, expected: true },\n    { bounds: [0, 10], value: 10, expected: true },\n    { bounds: [0, 10], value: 5, expected: true },\n    { bounds: [0, 10], value: -5, expected: false },\n    { bounds: [0, 10], value: 50, expected: false },\n    { bounds: [0, 10], value: Number.NaN, expected: false },\n    { bounds: [-5, 10], value: 0, expected: true },\n    { bounds: [-5, 10], value: 10, expected: true },\n    { bounds: [-5, 10], value: 5, expected: true },\n    { bounds: [-5, 10], value: -5, expected: true },\n    { bounds: [-5, 10], value: -6, expected: false },\n    { bounds: [-5, 10], value: 50, expected: false },\n    { bounds: [-5, 10], value: -10, expected: false },\n\n    // Point\n    { bounds: [0], value: 0, expected: true },\n    { bounds: [0], value: 10, expected: false },\n    { bounds: [0], value: -1000, expected: false },\n    { bounds: [10], value: 10, expected: true },\n    { bounds: [10], value: 0, expected: false },\n    { bounds: [10], value: -10, expected: false },\n    { bounds: [10], value: 11, expected: false },\n\n    // Upper infinity\n    { bounds: [0, kValue.f32.infinity.positive], value: kValue.f32.positive.min, expected: true },\n    { bounds: [0, kValue.f32.infinity.positive], value: kValue.f32.positive.max, expected: true },\n    { bounds: [0, kValue.f32.infinity.positive], value: kValue.f32.infinity.positive, expected: true },\n    { bounds: [0, kValue.f32.infinity.positive], value: kValue.f32.negative.min, expected: false },\n    { bounds: [0, kValue.f32.infinity.positive], value: kValue.f32.negative.max, expected: false },\n    { bounds: [0, kValue.f32.infinity.positive], value: kValue.f32.infinity.negative, expected: false },\n\n    // Lower infinity\n    { bounds: [kValue.f32.infinity.negative, 0], value: kValue.f32.positive.min, expected: false },\n    { bounds: [kValue.f32.infinity.negative, 0], value: kValue.f32.positive.max, expected: false },\n    { bounds: [kValue.f32.infinity.negative, 0], value: kValue.f32.infinity.positive, expected: false },\n    { bounds: [kValue.f32.infinity.negative, 0], value: kValue.f32.negative.min, expected: true },\n    { bounds: [kValue.f32.infinity.negative, 0], value: kValue.f32.negative.max, expected: true },\n    { bounds: [kValue.f32.infinity.negative, 0], value: kValue.f32.infinity.negative, expected: true },\n\n    // Full infinity\n    { bounds: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], value: kValue.f32.positive.min, expected: true },\n    { bounds: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], value: kValue.f32.positive.max, expected: true },\n    { bounds: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], value: kValue.f32.infinity.positive, expected: true },\n    { bounds: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], value: kValue.f32.negative.min, expected: true },\n    { bounds: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], value: kValue.f32.negative.max, expected: true },\n    { bounds: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], value: kValue.f32.infinity.negative, expected: true },\n    { bounds: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], value: Number.NaN, expected: true },\n\n    // Maximum f32 boundary\n    { bounds: [0, kValue.f32.positive.max], value: kValue.f32.positive.min, expected: true },\n    { bounds: [0, kValue.f32.positive.max], value: kValue.f32.positive.max, expected: true },\n    { bounds: [0, kValue.f32.positive.max], value: kValue.f32.infinity.positive, expected: false },\n    { bounds: [0, kValue.f32.positive.max], value: kValue.f32.negative.min, expected: false },\n    { bounds: [0, kValue.f32.positive.max], value: kValue.f32.negative.max, expected: false },\n    { bounds: [0, kValue.f32.positive.max], value: kValue.f32.infinity.negative, expected: false },\n\n    // Minimum f32 boundary\n    { bounds: [kValue.f32.negative.min, 0], value: kValue.f32.positive.min, expected: false },\n    { bounds: [kValue.f32.negative.min, 0], value: kValue.f32.positive.max, expected: false },\n    { bounds: [kValue.f32.negative.min, 0], value: kValue.f32.infinity.positive, expected: false },\n    { bounds: [kValue.f32.negative.min, 0], value: kValue.f32.negative.min, expected: true },\n    { bounds: [kValue.f32.negative.min, 0], value: kValue.f32.negative.max, expected: true },\n    { bounds: [kValue.f32.negative.min, 0], value: kValue.f32.infinity.negative, expected: false },\n\n    // Out of range high\n    { bounds: [0, 2 * kValue.f32.positive.max], value: kValue.f32.positive.min, expected: true },\n    { bounds: [0, 2 * kValue.f32.positive.max], value: kValue.f32.positive.max, expected: true },\n    { bounds: [0, 2 * kValue.f32.positive.max], value: kValue.f32.infinity.positive, expected: false },\n    { bounds: [0, 2 * kValue.f32.positive.max], value: kValue.f32.negative.min, expected: false },\n    { bounds: [0, 2 * kValue.f32.positive.max], value: kValue.f32.negative.max, expected: false },\n    { bounds: [0, 2 * kValue.f32.positive.max], value: kValue.f32.infinity.negative, expected: false },\n\n    // Out of range low\n    { bounds: [2 * kValue.f32.negative.min, 0], value: kValue.f32.positive.min, expected: false },\n    { bounds: [2 * kValue.f32.negative.min, 0], value: kValue.f32.positive.max, expected: false },\n    { bounds: [2 * kValue.f32.negative.min, 0], value: kValue.f32.infinity.positive, expected: false },\n    { bounds: [2 * kValue.f32.negative.min, 0], value: kValue.f32.negative.min, expected: true },\n    { bounds: [2 * kValue.f32.negative.min, 0], value: kValue.f32.negative.max, expected: true },\n    { bounds: [2 * kValue.f32.negative.min, 0], value: kValue.f32.infinity.negative, expected: false },\n\n    // Subnormals\n    { bounds: [0, kValue.f32.positive.min], value: kValue.f32.subnormal.positive.min, expected: true },\n    { bounds: [0, kValue.f32.positive.min], value: kValue.f32.subnormal.positive.max, expected: true },\n    { bounds: [0, kValue.f32.positive.min], value: kValue.f32.subnormal.negative.min, expected: false },\n    { bounds: [0, kValue.f32.positive.min], value: kValue.f32.subnormal.negative.max, expected: false },\n    { bounds: [kValue.f32.negative.max, 0], value: kValue.f32.subnormal.positive.min, expected: false },\n    { bounds: [kValue.f32.negative.max, 0], value: kValue.f32.subnormal.positive.max, expected: false },\n    { bounds: [kValue.f32.negative.max, 0], value: kValue.f32.subnormal.negative.min, expected: true },\n    { bounds: [kValue.f32.negative.max, 0], value: kValue.f32.subnormal.negative.max, expected: true },\n    { bounds: [0, kValue.f32.subnormal.positive.min], value: kValue.f32.subnormal.positive.min, expected: true },\n    { bounds: [0, kValue.f32.subnormal.positive.min], value: kValue.f32.subnormal.positive.max, expected: false },\n    { bounds: [0, kValue.f32.subnormal.positive.min], value: kValue.f32.subnormal.negative.min, expected: false },\n    { bounds: [0, kValue.f32.subnormal.positive.min], value: kValue.f32.subnormal.negative.max, expected: false },\n    { bounds: [kValue.f32.subnormal.negative.max, 0], value: kValue.f32.subnormal.positive.min, expected: false },\n    { bounds: [kValue.f32.subnormal.negative.max, 0], value: kValue.f32.subnormal.positive.max, expected: false },\n    { bounds: [kValue.f32.subnormal.negative.max, 0], value: kValue.f32.subnormal.negative.min, expected: false },\n    { bounds: [kValue.f32.subnormal.negative.max, 0], value: kValue.f32.subnormal.negative.max, expected: true },\n    ]\n  )\n  .fn(t => {\n    const i = new F32Interval(...t.params.bounds);\n    const value = t.params.value;\n    const expected = t.params.expected;\n\n    const got = i.contains(value);\n    t.expect(expected === got, `${i}.contains(${value}) returned ${got}. Expected ${expected}`);\n  });\n\ninterface ContainsIntervalCase {\n  lhs: IntervalBounds;\n  rhs: IntervalBounds;\n  expected: boolean;\n}\n\ng.test('contains_interval')\n  .paramsSubcasesOnly<ContainsIntervalCase>(\n    // prettier-ignore\n    [\n      // Common usage\n      { lhs: [-10, 10], rhs: [0], expected: true},\n      { lhs: [-10, 10], rhs: [-1, 0], expected: true},\n      { lhs: [-10, 10], rhs: [0, 2], expected: true},\n      { lhs: [-10, 10], rhs: [-1, 2], expected: true},\n      { lhs: [-10, 10], rhs: [0, 10], expected: true},\n      { lhs: [-10, 10], rhs: [-10, 2], expected: true},\n      { lhs: [-10, 10], rhs: [-10, 10], expected: true},\n      { lhs: [-10, 10], rhs: [-100, 10], expected: false},\n\n      // Upper infinity\n      { lhs: [0, kValue.f32.infinity.positive], rhs: [0], expected: true},\n      { lhs: [0, kValue.f32.infinity.positive], rhs: [-1, 0], expected: false},\n      { lhs: [0, kValue.f32.infinity.positive], rhs: [0, 1], expected: true},\n      { lhs: [0, kValue.f32.infinity.positive], rhs: [0, kValue.f32.positive.max], expected: true},\n      { lhs: [0, kValue.f32.infinity.positive], rhs: [0, kValue.f32.infinity.positive], expected: true},\n      { lhs: [0, kValue.f32.infinity.positive], rhs: [100, kValue.f32.infinity.positive], expected: true},\n      { lhs: [0, kValue.f32.infinity.positive], rhs: [Number.NEGATIVE_INFINITY, kValue.f32.infinity.positive], expected: false},\n\n      // Lower infinity\n      { lhs: [kValue.f32.infinity.negative, 0], rhs: [0], expected: true},\n      { lhs: [kValue.f32.infinity.negative, 0], rhs: [-1, 0], expected: true},\n      { lhs: [kValue.f32.infinity.negative, 0], rhs: [kValue.f32.negative.min, 0], expected: true},\n      { lhs: [kValue.f32.infinity.negative, 0], rhs: [0, 1], expected: false},\n      { lhs: [kValue.f32.infinity.negative, 0], rhs: [kValue.f32.infinity.negative, 0], expected: true},\n      { lhs: [kValue.f32.infinity.negative, 0], rhs: [kValue.f32.infinity.negative, -100 ], expected: true},\n      { lhs: [kValue.f32.infinity.negative, 0], rhs: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], expected: false},\n\n      // Full infinity\n      { lhs: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], rhs: [0], expected: true},\n      { lhs: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], rhs: [-1, 0], expected: true},\n      { lhs: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], rhs: [0, 1], expected: true},\n      { lhs: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], rhs: [0, kValue.f32.infinity.positive], expected: true},\n      { lhs: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], rhs: [100, kValue.f32.infinity.positive], expected: true},\n      { lhs: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], rhs: [kValue.f32.infinity.negative, 0], expected: true},\n      { lhs: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], rhs: [kValue.f32.infinity.negative, -100 ], expected: true},\n      { lhs: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], rhs: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], expected: true},\n\n      // Maximum f32 boundary\n      { lhs: [0, kValue.f32.positive.max], rhs: [0], expected: true},\n      { lhs: [0, kValue.f32.positive.max], rhs: [-1, 0], expected: false},\n      { lhs: [0, kValue.f32.positive.max], rhs: [0, 1], expected: true},\n      { lhs: [0, kValue.f32.positive.max], rhs: [0, kValue.f32.positive.max], expected: true},\n      { lhs: [0, kValue.f32.positive.max], rhs: [0, kValue.f32.infinity.positive], expected: false},\n      { lhs: [0, kValue.f32.positive.max], rhs: [100, kValue.f32.infinity.positive], expected: false},\n      { lhs: [0, kValue.f32.positive.max], rhs: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], expected: false},\n\n      // Minimum f32 boundary\n      { lhs: [kValue.f32.negative.min, 0], rhs: [0, 0], expected: true},\n      { lhs: [kValue.f32.negative.min, 0], rhs: [-1, 0], expected: true},\n      { lhs: [kValue.f32.negative.min, 0], rhs: [kValue.f32.negative.min, 0], expected: true},\n      { lhs: [kValue.f32.negative.min, 0], rhs: [0, 1], expected: false},\n      { lhs: [kValue.f32.negative.min, 0], rhs: [kValue.f32.infinity.negative, 0], expected: false},\n      { lhs: [kValue.f32.negative.min, 0], rhs: [kValue.f32.infinity.negative, -100 ], expected: false},\n      { lhs: [kValue.f32.negative.min, 0], rhs: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], expected: false},\n\n      // Out of range high\n      { lhs: [0, 2 * kValue.f32.positive.max], rhs: [0], expected: true},\n      { lhs: [0, 2 * kValue.f32.positive.max], rhs: [-1, 0], expected: false},\n      { lhs: [0, 2 * kValue.f32.positive.max], rhs: [0, 1], expected: true},\n      { lhs: [0, 2 * kValue.f32.positive.max], rhs: [0, kValue.f32.positive.max], expected: true},\n      { lhs: [0, 2 * kValue.f32.positive.max], rhs: [0, kValue.f32.infinity.positive], expected: false},\n      { lhs: [0, 2 * kValue.f32.positive.max], rhs: [100, kValue.f32.infinity.positive], expected: false},\n      { lhs: [0, 2 * kValue.f32.positive.max], rhs: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], expected: false},\n\n      // Out of range low\n      { lhs: [2 * kValue.f32.negative.min, 0], rhs: [0], expected: true},\n      { lhs: [2 * kValue.f32.negative.min, 0], rhs: [-1, 0], expected: true},\n      { lhs: [2 * kValue.f32.negative.min, 0], rhs: [kValue.f32.negative.min, 0], expected: true},\n      { lhs: [2 * kValue.f32.negative.min, 0], rhs: [0, 1], expected: false},\n      { lhs: [2 * kValue.f32.negative.min, 0], rhs: [kValue.f32.infinity.negative, 0], expected: false},\n      { lhs: [2 * kValue.f32.negative.min, 0], rhs: [kValue.f32.infinity.negative, -100 ], expected: false},\n      { lhs: [2 * kValue.f32.negative.min, 0], rhs: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], expected: false},\n    ]\n  )\n  .fn(t => {\n    const lhs = new F32Interval(...t.params.lhs);\n    const rhs = new F32Interval(...t.params.rhs);\n    const expected = t.params.expected;\n\n    const got = lhs.contains(rhs);\n    t.expect(expected === got, `${lhs}.contains(${rhs}) returned ${got}. Expected ${expected}`);\n  });\n\ninterface SpanCase {\n  intervals: IntervalBounds[];\n  expected: IntervalBounds;\n}\n\ng.test('span')\n  .paramsSubcasesOnly<SpanCase>(\n    // prettier-ignore\n    [\n      // Single Intervals\n      { intervals: [[0, 10]], expected: [0, 10]},\n      { intervals: [[0, kValue.f32.positive.max]], expected: [0, kValue.f32.positive.max]},\n      { intervals: [[0, kValue.f32.positive.nearest_max]], expected: [0, kValue.f32.positive.nearest_max]},\n      { intervals: [[0, kValue.f32.infinity.positive]], expected: [0, Number.POSITIVE_INFINITY]},\n      { intervals: [[kValue.f32.negative.min, 0]], expected: [kValue.f32.negative.min, 0]},\n      { intervals: [[kValue.f32.negative.nearest_min, 0]], expected: [kValue.f32.negative.nearest_min, 0]},\n      { intervals: [[kValue.f32.infinity.negative, 0]], expected: [Number.NEGATIVE_INFINITY, 0]},\n\n      // Double Intervals\n      { intervals: [[0, 1], [2, 5]], expected: [0, 5]},\n      { intervals: [[2, 5], [0, 1]], expected: [0, 5]},\n      { intervals: [[0, 2], [1, 5]], expected: [0, 5]},\n      { intervals: [[0, 5], [1, 2]], expected: [0, 5]},\n      { intervals: [[kValue.f32.infinity.negative, 0], [0, kValue.f32.infinity.positive]], expected: kAny},\n\n      // Multiple Intervals\n      { intervals: [[0, 1], [2, 3], [4, 5]], expected: [0, 5]},\n      { intervals: [[0, 1], [4, 5], [2, 3]], expected: [0, 5]},\n      { intervals: [[0, 1], [0, 1], [0, 1]], expected: [0, 1]},\n    ]\n  )\n  .fn(t => {\n    const intervals = t.params.intervals.map(x => new F32Interval(...x));\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = F32Interval.span(...intervals);\n    t.expect(\n      objectEquals(got, expected),\n      `span({${intervals}}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ninterface CorrectlyRoundedCase {\n  value: number;\n  expected: IntervalBounds;\n}\n\ng.test('correctlyRoundedInterval')\n  .paramsSubcasesOnly<CorrectlyRoundedCase>(\n    // prettier-ignore\n    [\n      // Edge Cases\n      { value: kValue.f32.infinity.positive, expected: kAny },\n      { value: kValue.f32.infinity.negative, expected: kAny },\n      { value: kValue.f32.positive.max, expected: [kValue.f32.positive.max] },\n      { value: kValue.f32.negative.min, expected: [kValue.f32.negative.min] },\n      { value: kValue.f32.positive.min, expected: [kValue.f32.positive.min] },\n      { value: kValue.f32.negative.max, expected: [kValue.f32.negative.max] },\n\n      // 32-bit subnormals\n      { value: kValue.f32.subnormal.positive.min, expected: [0, kValue.f32.subnormal.positive.min] },\n      { value: kValue.f32.subnormal.positive.max, expected: [0, kValue.f32.subnormal.positive.max] },\n      { value: kValue.f32.subnormal.negative.min, expected: [kValue.f32.subnormal.negative.min, 0] },\n      { value: kValue.f32.subnormal.negative.max, expected: [kValue.f32.subnormal.negative.max, 0] },\n\n      // 64-bit subnormals\n      { value: hexToF64(0x00000000, 0x00000001), expected: [0, kValue.f32.subnormal.positive.min] },\n      { value: hexToF64(0x00000000, 0x00000002), expected: [0, kValue.f32.subnormal.positive.min] },\n      { value: hexToF64(0x800fffff, 0xffffffff), expected: [kValue.f32.subnormal.negative.max, 0] },\n      { value: hexToF64(0x800fffff, 0xfffffffe), expected: [kValue.f32.subnormal.negative.max, 0] },\n\n      // 32-bit normals\n      { value: 0, expected: [0, 0] },\n      { value: hexToF32(0x03800000), expected: [hexToF32(0x03800000)] },\n      { value: hexToF32(0x03800001), expected: [hexToF32(0x03800001)] },\n      { value: hexToF32(0x83800000), expected: [hexToF32(0x83800000)] },\n      { value: hexToF32(0x83800001), expected: [hexToF32(0x83800001)] },\n\n      // 64-bit normals\n      { value: hexToF64(0x3ff00000, 0x00000001), expected: [hexToF32(0x3f800000), hexToF32(0x3f800001)] },\n      { value: hexToF64(0x3ff00000, 0x00000002), expected: [hexToF32(0x3f800000), hexToF32(0x3f800001)] },\n      { value: hexToF64(0x3ff00010, 0x00000010), expected: [hexToF32(0x3f800080), hexToF32(0x3f800081)] },\n      { value: hexToF64(0x3ff00020, 0x00000020), expected: [hexToF32(0x3f800100), hexToF32(0x3f800101)] },\n      { value: hexToF64(0xbff00000, 0x00000001), expected: [hexToF32(0xbf800001), hexToF32(0xbf800000)] },\n      { value: hexToF64(0xbff00000, 0x00000002), expected: [hexToF32(0xbf800001), hexToF32(0xbf800000)] },\n      { value: hexToF64(0xbff00010, 0x00000010), expected: [hexToF32(0xbf800081), hexToF32(0xbf800080)] },\n      { value: hexToF64(0xbff00020, 0x00000020), expected: [hexToF32(0xbf800101), hexToF32(0xbf800100)] },\n    ]\n  )\n  .fn(t => {\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = correctlyRoundedInterval(t.params.value);\n    t.expect(\n      objectEquals(expected, got),\n      `correctlyRoundedInterval(${t.params.value}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ninterface AbsoluteErrorCase {\n  value: number;\n  error: number;\n  expected: IntervalBounds;\n}\n\ng.test('absoluteErrorInterval')\n  .paramsSubcasesOnly<AbsoluteErrorCase>(\n    // prettier-ignore\n    [\n      // Edge Cases\n      { value: kValue.f32.infinity.positive, error: 0, expected: kAny },\n      { value: kValue.f32.infinity.positive, error: 2 ** -11, expected: kAny },\n      { value: kValue.f32.infinity.positive, error: 1, expected: kAny },\n      { value: kValue.f32.infinity.negative, error: 0, expected: kAny },\n      { value: kValue.f32.infinity.negative, error: 2 ** -11, expected: kAny },\n      { value: kValue.f32.infinity.negative, error: 1, expected: kAny },\n      { value: kValue.f32.positive.max, error: 0, expected: [kValue.f32.positive.max] },\n      { value: kValue.f32.positive.max, error: 2 ** -11, expected: [kValue.f32.positive.max] },\n      { value: kValue.f32.positive.max, error: kValue.f32.positive.max, expected: kAny },\n      { value: kValue.f32.positive.min, error: 0, expected: [kValue.f32.positive.min] },\n      { value: kValue.f32.positive.min, error: 2 ** -11, expected: [-(2 ** -11), 2 ** -11] },\n      { value: kValue.f32.positive.min, error: 1, expected: [-1, 1] },\n      { value: kValue.f32.negative.min, error: 0, expected: [kValue.f32.negative.min] },\n      { value: kValue.f32.negative.min, error: 2 ** -11, expected: [kValue.f32.negative.min] },\n      { value: kValue.f32.negative.min, error: kValue.f32.positive.max, expected: kAny },\n      { value: kValue.f32.negative.max, error: 0, expected: [kValue.f32.negative.max] },\n      { value: kValue.f32.negative.max, error: 2 ** -11, expected: [-(2 ** -11), 2 ** -11] },\n      { value: kValue.f32.negative.max, error: 1, expected: [-1, 1] },\n\n      // 32-bit subnormals\n      { value: kValue.f32.subnormal.positive.max, error: 0, expected: [0, kValue.f32.subnormal.positive.max] },\n      { value: kValue.f32.subnormal.positive.max, error: 2 ** -11, expected: [-(2 ** -11), 2 ** -11] },\n      { value: kValue.f32.subnormal.positive.max, error: 1, expected: [-1, 1] },\n      { value: kValue.f32.subnormal.positive.min, error: 0, expected: [0, kValue.f32.subnormal.positive.min] },\n      { value: kValue.f32.subnormal.positive.min, error: 2 ** -11, expected: [-(2 ** -11), 2 ** -11] },\n      { value: kValue.f32.subnormal.positive.min, error: 1, expected: [-1, 1] },\n      { value: kValue.f32.subnormal.negative.min, error: 0, expected: [kValue.f32.subnormal.negative.min, 0] },\n      { value: kValue.f32.subnormal.negative.min, error: 2 ** -11, expected: [-(2 ** -11), 2 ** -11] },\n      { value: kValue.f32.subnormal.negative.min, error: 1, expected: [-1, 1] },\n      { value: kValue.f32.subnormal.negative.max, error: 0, expected: [kValue.f32.subnormal.negative.max, 0] },\n      { value: kValue.f32.subnormal.negative.max, error: 2 ** -11, expected: [-(2 ** -11), 2 ** -11] },\n      { value: kValue.f32.subnormal.negative.max, error: 1, expected: [-1, 1] },\n\n      // 64-bit subnormals\n      { value: hexToF64(0x00000000, 0x00000001), error: 0, expected: [0, kValue.f32.subnormal.positive.min] },\n      { value: hexToF64(0x00000000, 0x00000001), error: 2 ** -11, expected: [-(2 ** -11), 2 ** -11] },\n      { value: hexToF64(0x00000000, 0x00000001), error: 1, expected: [-1, 1] },\n      { value: hexToF64(0x00000000, 0x00000002), error: 0, expected: [0, kValue.f32.subnormal.positive.min] },\n      { value: hexToF64(0x00000000, 0x00000002), error: 2 ** -11, expected: [-(2 ** -11), 2 ** -11] },\n      { value: hexToF64(0x00000000, 0x00000002), error: 1, expected: [-1, 1] },\n      { value: hexToF64(0x800fffff, 0xffffffff), error: 0, expected: [kValue.f32.subnormal.negative.max, 0] },\n      { value: hexToF64(0x800fffff, 0xffffffff), error: 2 ** -11, expected: [-(2 ** -11), 2 ** -11] },\n      { value: hexToF64(0x800fffff, 0xffffffff), error: 1, expected: [-1, 1] },\n      { value: hexToF64(0x800fffff, 0xfffffffe), error: 0, expected: [kValue.f32.subnormal.negative.max, 0] },\n      { value: hexToF64(0x800fffff, 0xfffffffe), error: 2 ** -11, expected: [-(2 ** -11), 2 ** -11] },\n      { value: hexToF64(0x800fffff, 0xfffffffe), error: 1, expected: [-1, 1] },\n\n      // Zero\n      { value: 0, error: 0, expected: [0] },\n      { value: 0, error: 2 ** -11, expected: [-(2 ** -11), 2 ** -11] },\n      { value: 0, error: 1, expected: [-1, 1] },\n    ]\n  )\n  .fn(t => {\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = absoluteErrorInterval(t.params.value, t.params.error);\n    t.expect(\n      objectEquals(expected, got),\n      `absoluteErrorInterval(${t.params.value}, ${t.params.error}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ninterface ULPCase {\n  value: number;\n  num_ulp: number;\n  expected: IntervalBounds;\n}\n\ng.test('ulpInterval')\n  .paramsSubcasesOnly<ULPCase>(\n    // prettier-ignore\n    [\n      // Edge Cases\n      { value: kValue.f32.infinity.positive, num_ulp: 0, expected: kAny },\n      { value: kValue.f32.infinity.positive, num_ulp: 1, expected: kAny },\n      { value: kValue.f32.infinity.positive, num_ulp: 4096, expected: kAny },\n      { value: kValue.f32.infinity.negative, num_ulp: 0, expected: kAny },\n      { value: kValue.f32.infinity.negative, num_ulp: 1, expected: kAny },\n      { value: kValue.f32.infinity.negative, num_ulp: 4096, expected: kAny },\n      { value: kValue.f32.positive.max, num_ulp: 0, expected: [kValue.f32.positive.max] },\n      { value: kValue.f32.positive.max, num_ulp: 1, expected: kAny },\n      { value: kValue.f32.positive.max, num_ulp: 4096, expected: kAny },\n      { value: kValue.f32.positive.min, num_ulp: 0, expected: [kValue.f32.positive.min] },\n      { value: kValue.f32.positive.min, num_ulp: 1, expected: [0, plusOneULP(kValue.f32.positive.min)] },\n      { value: kValue.f32.positive.min, num_ulp: 4096, expected: [0, plusNULP(kValue.f32.positive.min, 4096)] },\n      { value: kValue.f32.negative.min, num_ulp: 0, expected: [kValue.f32.negative.min] },\n      { value: kValue.f32.negative.min, num_ulp: 1, expected: kAny },\n      { value: kValue.f32.negative.min, num_ulp: 4096, expected: kAny },\n      { value: kValue.f32.negative.max, num_ulp: 0, expected: [kValue.f32.negative.max] },\n      { value: kValue.f32.negative.max, num_ulp: 1, expected: [minusOneULP(kValue.f32.negative.max), 0] },\n      { value: kValue.f32.negative.max, num_ulp: 4096, expected: [minusNULP(kValue.f32.negative.max, 4096), 0] },\n\n      // 32-bit subnormals\n      { value: kValue.f32.subnormal.positive.max, num_ulp: 0, expected: [0, kValue.f32.subnormal.positive.max] },\n      { value: kValue.f32.subnormal.positive.max, num_ulp: 1, expected: [minusOneULP(0), plusOneULP(kValue.f32.subnormal.positive.max)] },\n      { value: kValue.f32.subnormal.positive.max, num_ulp: 4096, expected: [minusNULP(0, 4096), plusNULP(kValue.f32.subnormal.positive.max, 4096)] },\n      { value: kValue.f32.subnormal.positive.min, num_ulp: 0, expected: [0, kValue.f32.subnormal.positive.min] },\n      { value: kValue.f32.subnormal.positive.min, num_ulp: 1, expected: [minusOneULP(0), plusOneULP(kValue.f32.subnormal.positive.min)] },\n      { value: kValue.f32.subnormal.positive.min, num_ulp: 4096, expected: [minusNULP(0, 4096), plusNULP(kValue.f32.subnormal.positive.min, 4096)] },\n      { value: kValue.f32.subnormal.negative.min, num_ulp: 0, expected: [kValue.f32.subnormal.negative.min, 0] },\n      { value: kValue.f32.subnormal.negative.min, num_ulp: 1, expected: [minusOneULP(kValue.f32.subnormal.negative.min), plusOneULP(0)] },\n      { value: kValue.f32.subnormal.negative.min, num_ulp: 4096, expected: [minusNULP(kValue.f32.subnormal.negative.min, 4096), plusNULP(0, 4096)] },\n      { value: kValue.f32.subnormal.negative.max, num_ulp: 0, expected: [kValue.f32.subnormal.negative.max, 0] },\n      { value: kValue.f32.subnormal.negative.max, num_ulp: 1, expected: [minusOneULP(kValue.f32.subnormal.negative.max), plusOneULP(0)] },\n      { value: kValue.f32.subnormal.negative.max, num_ulp: 4096, expected: [minusNULP(kValue.f32.subnormal.negative.max, 4096), plusNULP(0, 4096)] },\n\n      // 64-bit subnormals\n      { value: hexToF64(0x00000000, 0x00000001), num_ulp: 0, expected: [0, kValue.f32.subnormal.positive.min] },\n      { value: hexToF64(0x00000000, 0x00000001), num_ulp: 1, expected: [minusOneULP(0), plusOneULP(kValue.f32.subnormal.positive.min)] },\n      { value: hexToF64(0x00000000, 0x00000001), num_ulp: 4096, expected: [minusNULP(0, 4096), plusNULP(kValue.f32.subnormal.positive.min, 4096)] },\n      { value: hexToF64(0x00000000, 0x00000002), num_ulp: 0, expected: [0, kValue.f32.subnormal.positive.min] },\n      { value: hexToF64(0x00000000, 0x00000002), num_ulp: 1, expected: [minusOneULP(0), plusOneULP(kValue.f32.subnormal.positive.min)] },\n      { value: hexToF64(0x00000000, 0x00000002), num_ulp: 4096, expected: [minusNULP(0, 4096), plusNULP(kValue.f32.subnormal.positive.min, 4096)] },\n      { value: hexToF64(0x800fffff, 0xffffffff), num_ulp: 0, expected: [kValue.f32.subnormal.negative.max, 0] },\n      { value: hexToF64(0x800fffff, 0xffffffff), num_ulp: 1, expected: [minusOneULP(kValue.f32.subnormal.negative.max), plusOneULP(0)] },\n      { value: hexToF64(0x800fffff, 0xffffffff), num_ulp: 4096, expected: [minusNULP(kValue.f32.subnormal.negative.max, 4096), plusNULP(0, 4096)] },\n      { value: hexToF64(0x800fffff, 0xfffffffe), num_ulp: 0, expected: [kValue.f32.subnormal.negative.max, 0] },\n      { value: hexToF64(0x800fffff, 0xfffffffe), num_ulp: 1, expected: [minusOneULP(kValue.f32.subnormal.negative.max), plusOneULP(0)] },\n      { value: hexToF64(0x800fffff, 0xfffffffe), num_ulp: 4096, expected: [minusNULP(kValue.f32.subnormal.negative.max, 4096), plusNULP(0, 4096)] },\n\n      // Zero\n      { value: 0, num_ulp: 0, expected: [0] },\n      { value: 0, num_ulp: 1, expected: [minusOneULP(0), plusOneULP(0)] },\n      { value: 0, num_ulp: 4096, expected: [minusNULP(0, 4096), plusNULP(0, 4096)] },\n    ]\n  )\n  .fn(t => {\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = ulpInterval(t.params.value, t.params.num_ulp);\n    t.expect(\n      objectEquals(expected, got),\n      `ulpInterval(${t.params.value}, ${t.params.num_ulp}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ninterface PointToIntervalCase {\n  input: number;\n  expected: IntervalBounds;\n}\n\ng.test('absInterval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      // Common usages\n      { input: 1, expected: [1] },\n      { input: -1, expected: [1] },\n      { input: 0.1, expected: [hexToF32(0x3dcccccc), hexToF32(0x3dcccccd)] },\n      { input: -0.1, expected: [hexToF32(0x3dcccccc), hexToF32(0x3dcccccd)] },\n\n      // Edge cases\n      { input: kValue.f32.infinity.positive, expected: kAny },\n      { input: kValue.f32.infinity.negative, expected: kAny },\n      { input: kValue.f32.positive.max, expected: [kValue.f32.positive.max] },\n      { input: kValue.f32.positive.min, expected: [kValue.f32.positive.min] },\n      { input: kValue.f32.negative.min, expected: [kValue.f32.positive.max] },\n      { input: kValue.f32.negative.max, expected: [kValue.f32.positive.min] },\n\n      // 32-bit subnormals\n      { input: kValue.f32.subnormal.positive.max, expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: kValue.f32.subnormal.positive.min, expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: kValue.f32.subnormal.negative.min, expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: kValue.f32.subnormal.negative.max, expected: [0, kValue.f32.subnormal.positive.min] },\n\n      // 64-bit subnormals\n      { input: hexToF64(0x00000000, 0x00000001), expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: hexToF64(0x800fffff, 0xffffffff), expected: [0, kValue.f32.subnormal.positive.min] },\n\n      // Zero\n      { input: 0, expected: [0]},\n    ]\n  )\n  .fn(t => {\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = absInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `absInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('acosInterval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult to express in a closed human readable\n      // form due to the inherited nature of the errors.\n      //\n      // The acceptance interval @ x = -1 and 1 is kAny, because sqrt(1 - x*x) = sqrt(0), and sqrt is defined in terms of inverseqrt\n      // The acceptance interval @ x = 0 is kAny, because atan2 is not well defined/implemented at 0.\n      { input: kValue.f32.infinity.negative, expected: kAny },\n      { input: kValue.f32.negative.min, expected: kAny },\n      { input: -1, expected: kAny },\n      { input: -1/2, expected: [hexToF32(0x40060290), hexToF32(0x40061294)] },  // ~2π/3\n      { input: 0, expected: kAny },\n      { input: 1/2, expected: [hexToF32(0x3f85fa8f), hexToF32(0x3f861a95)] },  // ~π/3\n      { input: kValue.f32.positive.max, expected: kAny },\n      { input: kValue.f32.infinity.positive, expected: kAny },\n    ]\n  )\n  .fn(t => {\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = acosInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `acosInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('acoshAlternativeInterval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult to express in a closed human readable\n      // form due to the inherited nature of the errors.\n      { input: kValue.f32.infinity.negative, expected: kAny },\n      { input: kValue.f32.negative.min, expected: kAny },\n      { input: -1, expected: kAny },\n      { input: 0, expected: kAny },\n      { input: 1, expected: kAny },  // 1/0 occurs in inverseSqrt in this formulation\n      { input: 1.1, expected: [hexToF64(0x3fdc6368, 0x80000000), hexToF64(0x3fdc636f, 0x20000000)] },  // ~0.443..., differs from the primary in the later digits\n      { input: 10, expected: [hexToF64(0x4007f21e, 0x40000000), hexToF64(0x4007f21f, 0x60000000)] },  // ~2.993...\n      { input: kValue.f32.positive.max, expected: kAny },\n      { input: kValue.f32.infinity.positive, expected: kAny },\n    ]\n  )\n  .fn(t => {\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = acoshAlternativeInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `acoshInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('acoshPrimaryInterval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult to express in a closed human readable\n      // form due to the inherited nature of the errors.\n      { input: kValue.f32.infinity.negative, expected: kAny },\n      { input: kValue.f32.negative.min, expected: kAny },\n      { input: -1, expected: kAny },\n      { input: 0, expected: kAny },\n      { input: 1, expected: kAny },  // 1/0 occurs in inverseSqrt in this formulation\n      { input: 1.1, expected: [hexToF64(0x3fdc6368, 0x20000000), hexToF64(0x3fdc636f, 0x80000000)] }, // ~0.443..., differs from the alternative in the later digits\n      { input: 10, expected: [hexToF64(0x4007f21e, 0x40000000), hexToF64(0x4007f21f, 0x60000000)] },  // ~2.993...\n      { input: kValue.f32.positive.max, expected: kAny },\n      { input: kValue.f32.infinity.positive, expected: kAny },\n    ]\n  )\n  .fn(t => {\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = acoshPrimaryInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `acoshInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('asinInterval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult to express in a closed human readable\n      // form due to the inherited nature of the errors.\n      //\n      // The acceptance interval @ x = -1 and 1 is kAny, because sqrt(1 - x*x) = sqrt(0), and sqrt is defined in terms of inversqrt\n      // The acceptance interval @ x = 0 is kAny, because atan2 is not well defined/implemented at 0.\n      { input: kValue.f32.infinity.negative, expected: kAny },\n      { input: kValue.f32.negative.min, expected: kAny },\n      { input: -1, expected: kAny },\n      { input: -1/2, expected: [hexToF32(0xbf061a99), hexToF32(0xbf05fa8b)] },  // ~-π/6\n      { input: 0, expected: kAny },\n      { input: 1/2, expected: [hexToF32(0x3f05fa8b), hexToF32(0x3f061a99)] },  // ~π/6\n      { input: kValue.f32.positive.max, expected: kAny },\n      { input: kValue.f32.infinity.positive, expected: kAny },\n    ]\n  )\n  .fn(t => {\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = asinInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `asinInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('asinhInterval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult to express in a closed human readable\n      // form due to the inherited nature of the errors.\n      { input: kValue.f32.infinity.negative, expected: kAny },\n      { input: kValue.f32.negative.min, expected: kAny },\n      { input: -1, expected: [hexToF64(0xbfec343a, 0x80000000), hexToF64(0xbfec3432, 0x80000000)] },  // ~-0.88137...\n      { input: 0, expected: [hexToF64(0xbeaa0000, 0x20000000), hexToF64(0x3eb1ffff, 0xd0000000)] },  // ~0\n      { input: 1, expected: [hexToF64(0x3fec3435, 0x40000000), hexToF64(0x3fec3437, 0x80000000)] },  // ~0.88137...\n      { input: kValue.f32.positive.max, expected: kAny },\n      { input: kValue.f32.infinity.positive, expected: kAny },\n    ]\n  )\n  .fn(t => {\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = asinhInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `asinhInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('atanInterval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: kValue.f32.infinity.negative, expected: kAny },\n      { input: hexToF32(0xbfddb3d7), expected: [kValue.f32.negative.pi.third, plusOneULP(kValue.f32.negative.pi.third)] }, // x = -√3\n      { input: -1, expected: [kValue.f32.negative.pi.quarter, plusOneULP(kValue.f32.negative.pi.quarter)] },\n      { input: hexToF32(0xbf13cd3a), expected: [kValue.f32.negative.pi.sixth, plusOneULP(kValue.f32.negative.pi.sixth)] },  // x = -1/√3\n      { input: 0, expected: [0] },\n      { input: hexToF32(0x3f13cd3a), expected: [minusOneULP(kValue.f32.positive.pi.sixth), kValue.f32.positive.pi.sixth] },  // x = 1/√3\n      { input: 1, expected: [minusOneULP(kValue.f32.positive.pi.quarter), kValue.f32.positive.pi.quarter] },\n      { input: hexToF32(0x3fddb3d7), expected: [minusOneULP(kValue.f32.positive.pi.third), kValue.f32.positive.pi.third] }, // x = √3\n      { input: kValue.f32.infinity.positive, expected: kAny },\n    ]\n  )\n  .fn(t => {\n    const error = (n: number): number => {\n      return 4096 * oneULP(n);\n    };\n\n    t.params.expected = applyError(t.params.expected, error);\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = atanInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `atanInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('atanhInterval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult to express in a closed human readable\n      // form due to the inherited nature of the errors.\n      { input: kValue.f32.infinity.negative, expected: kAny },\n      { input: kValue.f32.negative.min, expected: kAny },\n      { input: -1, expected: kAny },\n      { input: -0.1, expected: [hexToF64(0xbfb9af9a, 0x60000000), hexToF64(0xbfb9af8c, 0xc0000000)] },  // ~-0.1003...\n      { input: 0, expected: [hexToF64(0xbe960000, 0x20000000), hexToF64(0x3e980000, 0x00000000)] },  // ~0\n      { input: 0.1, expected: [hexToF64(0x3fb9af8b, 0x80000000), hexToF64(0x3fb9af9b, 0x00000000)] },  // ~0.1003...\n      { input: 1, expected: kAny },\n      { input: kValue.f32.positive.max, expected: kAny },\n      { input: kValue.f32.infinity.positive, expected: kAny },\n    ]\n  )\n  .fn(t => {\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = atanhInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `atanhInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('ceilInterval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: 0, expected: [0] },\n      { input: 0.1, expected: [1] },\n      { input: 0.9, expected: [1] },\n      { input: 1.0, expected: [1] },\n      { input: 1.1, expected: [2] },\n      { input: 1.9, expected: [2] },\n      { input: -0.1, expected: [0] },\n      { input: -0.9, expected: [0] },\n      { input: -1.0, expected: [-1] },\n      { input: -1.1, expected: [-1] },\n      { input: -1.9, expected: [-1] },\n\n      // Edge cases\n      { input: kValue.f32.infinity.positive, expected: kAny },\n      { input: kValue.f32.infinity.negative, expected: kAny },\n      { input: kValue.f32.positive.max, expected: [kValue.f32.positive.max] },\n      { input: kValue.f32.positive.min, expected: [1] },\n      { input: kValue.f32.negative.min, expected: [kValue.f32.negative.min] },\n      { input: kValue.f32.negative.max, expected: [0] },\n      { input: kValue.powTwo.to30, expected: [kValue.powTwo.to30] },\n      { input: -kValue.powTwo.to30, expected: [-kValue.powTwo.to30] },\n\n      // 32-bit subnormals\n      { input: kValue.f32.subnormal.positive.max, expected: [0, 1] },\n      { input: kValue.f32.subnormal.positive.min, expected: [0, 1] },\n      { input: kValue.f32.subnormal.negative.min, expected: [0] },\n      { input: kValue.f32.subnormal.negative.max, expected: [0] },\n    ]\n  )\n  .fn(t => {\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = ceilInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `ceilInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('cosInterval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      // This test does not include some common cases. i.e. f(x = π/2) = 0, because the difference between true x\n      // and x as a f32 is sufficiently large, such that the high slope of f @ x causes the results to be substantially\n      // different, so instead of getting 0 you get a value on the order of 10^-8 away from 0, thus difficult to express\n      // in a human readable manner.\n      { input: kValue.f32.infinity.negative, expected: kAny },\n      { input: kValue.f32.negative.min, expected: kAny },\n      { input: kValue.f32.negative.pi.whole, expected: [-1, plusOneULP(-1)] },\n      { input: kValue.f32.negative.pi.third, expected: [minusOneULP(1/2), 1/2] },\n      { input: 0, expected: [1, 1] },\n      { input: kValue.f32.positive.pi.third, expected: [minusOneULP(1/2), 1/2] },\n      { input: kValue.f32.positive.pi.whole, expected: [-1, plusOneULP(-1)] },\n      { input: kValue.f32.positive.max, expected: kAny },\n      { input: kValue.f32.infinity.positive, expected: kAny },\n    ]\n  )\n  .fn(t => {\n    const error = (_: number): number => {\n      return 2 ** -11;\n    };\n\n    t.params.expected = applyError(t.params.expected, error);\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = cosInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `cosInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('coshInterval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult to express in a closed human readable\n      // form due to the inherited nature of the errors.\n      { input: kValue.f32.infinity.negative, expected: kAny },\n      { input: kValue.f32.negative.min, expected: kAny },\n      { input: -1, expected: [ hexToF32(0x3fc583a4), hexToF32(0x3fc583b1)] },  // ~1.1543...\n      { input: 0, expected: [hexToF32(0x3f7ffffd), hexToF32(0x3f800002)] },  // ~1\n      { input: 1, expected: [ hexToF32(0x3fc583a4), hexToF32(0x3fc583b1)] },  // ~1.1543...\n      { input: kValue.f32.positive.max, expected: kAny },\n      { input: kValue.f32.infinity.positive, expected: kAny },\n    ]\n  )\n  .fn(t => {\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = coshInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `coshInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('degreesInterval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: kValue.f32.infinity.negative, expected: kAny },\n      { input: kValue.f32.negative.min, expected: kAny },\n      { input: kValue.f32.negative.pi.whole, expected: [minusOneULP(-180), plusOneULP(-180)] },\n      { input: kValue.f32.negative.pi.three_quarters, expected: [minusOneULP(-135), plusOneULP(-135)] },\n      { input: kValue.f32.negative.pi.half, expected: [minusOneULP(-90), plusOneULP(-90)] },\n      { input: kValue.f32.negative.pi.third, expected: [minusOneULP(-60), plusOneULP(-60)] },\n      { input: kValue.f32.negative.pi.quarter, expected: [minusOneULP(-45), plusOneULP(-45)] },\n      { input: kValue.f32.negative.pi.sixth, expected: [minusOneULP(-30), plusOneULP(-30)] },\n      { input: 0, expected: [0] },\n      { input: kValue.f32.positive.pi.sixth, expected: [minusOneULP(30), plusOneULP(30)] },\n      { input: kValue.f32.positive.pi.quarter, expected: [minusOneULP(45), plusOneULP(45)] },\n      { input: kValue.f32.positive.pi.third, expected: [minusOneULP(60), plusOneULP(60)] },\n      { input: kValue.f32.positive.pi.half, expected: [minusOneULP(90), plusOneULP(90)] },\n      { input: kValue.f32.positive.pi.three_quarters, expected: [minusOneULP(135), plusOneULP(135)] },\n      { input: kValue.f32.positive.pi.whole, expected: [minusOneULP(180), plusOneULP(180)] },\n      { input: kValue.f32.positive.max, expected: kAny },\n      { input: kValue.f32.infinity.positive, expected: kAny },\n    ]\n  )\n  .fn(t => {\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = degreesInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `degreesInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('expInterval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: kValue.f32.infinity.negative, expected: kAny },\n      { input: 0, expected: [1] },\n      { input: 1, expected: [kValue.f32.positive.e, plusOneULP(kValue.f32.positive.e)] },\n      { input: 89, expected: kAny },\n    ]\n  )\n  .fn(t => {\n    const error = (x: number): number => {\n      const n = 3 + 2 * Math.abs(t.params.input);\n      return n * oneULP(x);\n    };\n\n    t.params.expected = applyError(t.params.expected, error);\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = expInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `expInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('exp2Interval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: kValue.f32.infinity.negative, expected: kAny },\n      { input: 0, expected: [1] },\n      { input: 1, expected: [2] },\n      { input: 128, expected: kAny },\n    ]\n  )\n  .fn(t => {\n    const error = (x: number): number => {\n      const n = 3 + 2 * Math.abs(t.params.input);\n      return n * oneULP(x);\n    };\n\n    t.params.expected = applyError(t.params.expected, error);\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = exp2Interval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `exp2Interval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('floorInterval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: 0, expected: [0] },\n      { input: 0.1, expected: [0] },\n      { input: 0.9, expected: [0] },\n      { input: 1.0, expected: [1] },\n      { input: 1.1, expected: [1] },\n      { input: 1.9, expected: [1] },\n      { input: -0.1, expected: [-1] },\n      { input: -0.9, expected: [-1] },\n      { input: -1.0, expected: [-1] },\n      { input: -1.1, expected: [-2] },\n      { input: -1.9, expected: [-2] },\n\n      // Edge cases\n      { input: kValue.f32.infinity.positive, expected: kAny },\n      { input: kValue.f32.infinity.negative, expected: kAny },\n      { input: kValue.f32.positive.max, expected: [kValue.f32.positive.max] },\n      { input: kValue.f32.positive.min, expected: [0] },\n      { input: kValue.f32.negative.min, expected: [kValue.f32.negative.min] },\n      { input: kValue.f32.negative.max, expected: [-1] },\n      { input: kValue.powTwo.to30, expected: [kValue.powTwo.to30] },\n      { input: -kValue.powTwo.to30, expected: [-kValue.powTwo.to30] },\n\n      // 32-bit subnormals\n      { input: kValue.f32.subnormal.positive.max, expected: [0] },\n      { input: kValue.f32.subnormal.positive.min, expected: [0] },\n      { input: kValue.f32.subnormal.negative.min, expected: [-1, 0] },\n      { input: kValue.f32.subnormal.negative.max, expected: [-1, 0] },\n    ]\n  )\n  .fn(t => {\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = floorInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `floorInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('fractInterval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: 0, expected: [0] },\n      { input: 0.1, expected: [minusOneULP(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] }, // ~0.1\n      { input: 0.9, expected: [hexToF32(0x3f666666), plusOneULP(hexToF32(0x3f666666))] },  // ~0.9\n      { input: 1.0, expected: [0] },\n      { input: 1.1, expected: [hexToF64(0x3fb99998, 0x00000000), hexToF64(0x3fb9999a, 0x00000000)] }, // ~0.1\n      { input: -0.1, expected: [hexToF32(0x3f666666), plusOneULP(hexToF32(0x3f666666))] },  // ~0.9\n      { input: -0.9, expected: [hexToF64(0x3fb99999, 0x00000000), hexToF64(0x3fb9999a, 0x00000000)] }, // ~0.1\n      { input: -1.0, expected: [0] },\n      { input: -1.1, expected: [hexToF64(0x3feccccc, 0xc0000000), hexToF64(0x3feccccd, 0x00000000), ] }, // ~0.9\n\n      // Edge cases\n      { input: kValue.f32.infinity.positive, expected: kAny },\n      { input: kValue.f32.infinity.negative, expected: kAny },\n      { input: kValue.f32.positive.max, expected: [0] },\n      { input: kValue.f32.positive.min, expected: [kValue.f32.positive.min, kValue.f32.positive.min] },\n      { input: kValue.f32.negative.min, expected: [0] },\n      { input: kValue.f32.negative.max, expected: [kValue.f32.positive.less_than_one, 1.0] },\n    ]\n  )\n  .fn(t => {\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = fractInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `fractInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('inverseSqrtInterval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: -1, expected: kAny },\n      { input: 0, expected: kAny },\n      { input: 0.04, expected: [minusOneULP(5), plusOneULP(5)] },\n      { input: 1, expected: [1] },\n      { input: 100, expected: [minusOneULP(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] },  // ~0.1\n      { input: kValue.f32.positive.max, expected: [hexToF32(0x1f800000), plusNULP(hexToF32(0x1f800000), 2)] },  // ~5.421...e-20, i.e. 1/√max f32\n      { input: kValue.f32.infinity.positive, expected: kAny },\n    ]\n  )\n  .fn(t => {\n    const error = (n: number): number => {\n      return 2 * oneULP(n);\n    };\n\n    t.params.expected = applyError(t.params.expected, error);\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = inverseSqrtInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `inverseSqrtInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('lengthIntervalScalar')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult to express in a closed human readable\n      // form due to the inherited nature of the errors.\n      //\n      // length(0) = kAny, because length uses sqrt, which is defined as 1/inversesqrt\n      {input: 0, expected: kAny },\n      {input: 1.0, expected: [hexToF64(0x3fefffff, 0x70000000), hexToF64(0x3ff00000, 0x90000000)] },  // ~1\n      {input: -1.0, expected: [hexToF64(0x3fefffff, 0x70000000), hexToF64(0x3ff00000, 0x90000000)] },  // ~1\n      {input: 0.1, expected: [hexToF64(0x3fb99998, 0x90000000), hexToF64(0x3fb9999a, 0x70000000)] },  // ~0.1\n      {input: -0.1, expected: [hexToF64(0x3fb99998, 0x90000000), hexToF64(0x3fb9999a, 0x70000000)] },  // ~0.1\n      {input: 10.0, expected: [hexToF64(0x4023ffff, 0x70000000), hexToF64(0x40240000, 0xb0000000)] },  // ~10\n      {input: -10.0, expected: [hexToF64(0x4023ffff, 0x70000000), hexToF64(0x40240000, 0xb0000000)] },  // ~10\n\n      // Subnormal Cases\n      { input: kValue.f32.subnormal.negative.min, expected: kAny },\n      { input: kValue.f32.subnormal.negative.max, expected: kAny },\n      { input: kValue.f32.subnormal.positive.min, expected: kAny },\n      { input: kValue.f32.subnormal.positive.max, expected: kAny },\n\n      // Edge cases\n      { input: kValue.f32.infinity.positive, expected: kAny },\n      { input: kValue.f32.infinity.negative, expected: kAny },\n      { input: kValue.f32.negative.min, expected: kAny },\n      { input: kValue.f32.negative.max, expected: kAny },\n      { input: kValue.f32.positive.min, expected: kAny },\n      { input: kValue.f32.positive.max, expected: kAny },\n    ]\n  )\n  .fn(t => {\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = lengthInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `lengthInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('logInterval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: -1, expected: kAny },\n      { input: 0, expected: kAny },\n      { input: 1, expected: [0] },\n      { input: kValue.f32.positive.e, expected: [minusOneULP(1), 1] },\n      { input: kValue.f32.positive.max, expected: [minusOneULP(hexToF32(0x42b17218)), hexToF32(0x42b17218)] },  // ~88.72...\n    ]\n  )\n  .fn(t => {\n    const error = (n: number): number => {\n      if (t.params.input >= 0.5 && t.params.input <= 2.0) {\n        return 2 ** -21;\n      }\n      return 3 * oneULP(n);\n    };\n\n    t.params.expected = applyError(t.params.expected, error);\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = logInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `logInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('log2Interval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: -1, expected: kAny },\n      { input: 0, expected: kAny },\n      { input: 1, expected: [0] },\n      { input: 2, expected: [1] },\n      { input: kValue.f32.positive.max, expected: [minusOneULP(128), 128] },\n    ]\n  )\n  .fn(t => {\n    const error = (n: number): number => {\n      if (t.params.input >= 0.5 && t.params.input <= 2.0) {\n        return 2 ** -21;\n      }\n      return 3 * oneULP(n);\n    };\n\n    t.params.expected = applyError(t.params.expected, error);\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = log2Interval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `log2Interval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('negationInterval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: 0, expected: [0] },\n      { input: 0.1, expected: [hexToF32(0xbdcccccd), plusOneULP(hexToF32(0xbdcccccd))] }, // ~-0.1\n      { input: 1.0, expected: [-1.0] },\n      { input: 1.9, expected: [hexToF32(0xbff33334), plusOneULP(hexToF32(0xbff33334))] },  // ~-1.9\n      { input: -0.1, expected: [minusOneULP(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] }, // ~0.1\n      { input: -1.0, expected: [1] },\n      { input: -1.9, expected: [minusOneULP(hexToF32(0x3ff33334)), hexToF32(0x3ff33334)] },  // ~1.9\n\n      // Edge cases\n      { input: kValue.f32.infinity.positive, expected: kAny },\n      { input: kValue.f32.infinity.negative, expected: kAny },\n      { input: kValue.f32.positive.max, expected: [kValue.f32.negative.min] },\n      { input: kValue.f32.positive.min, expected: [kValue.f32.negative.max] },\n      { input: kValue.f32.negative.min, expected: [kValue.f32.positive.max] },\n      { input: kValue.f32.negative.max, expected: [kValue.f32.positive.min] },\n\n      // 32-bit subnormals\n      { input: kValue.f32.subnormal.positive.max, expected: [kValue.f32.subnormal.negative.min, 0] },\n      { input: kValue.f32.subnormal.positive.min, expected: [kValue.f32.subnormal.negative.max, 0] },\n      { input: kValue.f32.subnormal.negative.min, expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: kValue.f32.subnormal.negative.max, expected: [0, kValue.f32.subnormal.positive.min] },\n    ]\n  )\n  .fn(t => {\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = negationInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `negationInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('quantizeToF16Interval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: kValue.f32.infinity.negative, expected: kAny },\n      { input: kValue.f32.negative.min, expected: kAny },\n      { input: kValue.f16.negative.min, expected: [kValue.f16.negative.min] },\n      { input: -1, expected: [-1] },\n      { input: -0.1, expected: [hexToF32(0xbdcce000), hexToF32(0xbdccc000)] },  // ~-0.1\n      { input: kValue.f16.negative.max, expected: [kValue.f16.negative.max] },\n      { input: kValue.f16.subnormal.negative.min, expected: [kValue.f16.subnormal.negative.min, 0] },\n      { input: kValue.f16.subnormal.negative.max, expected: [kValue.f16.subnormal.negative.max, 0] },\n      { input: kValue.f32.subnormal.negative.max, expected: [kValue.f16.subnormal.negative.max, 0] },\n      { input: 0, expected: [0] },\n      { input: kValue.f32.subnormal.positive.min, expected: [0, kValue.f16.subnormal.positive.min] },\n      { input: kValue.f16.subnormal.positive.min, expected: [0, kValue.f16.subnormal.positive.min] },\n      { input: kValue.f16.subnormal.positive.max, expected: [0, kValue.f16.subnormal.positive.max] },\n      { input: kValue.f16.positive.min, expected: [kValue.f16.positive.min] },\n      { input: 0.1, expected: [hexToF32(0x3dccc000), hexToF32(0x3dcce000)] },  // ~0.1\n      { input: 1, expected: [1] },\n      { input: kValue.f16.positive.max, expected: [kValue.f16.positive.max] },\n      { input: kValue.f32.positive.max, expected: kAny },\n      { input: kValue.f32.infinity.positive, expected: kAny },\n    ]\n  )\n  .fn(t => {\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = quantizeToF16Interval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `quantizeToF16Interval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('radiansInterval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: kValue.f32.infinity.negative, expected: kAny },\n      { input: -180, expected: [minusOneULP(kValue.f32.negative.pi.whole), plusOneULP(kValue.f32.negative.pi.whole)] },\n      { input: -135, expected: [minusOneULP(kValue.f32.negative.pi.three_quarters), plusOneULP(kValue.f32.negative.pi.three_quarters)] },\n      { input: -90, expected: [minusOneULP(kValue.f32.negative.pi.half), plusOneULP(kValue.f32.negative.pi.half)] },\n      { input: -60, expected: [minusOneULP(kValue.f32.negative.pi.third), plusOneULP(kValue.f32.negative.pi.third)] },\n      { input: -45, expected: [minusOneULP(kValue.f32.negative.pi.quarter), plusOneULP(kValue.f32.negative.pi.quarter)] },\n      { input: -30, expected: [minusOneULP(kValue.f32.negative.pi.sixth), plusOneULP(kValue.f32.negative.pi.sixth)] },\n      { input: 0, expected: [0] },\n      { input: 30, expected: [minusOneULP(kValue.f32.positive.pi.sixth), plusOneULP(kValue.f32.positive.pi.sixth)] },\n      { input: 45, expected: [minusOneULP(kValue.f32.positive.pi.quarter), plusOneULP(kValue.f32.positive.pi.quarter)] },\n      { input: 60, expected: [minusOneULP(kValue.f32.positive.pi.third), plusOneULP(kValue.f32.positive.pi.third)] },\n      { input: 90, expected: [minusOneULP(kValue.f32.positive.pi.half), plusOneULP(kValue.f32.positive.pi.half)] },\n      { input: 135, expected: [minusOneULP(kValue.f32.positive.pi.three_quarters), plusOneULP(kValue.f32.positive.pi.three_quarters)] },\n      { input: 180, expected: [minusOneULP(kValue.f32.positive.pi.whole), plusOneULP(kValue.f32.positive.pi.whole)] },\n      { input: kValue.f32.infinity.positive, expected: kAny },\n    ]\n  )\n  .fn(t => {\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = radiansInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `radiansInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('roundInterval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: 0, expected: [0] },\n      { input: 0.1, expected: [0] },\n      { input: 0.5, expected: [0] },  // Testing tie breaking\n      { input: 0.9, expected: [1] },\n      { input: 1.0, expected: [1] },\n      { input: 1.1, expected: [1] },\n      { input: 1.5, expected: [2] },  // Testing tie breaking\n      { input: 1.9, expected: [2] },\n      { input: -0.1, expected: [0] },\n      { input: -0.5, expected: [0] },  // Testing tie breaking\n      { input: -0.9, expected: [-1] },\n      { input: -1.0, expected: [-1] },\n      { input: -1.1, expected: [-1] },\n      { input: -1.5, expected: [-2] },  // Testing tie breaking\n      { input: -1.9, expected: [-2] },\n\n      // Edge cases\n      { input: kValue.f32.infinity.positive, expected: kAny },\n      { input: kValue.f32.infinity.negative, expected: kAny },\n      { input: kValue.f32.positive.max, expected: [kValue.f32.positive.max] },\n      { input: kValue.f32.positive.min, expected: [0] },\n      { input: kValue.f32.negative.min, expected: [kValue.f32.negative.min] },\n      { input: kValue.f32.negative.max, expected: [0] },\n      { input: kValue.powTwo.to30, expected: [kValue.powTwo.to30] },\n      { input: -kValue.powTwo.to30, expected: [-kValue.powTwo.to30] },\n\n      // 32-bit subnormals\n      { input: kValue.f32.subnormal.positive.max, expected: [0] },\n      { input: kValue.f32.subnormal.positive.min, expected: [0] },\n      { input: kValue.f32.subnormal.negative.min, expected: [0] },\n      { input: kValue.f32.subnormal.negative.max, expected: [0] },\n    ]\n  )\n  .fn(t => {\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = roundInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `roundInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('saturateInterval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      // Normals\n      { input: 0, expected: [0] },\n      { input: 1, expected: [1.0] },\n      { input: -0.1, expected: [0] },\n      { input: -1, expected: [0] },\n      { input: -10, expected: [0] },\n      { input: 0.1, expected: [minusOneULP(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] },  // ~0.1\n      { input: 10, expected: [1.0] },\n      { input: 11.1, expected: [1.0] },\n      { input: kValue.f32.positive.max, expected: [1.0] },\n      { input: kValue.f32.positive.min, expected: [kValue.f32.positive.min] },\n      { input: kValue.f32.negative.max, expected: [0.0] },\n      { input: kValue.f32.negative.min, expected: [0.0] },\n\n      // Subnormals\n      { input: kValue.f32.subnormal.positive.max, expected: [0.0, kValue.f32.subnormal.positive.max] },\n      { input: kValue.f32.subnormal.positive.min, expected: [0.0, kValue.f32.subnormal.positive.min] },\n      { input: kValue.f32.subnormal.negative.min, expected: [0.0] },\n      { input: kValue.f32.subnormal.negative.max, expected: [0.0] },\n\n      // Infinities\n      { input: kValue.f32.infinity.positive, expected: kAny },\n      { input: kValue.f32.infinity.negative, expected: kAny },\n    ]\n  )\n  .fn(t => {\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = saturateInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `saturationInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('signInterval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: kValue.f32.infinity.negative, expected: kAny },\n      { input: kValue.f32.negative.min, expected: [-1] },\n      { input: -10, expected: [-1] },\n      { input: -1, expected: [-1] },\n      { input: -0.1, expected: [-1] },\n      { input: kValue.f32.negative.max, expected:  [-1] },\n      { input: kValue.f32.subnormal.negative.min, expected: [-1, 0] },\n      { input: kValue.f32.subnormal.negative.max, expected: [-1, 0] },\n      { input: 0, expected: [0] },\n      { input: kValue.f32.subnormal.positive.max, expected: [0, 1] },\n      { input: kValue.f32.subnormal.positive.min, expected: [0, 1] },\n      { input: kValue.f32.positive.min, expected: [1] },\n      { input: 0.1, expected: [1] },\n      { input: 1, expected: [1] },\n      { input: 10, expected: [1] },\n      { input: kValue.f32.positive.max, expected: [1] },\n      { input: kValue.f32.infinity.positive, expected: kAny },\n    ]\n  )\n  .fn(t => {\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = signInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `signInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('sinInterval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      // This test does not include some common cases, i.e. f(x = -π|π) = 0, because the difference between true x and x\n      // as a f32 is sufficiently large, such that the high slope of f @ x causes the results to be substantially\n      // different, so instead of getting 0 you get a value on the order of 10^-8 away from it, thus difficult to\n      // express in a human readable manner.\n      { input: kValue.f32.infinity.negative, expected: kAny },\n      { input: kValue.f32.negative.min, expected: kAny },\n      { input: kValue.f32.negative.pi.half, expected: [-1, plusOneULP(-1)] },\n      { input: 0, expected: [0] },\n      { input: kValue.f32.positive.pi.half, expected: [minusOneULP(1), 1] },\n      { input: kValue.f32.positive.max, expected: kAny },\n      { input: kValue.f32.infinity.positive, expected: kAny },\n    ]\n  )\n  .fn(t => {\n    const error = (_: number): number => {\n      return 2 ** -11;\n    };\n\n    t.params.expected = applyError(t.params.expected, error);\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = sinInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `sinInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('sinhInterval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult to express in a closed human readable\n      // form due to the inherited nature of the errors.\n      { input: kValue.f32.infinity.negative, expected: kAny },\n      { input: kValue.f32.negative.min, expected: kAny },\n      { input: -1, expected: [ hexToF32(0xbf966d05), hexToF32(0xbf966cf8)] },  // ~-1.175...\n      { input: 0, expected: [hexToF32(0xb4600000), hexToF32(0x34600000)] },  // ~0\n      { input: 1, expected: [ hexToF32(0x3f966cf8), hexToF32(0x3f966d05)] },  // ~1.175...\n      { input: kValue.f32.positive.max, expected: kAny },\n      { input: kValue.f32.infinity.positive, expected: kAny },\n    ]\n  )\n  .fn(t => {\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = sinhInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `sinhInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('sqrtInterval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult to express in a closed human readable\n      // form due to the inherited nature of the errors.\n      { input: -1, expected: kAny },\n      { input: 0, expected: kAny },\n      { input: 0.01, expected: [hexToF64(0x3fb99998, 0xb0000000), hexToF64(0x3fb9999a, 0x70000000)] },  // ~0.1\n      { input: 1, expected: [hexToF64(0x3fefffff, 0x70000000), hexToF64(0x3ff00000, 0x90000000)] },  // ~1\n      { input: 4, expected: [hexToF64(0x3fffffff, 0x70000000), hexToF64(0x40000000, 0x90000000)] },  // ~2\n      { input: 100, expected: [hexToF64(0x4023ffff, 0x70000000), hexToF64(0x40240000, 0xb0000000)] },  // ~10\n      { input: kValue.f32.infinity.positive, expected: kAny },\n    ]\n  )\n  .fn(t => {\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = sqrtInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `sqrtInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('tanInterval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      // All of these are hard coded, since the error intervals are difficult to express in a closed human readable\n      // form. Some easy looking cases like f(x = -π|π) = 0 are actually quite difficult. This is because the interval\n      // is calculated from the results of sin(x)/cos(x), which becomes very messy at x = -π|π, since π is irrational,\n      // thus does not have an exact representation as a f32.\n      // Even at 0, which has a precise f32 value, there is still the problem that result of sin(0) and cos(0) will be\n      // intervals due to the inherited nature of errors, so the proper interval will be an interval calculated from\n      // dividing an interval by another interval and applying an error function to that. This complexity is why the\n      // entire interval framework was developed.\n      // The examples here have been manually traced to confirm the expectation values are correct.\n      { input: kValue.f32.infinity.negative, expected: kAny },\n      { input: kValue.f32.negative.min, expected: kAny },\n      { input: kValue.f32.negative.pi.whole, expected: [hexToF64(0xbf4002bc, 0x90000000), hexToF64(0x3f400144, 0xf0000000)] },  // ~0.0\n      { input: kValue.f32.negative.pi.half, expected: kAny },\n      { input: 0, expected: [hexToF64(0xbf400200, 0xb0000000), hexToF64(0x3f400200, 0xb0000000)] },  // ~0.0\n      { input: kValue.f32.positive.pi.half, expected: kAny },\n      { input: kValue.f32.positive.pi.whole, expected: [hexToF64(0xbf400144, 0xf0000000), hexToF64(0x3f4002bc, 0x90000000)] },  // ~0.0\n      { input: kValue.f32.positive.max, expected: kAny },\n      { input: kValue.f32.infinity.positive, expected: kAny },\n    ]\n  )\n  .fn(t => {\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = tanInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `tanInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('tanhInterval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult to express in a closed human readable\n      // form due to the inherited nature of the errors.\n      { input: kValue.f32.infinity.negative, expected: kAny },\n      { input: kValue.f32.negative.min, expected: kAny },\n      { input: -1, expected: [hexToF64(0xbfe85efd, 0x10000000), hexToF64(0xbfe85ef8, 0x90000000)] },  // ~-0.7615...\n      { input: 0, expected: [hexToF64(0xbe8c0000, 0xb0000000), hexToF64(0x3e8c0000, 0xb0000000)] },  // ~0\n      { input: 1, expected: [hexToF64(0x3fe85ef8, 0x90000000), hexToF64(0x3fe85efd, 0x10000000)] },  // ~0.7615...\n      { input: kValue.f32.positive.max, expected: kAny },\n      { input: kValue.f32.infinity.positive, expected: kAny },\n    ]\n  )\n  .fn(t => {\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = tanhInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `tanhInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('truncInterval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: 0, expected: [0] },\n      { input: 0.1, expected: [0] },\n      { input: 0.9, expected: [0] },\n      { input: 1.0, expected: [1] },\n      { input: 1.1, expected: [1] },\n      { input: 1.9, expected: [1] },\n      { input: -0.1, expected: [0] },\n      { input: -0.9, expected: [0] },\n      { input: -1.0, expected: [-1] },\n      { input: -1.1, expected: [-1] },\n      { input: -1.9, expected: [-1] },\n\n      // Edge cases\n      { input: kValue.f32.infinity.positive, expected: kAny },\n      { input: kValue.f32.infinity.negative, expected: kAny },\n      { input: kValue.f32.positive.max, expected: [kValue.f32.positive.max] },\n      { input: kValue.f32.positive.min, expected: [0] },\n      { input: kValue.f32.negative.min, expected: [kValue.f32.negative.min] },\n      { input: kValue.f32.negative.max, expected: [0] },\n\n      // 32-bit subnormals\n      { input: kValue.f32.subnormal.positive.max, expected: [0] },\n      { input: kValue.f32.subnormal.positive.min, expected: [0] },\n      { input: kValue.f32.subnormal.negative.min, expected: [0] },\n      { input: kValue.f32.subnormal.negative.max, expected: [0] },\n    ]\n  )\n  .fn(t => {\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = truncInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `truncInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ninterface BinaryToIntervalCase {\n  // input is a pair of independent values, not an range, so should not be\n  // converted to a F32Interval.\n  input: [number, number];\n  expected: IntervalBounds;\n}\n\ng.test('additionInterval')\n  .paramsSubcasesOnly<BinaryToIntervalCase>(\n    // prettier-ignore\n    [\n      // 32-bit normals\n      { input: [0, 0], expected: [0] },\n      { input: [1, 0], expected: [1] },\n      { input: [0, 1], expected: [1] },\n      { input: [-1, 0], expected: [-1] },\n      { input: [0, -1], expected: [-1] },\n      { input: [1, 1], expected: [2] },\n      { input: [1, -1], expected: [0] },\n      { input: [-1, 1], expected: [0] },\n      { input: [-1, -1], expected: [-2] },\n\n      // 64-bit normals\n      { input: [0.1, 0], expected: [minusOneULP(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] },  // ~0.1\n      { input: [0, 0.1], expected: [minusOneULP(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] },  // ~0.1\n      { input: [-0.1, 0], expected: [hexToF32(0xbdcccccd), plusOneULP(hexToF32(0xbdcccccd))] },  // ~-0.1\n      { input: [0, -0.1], expected: [hexToF32(0xbdcccccd), plusOneULP(hexToF32(0xbdcccccd))] },  // ~-0.1\n      { input: [0.1, 0.1], expected: [minusOneULP(hexToF32(0x3e4ccccd)), hexToF32(0x3e4ccccd)] },  // ~0.2\n      { input: [0.1, -0.1], expected: [minusOneULP(hexToF32(0x3dcccccd)) - hexToF32(0x3dcccccd), hexToF32(0x3dcccccd) - minusOneULP(hexToF32(0x3dcccccd))] }, // ~0\n      { input: [-0.1, 0.1], expected: [minusOneULP(hexToF32(0x3dcccccd)) - hexToF32(0x3dcccccd), hexToF32(0x3dcccccd) - minusOneULP(hexToF32(0x3dcccccd))] }, // ~0\n      { input: [-0.1, -0.1], expected: [hexToF32(0xbe4ccccd), plusOneULP(hexToF32(0xbe4ccccd))] },  // ~-0.2\n\n      // 32-bit subnormals\n      { input: [kValue.f32.subnormal.positive.max, 0], expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: [0, kValue.f32.subnormal.positive.max], expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: [kValue.f32.subnormal.positive.min, 0], expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: [0, kValue.f32.subnormal.positive.min], expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: [kValue.f32.subnormal.negative.max, 0], expected: [kValue.f32.subnormal.negative.max, 0] },\n      { input: [0, kValue.f32.subnormal.negative.max], expected: [kValue.f32.subnormal.negative.max, 0] },\n      { input: [kValue.f32.subnormal.negative.min, 0], expected: [kValue.f32.subnormal.negative.min, 0] },\n      { input: [0, kValue.f32.subnormal.negative.min], expected: [kValue.f32.subnormal.negative.min, 0] },\n\n      // Infinities\n      { input: [0, kValue.f32.infinity.positive], expected: kAny },\n      { input: [kValue.f32.infinity.positive, 0], expected: kAny},\n      { input: [kValue.f32.infinity.positive, kValue.f32.infinity.positive], expected: kAny },\n      { input: [0, kValue.f32.infinity.negative], expected: kAny },\n      { input: [kValue.f32.infinity.negative, 0], expected: kAny },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.negative], expected: kAny },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], expected: kAny },\n      { input: [kValue.f32.infinity.positive, kValue.f32.infinity.negative], expected: kAny },\n    ]\n  )\n  .fn(t => {\n    const [x, y] = t.params.input;\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = additionInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `additionInterval(${x}, ${y}) returned ${got}. Expected ${expected}`\n    );\n  });\n\n// Note: atan2's parameters are labelled (y, x) instead of (x, y)\ng.test('atan2Interval')\n  .paramsSubcasesOnly<BinaryToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult to express in a closed human readable\n      // form due to the inherited nature of the errors.\n\n      // The positive x & y quadrant is tested in more detail, and the other quadrants are spot checked that values are\n      // pointing in the right direction.\n\n      // positive y, positive x\n      { input: [1, hexToF32(0x3fddb3d7)], expected: [hexToF64(0x3fe0bf51, 0xe0000000), hexToF64(0x3fe0c352, 0xa0000000)] },  // x = √3, expected = ~π/6\n      { input: [1, 1], expected: [hexToF64(0x3fe91ffb, 0x20000000), hexToF64(0x3fe923fb, 0xa0000000)] },  // expected = ~π/4\n      { input: [hexToF32(0x3fddb3d7), 1], expected: [hexToF64(0x3ff0bf52, 0x00000000), hexToF64(0x3ff0c352, 0x60000000)] },  // y = √3, expected = ~π/3\n      { input: [Number.POSITIVE_INFINITY, 1], expected: kAny },\n\n      // positive y, negative x\n      { input: [1, -1], expected: [hexToF64(0x4002d8fc, 0x60000000), hexToF64(0x4002d9fc, 0xa0000000)] },  // expected = ~3/4 * π\n      { input: [Number.POSITIVE_INFINITY, -1], expected: kAny },\n\n      // negative y, negative x\n      { input: [-1, -1], expected: [hexToF64(0xc002d9fc, 0xa0000000), hexToF64(0xc002d8fc, 0x60000000)] },  // expected = ~-3/4 * π\n      { input: [Number.NEGATIVE_INFINITY, -1], expected: kAny },\n\n      // negative y, positive x\n      { input: [-1, 1], expected: [hexToF64(0xbfe923fb, 0xa0000000), hexToF64(0xbfe91ffb, 0x20000000)] },  // expected = ~-π/4\n      { input: [Number.NEGATIVE_INFINITY, 1], expected: kAny },\n\n      // Discontinuity @ origin (0,0)\n      { input: [0, 0], expected: kAny },\n      { input: [0, kValue.f32.subnormal.positive.max], expected: kAny },\n      { input: [0, kValue.f32.subnormal.negative.min], expected: kAny },\n      { input: [0, kValue.f32.positive.min], expected: kAny },\n      { input: [0, kValue.f32.negative.max], expected: kAny },\n      { input: [0, kValue.f32.positive.max], expected: kAny },\n      { input: [0, kValue.f32.negative.min], expected: kAny },\n      { input: [0, kValue.f32.infinity.positive], expected: kAny },\n      { input: [0, kValue.f32.infinity.negative], expected: kAny },\n      { input: [0, 1], expected: kAny },\n      { input: [kValue.f32.subnormal.positive.max, 1], expected: kAny },\n      { input: [kValue.f32.subnormal.negative.min, 1], expected: kAny },\n    ]\n  )\n  .fn(t => {\n    const [y, x] = t.params.input;\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = atan2Interval(y, x);\n    t.expect(\n      objectEquals(expected, got),\n      `atan2Interval(${y}, ${x}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('distanceIntervalScalar')\n  .paramsSubcasesOnly<BinaryToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult\n      // to express in a closed human readable  form due to the inherited nature\n      // of the errors.\n      //\n      // distance(x, y), where x - y = 0 has an acceptance interval of kAny,\n      // because distance(x, y) = length(x - y), and length(0) = kAny\n      { input: [0, 0], expected: kAny },\n      { input: [1.0, 0], expected: [hexToF64(0x3fefffff, 0x70000000), hexToF64(0x3ff00000, 0x90000000)] },  // ~1\n      { input: [0.0, 1.0], expected: [hexToF64(0x3fefffff, 0x70000000), hexToF64(0x3ff00000, 0x90000000)] },  // ~1\n      { input: [1.0, 1.0], expected: kAny },\n      { input: [-0.0, -1.0], expected: [hexToF64(0x3fefffff, 0x70000000), hexToF64(0x3ff00000, 0x90000000)] },  // ~1\n      { input: [0.0, -1.0], expected: [hexToF64(0x3fefffff, 0x70000000), hexToF64(0x3ff00000, 0x90000000)] },  // ~1\n      { input: [-1.0, -1.0], expected: kAny },\n      { input: [0.1, 0], expected: [hexToF64(0x3fb99998, 0x90000000), hexToF64(0x3fb9999a, 0x70000000)] },  // ~0.1\n      { input: [0, 0.1], expected: [hexToF64(0x3fb99998, 0x90000000), hexToF64(0x3fb9999a, 0x70000000)] },  // ~0.1\n      { input: [-0.1, 0], expected: [hexToF64(0x3fb99998, 0x90000000), hexToF64(0x3fb9999a, 0x70000000)] },  // ~0.1\n      { input: [0, -0.1], expected: [hexToF64(0x3fb99998, 0x90000000), hexToF64(0x3fb9999a, 0x70000000)] },  // ~0.1\n      { input: [10.0, 0], expected: [hexToF64(0x4023ffff, 0x70000000), hexToF64(0x40240000, 0xb0000000)] },  // ~10\n      { input: [0, 10.0], expected: [hexToF64(0x4023ffff, 0x70000000), hexToF64(0x40240000, 0xb0000000)] },  // ~10\n      { input: [-10.0, 0], expected: [hexToF64(0x4023ffff, 0x70000000), hexToF64(0x40240000, 0xb0000000)] },  // ~10\n      { input: [0, -10.0], expected: [hexToF64(0x4023ffff, 0x70000000), hexToF64(0x40240000, 0xb0000000)] },  // ~10\n\n      // Subnormal Cases\n      { input: [kValue.f32.subnormal.negative.min, 0], expected: kAny },\n      { input: [kValue.f32.subnormal.negative.max, 0], expected: kAny },\n      { input: [kValue.f32.subnormal.positive.min, 0], expected: kAny },\n      { input: [kValue.f32.subnormal.positive.max, 0], expected: kAny },\n\n      // Edge cases\n      { input: [kValue.f32.infinity.positive, 0], expected: kAny },\n      { input: [kValue.f32.infinity.negative, 0], expected: kAny },\n      { input: [kValue.f32.negative.min, 0], expected: kAny },\n      { input: [kValue.f32.negative.max, 0], expected: kAny },\n      { input: [kValue.f32.positive.min, 0], expected: kAny },\n      { input: [kValue.f32.positive.max, 0], expected: kAny },\n    ]\n  )\n  .fn(t => {\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = distanceInterval(...t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `distanceInterval(${t.params.input[0]}, ${t.params.input[1]}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('divisionInterval')\n  .paramsSubcasesOnly<BinaryToIntervalCase>(\n    // prettier-ignore\n    [\n      // 32-bit normals\n      { input: [0, 1], expected: [0] },\n      { input: [0, -1], expected: [0] },\n      { input: [1, 1], expected: [1] },\n      { input: [1, -1], expected: [-1] },\n      { input: [-1, 1], expected: [-1] },\n      { input: [-1, -1], expected: [1] },\n      { input: [4, 2], expected: [2] },\n      { input: [-4, 2], expected: [-2] },\n      { input: [4, -2], expected: [-2] },\n      { input: [-4, -2], expected: [2] },\n\n      // 64-bit normals\n      { input: [0, 0.1], expected: [0] },\n      { input: [0, -0.1], expected: [0] },\n      { input: [1, 0.1], expected: [minusOneULP(10), plusOneULP(10)] },\n      { input: [-1, 0.1], expected: [minusOneULP(-10), plusOneULP(-10)] },\n      { input: [1, -0.1], expected: [minusOneULP(-10), plusOneULP(-10)] },\n      { input: [-1, -0.1], expected: [minusOneULP(10), plusOneULP(10)] },\n\n      // Denominator out of range\n      { input: [1, kValue.f32.infinity.positive], expected: kAny },\n      { input: [1, kValue.f32.infinity.negative], expected: kAny },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.negative], expected: kAny },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], expected: kAny },\n      { input: [kValue.f32.infinity.positive, kValue.f32.infinity.negative], expected: kAny },\n      { input: [1, kValue.f32.positive.max], expected: kAny },\n      { input: [1, kValue.f32.negative.min], expected: kAny },\n      { input: [1, 0], expected: kAny },\n      { input: [1, kValue.f32.subnormal.positive.max], expected: kAny },\n    ]\n  )\n  .fn(t => {\n    const error = (n: number): number => {\n      return 2.5 * oneULP(n);\n    };\n\n    const [x, y] = t.params.input;\n    t.params.expected = applyError(t.params.expected, error);\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = divisionInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `divisionInterval(${x}, ${y}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('ldexpInterval')\n  .paramsSubcasesOnly<BinaryToIntervalCase>(\n    // prettier-ignore\n    [\n      // 32-bit normals\n      { input: [0, 0], expected: [0] },\n      { input: [0, 1], expected: [0] },\n      { input: [0, -1], expected: [0] },\n      { input: [1, 1], expected: [2] },\n      { input: [1, -1], expected: [0.5] },\n      { input: [-1, 1], expected: [-2] },\n      { input: [-1, -1], expected: [-0.5] },\n\n      // 64-bit normals\n      { input: [0, 0.1], expected: [0] },\n      { input: [0, -0.1], expected: [0] },\n      { input: [1.0000000001, 1], expected: [2, plusNULP(2, 2)] },  // ~2, additional ULP error due to first param not being f32 precise\n      { input: [-1.0000000001, 1], expected: [minusNULP(-2, 2), -2] },  // ~-2, additional ULP error due to first param not being f32 precise\n\n      // Edge Cases\n      { input: [1.9999998807907104, 127], expected: [kValue.f32.positive.max] },\n      { input: [1, -126], expected: [kValue.f32.positive.min] },\n      { input: [0.9999998807907104, -126], expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: [1.1920928955078125e-07, -126], expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: [-1.1920928955078125e-07, -126], expected: [kValue.f32.subnormal.negative.max, 0] },\n      { input: [-0.9999998807907104, -126], expected: [kValue.f32.subnormal.negative.min, 0] },\n      { input: [-1, -126], expected: [kValue.f32.negative.max] },\n      { input: [-1.9999998807907104, 127], expected: [kValue.f32.negative.min] },\n\n      // Out of Bounds\n      { input: [1, 128], expected: kAny },\n      { input: [-1, 128], expected: kAny },\n      { input: [100, 126], expected: kAny },\n      { input: [-100, 126], expected: kAny },\n      { input: [kValue.f32.positive.max, kValue.i32.positive.max], expected: kAny },\n      { input: [kValue.f32.negative.min, kValue.i32.positive.max], expected: kAny },\n    ]\n  )\n  .fn(t => {\n    const [x, y] = t.params.input;\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = ldexpInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `divisionInterval(${x}, ${y}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('maxInterval')\n  .paramsSubcasesOnly<BinaryToIntervalCase>(\n    // prettier-ignore\n    [\n      // 32-bit normals\n      { input: [0, 0], expected: [0] },\n      { input: [1, 0], expected: [1] },\n      { input: [0, 1], expected: [1] },\n      { input: [-1, 0], expected: [0] },\n      { input: [0, -1], expected: [0] },\n      { input: [1, 1], expected: [1] },\n      { input: [1, -1], expected: [1] },\n      { input: [-1, 1], expected: [1] },\n      { input: [-1, -1], expected: [-1] },\n\n      // 64-bit normals\n      { input: [0.1, 0], expected: [minusOneULP(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] },  // ~0.1\n      { input: [0, 0.1], expected: [minusOneULP(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] },  // ~0.1\n      { input: [-0.1, 0], expected: [0] },\n      { input: [0, -0.1], expected: [0] },\n      { input: [0.1, 0.1], expected: [minusOneULP(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] },  // ~0.1\n      { input: [0.1, -0.1], expected: [minusOneULP(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] },  // ~0.1\n      { input: [-0.1, 0.1], expected: [minusOneULP(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] },  // ~0.1\n      { input: [-0.1, -0.1], expected: [hexToF32(0xbdcccccd), plusOneULP(hexToF32(0xbdcccccd))] },  // ~-0.1\n\n      // 32-bit normals\n      { input: [kValue.f32.subnormal.positive.max, 0], expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: [0, kValue.f32.subnormal.positive.max], expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: [kValue.f32.subnormal.positive.min, 0], expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: [0, kValue.f32.subnormal.positive.min], expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: [kValue.f32.subnormal.negative.max, 0], expected: [0] },\n      { input: [0, kValue.f32.subnormal.negative.max], expected: [0] },\n      { input: [kValue.f32.subnormal.negative.min, 0], expected: [0] },\n      { input: [0, kValue.f32.subnormal.negative.min], expected: [0] },\n\n      // Infinities\n      { input: [0, kValue.f32.infinity.positive], expected: kAny },\n      { input: [kValue.f32.infinity.positive, 0], expected: kAny },\n      { input: [kValue.f32.infinity.positive, kValue.f32.infinity.positive], expected: kAny },\n      { input: [0, kValue.f32.infinity.negative], expected: kAny },\n      { input: [kValue.f32.infinity.negative, 0], expected: kAny },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.negative], expected: kAny },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], expected: kAny },\n      { input: [kValue.f32.infinity.positive, kValue.f32.infinity.negative], expected: kAny },\n    ]\n  )\n  .fn(t => {\n    const [x, y] = t.params.input;\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = maxInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `maxInterval(${x}, ${y}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('minInterval')\n  .paramsSubcasesOnly<BinaryToIntervalCase>(\n    // prettier-ignore\n    [\n      // 32-bit normals\n      { input: [0, 0], expected: [0] },\n      { input: [1, 0], expected: [0] },\n      { input: [0, 1], expected: [0] },\n      { input: [-1, 0], expected: [-1] },\n      { input: [0, -1], expected: [-1] },\n      { input: [1, 1], expected: [1] },\n      { input: [1, -1], expected: [-1] },\n      { input: [-1, 1], expected: [-1] },\n      { input: [-1, -1], expected: [-1] },\n\n      // 64-bit normals\n      { input: [0.1, 0], expected: [0] },\n      { input: [0, 0.1], expected: [0] },\n      { input: [-0.1, 0], expected: [hexToF32(0xbdcccccd), plusOneULP(hexToF32(0xbdcccccd))] },  // ~-0.1\n      { input: [0, -0.1], expected: [hexToF32(0xbdcccccd), plusOneULP(hexToF32(0xbdcccccd))] },  // ~-0.1\n      { input: [0.1, 0.1], expected: [minusOneULP(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] },  // ~0.1\n      { input: [0.1, -0.1], expected: [hexToF32(0xbdcccccd), plusOneULP(hexToF32(0xbdcccccd))] },  // ~-0.1\n      { input: [-0.1, 0.1], expected: [hexToF32(0xbdcccccd), plusOneULP(hexToF32(0xbdcccccd))] },  // ~-0.1\n      { input: [-0.1, -0.1], expected: [hexToF32(0xbdcccccd), plusOneULP(hexToF32(0xbdcccccd))] },  // ~-0.1\n\n      // 32-bit normals\n      { input: [kValue.f32.subnormal.positive.max, 0], expected: [0] },\n      { input: [0, kValue.f32.subnormal.positive.max], expected: [0] },\n      { input: [kValue.f32.subnormal.positive.min, 0], expected: [0] },\n      { input: [0, kValue.f32.subnormal.positive.min], expected: [0] },\n      { input: [kValue.f32.subnormal.negative.max, 0], expected: [kValue.f32.subnormal.negative.max, 0] },\n      { input: [0, kValue.f32.subnormal.negative.max], expected: [kValue.f32.subnormal.negative.max, 0] },\n      { input: [kValue.f32.subnormal.negative.min, 0], expected: [kValue.f32.subnormal.negative.min, 0] },\n      { input: [0, kValue.f32.subnormal.negative.min], expected: [kValue.f32.subnormal.negative.min, 0] },\n\n      // Infinities\n      { input: [0, kValue.f32.infinity.positive], expected: kAny },\n      { input: [kValue.f32.infinity.positive, 0], expected: kAny },\n      { input: [kValue.f32.infinity.positive, kValue.f32.infinity.positive], expected: kAny },\n      { input: [0, kValue.f32.infinity.negative], expected: kAny },\n      { input: [kValue.f32.infinity.negative, 0], expected: kAny },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.negative], expected: kAny },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], expected: kAny },\n      { input: [kValue.f32.infinity.positive, kValue.f32.infinity.negative], expected: kAny },\n    ]\n  )\n  .fn(t => {\n    const [x, y] = t.params.input;\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = minInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `minInterval(${x}, ${y}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('multiplicationInterval')\n  .paramsSubcasesOnly<BinaryToIntervalCase>(\n    // prettier-ignore\n    [\n      // 32-bit normals\n      { input: [0, 0], expected: [0] },\n      { input: [1, 0], expected: [0] },\n      { input: [0, 1], expected: [0] },\n      { input: [-1, 0], expected: [0] },\n      { input: [0, -1], expected: [0] },\n      { input: [1, 1], expected: [1] },\n      { input: [1, -1], expected: [-1] },\n      { input: [-1, 1], expected: [-1] },\n      { input: [-1, -1], expected: [1] },\n      { input: [2, 1], expected: [2] },\n      { input: [1, -2], expected: [-2] },\n      { input: [-2, 1], expected: [-2] },\n      { input: [-2, -1], expected: [2] },\n      { input: [2, 2], expected: [4] },\n      { input: [2, -2], expected: [-4] },\n      { input: [-2, 2], expected: [-4] },\n      { input: [-2, -2], expected: [4] },\n\n      // 64-bit normals\n      { input: [0.1, 0], expected: [0] },\n      { input: [0, 0.1], expected: [0] },\n      { input: [-0.1, 0], expected: [0] },\n      { input: [0, -0.1], expected: [0] },\n      { input: [0.1, 0.1], expected: [minusNULP(hexToF32(0x3c23d70a), 2), plusOneULP(hexToF32(0x3c23d70a))] },  // ~0.01\n      { input: [0.1, -0.1], expected: [minusOneULP(hexToF32(0xbc23d70a)), plusNULP(hexToF32(0xbc23d70a), 2)] },  // ~-0.01\n      { input: [-0.1, 0.1], expected: [minusOneULP(hexToF32(0xbc23d70a)), plusNULP(hexToF32(0xbc23d70a), 2)] },  // ~-0.01\n      { input: [-0.1, -0.1], expected: [minusNULP(hexToF32(0x3c23d70a), 2), plusOneULP(hexToF32(0x3c23d70a))] },  // ~0.01\n\n      // Infinities\n      { input: [0, kValue.f32.infinity.positive], expected: kAny },\n      { input: [1, kValue.f32.infinity.positive], expected: kAny },\n      { input: [-1, kValue.f32.infinity.positive], expected: kAny },\n      { input: [kValue.f32.infinity.positive, kValue.f32.infinity.positive], expected: kAny },\n      { input: [0, kValue.f32.infinity.negative], expected: kAny },\n      { input: [1, kValue.f32.infinity.negative], expected: kAny },\n      { input: [-1, kValue.f32.infinity.negative], expected: kAny },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.negative], expected: kAny },\n      { input: [kValue.f32.infinity.positive, kValue.f32.infinity.negative], expected: kAny },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], expected: kAny },\n\n      // Edge of f32\n      { input: [kValue.f32.positive.max, kValue.f32.positive.max], expected: kAny },\n      { input: [kValue.f32.negative.min, kValue.f32.negative.min], expected: kAny },\n      { input: [kValue.f32.positive.max, kValue.f32.negative.min], expected: kAny },\n      { input: [kValue.f32.negative.min, kValue.f32.positive.max], expected: kAny },\n    ]\n  )\n  .fn(t => {\n    const [x, y] = t.params.input;\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = multiplicationInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `multiplicationInterval(${x}, ${y}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('remainderInterval')\n  .paramsSubcasesOnly<BinaryToIntervalCase>(\n    // prettier-ignore\n    [\n      // 32-bit normals\n      { input: [0, 1], expected: [0, 0] },\n      { input: [0, -1], expected: [0, 0] },\n      { input: [1, 1], expected: [0, 1] },\n      { input: [1, -1], expected: [0, 1] },\n      { input: [-1, 1], expected: [-1, 0] },\n      { input: [-1, -1], expected: [-1, 0] },\n      { input: [4, 2], expected: [0, 2] },\n      { input: [-4, 2], expected: [-2, 0] },\n      { input: [4, -2], expected: [0, 2] },\n      { input: [-4, -2], expected: [-2, 0] },\n      { input: [2, 4], expected: [2, 2] },\n      { input: [-2, 4], expected: [-2, -2] },\n      { input: [2, -4], expected: [2, 2] },\n      { input: [-2, -4], expected: [-2, -2] },\n\n      // 64-bit normals\n      { input: [0, 0.1], expected: [0, 0] },\n      { input: [0, -0.1], expected: [0, 0] },\n      { input: [1, 0.1], expected: [hexToF32(0xb4000000), hexToF32(0x3dccccd8)] }, // ~[0, 0.1]\n      { input: [-1, 0.1], expected: [hexToF32(0xbdccccd8), hexToF32(0x34000000)] }, // ~[-0.1, 0]\n      { input: [1, -0.1], expected: [hexToF32(0xb4000000), hexToF32(0x3dccccd8)] }, // ~[0, 0.1]\n      { input: [-1, -0.1], expected: [hexToF32(0xbdccccd8), hexToF32(0x34000000)] }, // ~[-0.1, 0]\n\n      // Denominator out of range\n      { input: [1, kValue.f32.infinity.positive], expected: kAny },\n      { input: [1, kValue.f32.infinity.negative], expected: kAny },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.negative], expected: kAny },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], expected: kAny },\n      { input: [kValue.f32.infinity.positive, kValue.f32.infinity.negative], expected: kAny },\n      { input: [1, kValue.f32.positive.max], expected: kAny },\n      { input: [1, kValue.f32.negative.min], expected: kAny },\n      { input: [1, 0], expected: kAny },\n      { input: [1, kValue.f32.subnormal.positive.max], expected: kAny },\n    ]\n  )\n  .fn(t => {\n    const [x, y] = t.params.input;\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = remainderInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `remainderInterval(${x}, ${y}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('powInterval')\n  .paramsSubcasesOnly<BinaryToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult to express in a closed human readable\n      // form due to the inherited nature of the errors.\n      { input: [-1, 0], expected: kAny },\n      { input: [0, 0], expected: kAny },\n      { input: [1, 0], expected: [minusNULP(1, 3), hexToF64(0x3ff00000, 0x30000000)] },  // ~1\n      { input: [2, 0], expected: [minusNULP(1, 3), hexToF64(0x3ff00000, 0x30000000)] },  // ~1\n      { input: [kValue.f32.positive.max, 0], expected: [minusNULP(1, 3), hexToF64(0x3ff00000, 0x30000000)] },  // ~1\n      { input: [0, 1], expected: kAny },\n      { input: [1, 1], expected: [hexToF64(0x3feffffe, 0xdffffe00), hexToF64(0x3ff00000, 0xc0000200)] },  // ~1\n      { input: [1, 100], expected: [hexToF64(0x3fefffba, 0x3fff3800), hexToF64(0x3ff00023, 0x2000c800)] },  // ~1\n      { input: [1, kValue.f32.positive.max], expected: kAny },\n      { input: [2, 1], expected: [hexToF64(0x3ffffffe, 0xa0000200), hexToF64(0x40000001, 0x00000200)] },  // ~2\n      { input: [2, 2], expected: [hexToF64(0x400ffffd, 0xa0000400), hexToF64(0x40100001, 0xa0000400)] },  // ~4\n      { input: [10, 10], expected: [hexToF64(0x4202a04f, 0x51f77000), hexToF64(0x4202a070, 0xee08e000)] },  // ~10000000000\n      { input: [10, 1], expected: [hexToF64(0x4023fffe, 0x0b658b00), hexToF64(0x40240002, 0x149a7c00)] },  // ~10\n      { input: [kValue.f32.positive.max, 1], expected: kAny },\n    ]\n  )\n  .fn(t => {\n    const [x, y] = t.params.input;\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = powInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `powInterval(${x}, ${y}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('stepInterval')\n  .paramsSubcasesOnly<BinaryToIntervalCase>(\n    // prettier-ignore\n    [\n      // 32-bit normals\n      { input: [0, 0], expected: [1] },\n      { input: [1, 1], expected: [1] },\n      { input: [0, 1], expected: [1] },\n      { input: [1, 0], expected: [0] },\n      { input: [-1, -1], expected: [1] },\n      { input: [0, -1], expected: [0] },\n      { input: [-1, 0], expected: [1] },\n      { input: [-1, 1], expected: [1] },\n      { input: [1, -1], expected: [0] },\n\n      // 64-bit normals\n      { input: [0.1, 0.1], expected: [0, 1] },\n      { input: [0, 0.1], expected: [1] },\n      { input: [0.1, 0], expected: [0] },\n      { input: [0.1, 1], expected: [1] },\n      { input: [1, 0.1], expected: [0] },\n      { input: [-0.1, -0.1], expected: [0, 1] },\n      { input: [0, -0.1], expected: [0] },\n      { input: [-0.1, 0], expected: [1] },\n      { input: [-0.1, -1], expected: [0] },\n      { input: [-1, -0.1], expected: [1] },\n\n      // Subnormals\n      { input: [0, kValue.f32.subnormal.positive.max], expected: [1] },\n      { input: [0, kValue.f32.subnormal.positive.min], expected: [1] },\n      { input: [0, kValue.f32.subnormal.negative.max], expected: [0, 1] },\n      { input: [0, kValue.f32.subnormal.negative.min], expected: [0, 1] },\n      { input: [1, kValue.f32.subnormal.positive.max], expected: [0] },\n      { input: [1, kValue.f32.subnormal.positive.min], expected: [0] },\n      { input: [1, kValue.f32.subnormal.negative.max], expected: [0] },\n      { input: [1, kValue.f32.subnormal.negative.min], expected: [0] },\n      { input: [-1, kValue.f32.subnormal.positive.max], expected: [1] },\n      { input: [-1, kValue.f32.subnormal.positive.min], expected: [1] },\n      { input: [-1, kValue.f32.subnormal.negative.max], expected: [1] },\n      { input: [-1, kValue.f32.subnormal.negative.min], expected: [1] },\n      { input: [kValue.f32.subnormal.positive.max, 0], expected: [0, 1] },\n      { input: [kValue.f32.subnormal.positive.min, 0], expected: [0, 1] },\n      { input: [kValue.f32.subnormal.negative.max, 0], expected: [1] },\n      { input: [kValue.f32.subnormal.negative.min, 0], expected: [1] },\n      { input: [kValue.f32.subnormal.positive.max, 1], expected: [1] },\n      { input: [kValue.f32.subnormal.positive.min, 1], expected: [1] },\n      { input: [kValue.f32.subnormal.negative.max, 1], expected: [1] },\n      { input: [kValue.f32.subnormal.negative.min, 1], expected: [1] },\n      { input: [kValue.f32.subnormal.positive.max, -1], expected: [0] },\n      { input: [kValue.f32.subnormal.positive.min, -1], expected: [0] },\n      { input: [kValue.f32.subnormal.negative.max, -1], expected: [0] },\n      { input: [kValue.f32.subnormal.negative.min, -1], expected: [0] },\n      { input: [kValue.f32.subnormal.negative.min, kValue.f32.subnormal.positive.max], expected: [1] },\n      { input: [kValue.f32.subnormal.positive.max, kValue.f32.subnormal.negative.min], expected: [0, 1] },\n\n      // Infinities\n      { input: [0, kValue.f32.infinity.positive], expected: kAny },\n      { input: [kValue.f32.infinity.positive, 0], expected: kAny },\n      { input: [kValue.f32.infinity.positive, kValue.f32.infinity.positive], expected: kAny },\n      { input: [0, kValue.f32.infinity.negative], expected: kAny },\n      { input: [kValue.f32.infinity.negative, 0], expected: kAny },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.negative], expected: kAny },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], expected: kAny },\n      { input: [kValue.f32.infinity.positive, kValue.f32.infinity.negative], expected: kAny },\n    ]\n  )\n  .fn(t => {\n    const [edge, x] = t.params.input;\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = stepInterval(edge, x);\n    t.expect(\n      objectEquals(expected, got),\n      `stepInterval(${edge}, ${x}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('subtractionInterval')\n  .paramsSubcasesOnly<BinaryToIntervalCase>(\n    // prettier-ignore\n    [\n      // 32-bit normals\n      { input: [0, 0], expected: [0] },\n      { input: [1, 0], expected: [1] },\n      { input: [0, 1], expected: [-1] },\n      { input: [-1, 0], expected: [-1] },\n      { input: [0, -1], expected: [1] },\n      { input: [1, 1], expected: [0] },\n      { input: [1, -1], expected: [2] },\n      { input: [-1, 1], expected: [-2] },\n      { input: [-1, -1], expected: [0] },\n\n      // 64-bit normals\n      { input: [0.1, 0], expected: [minusOneULP(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] },  // ~0.1\n      { input: [0, 0.1], expected: [hexToF32(0xbdcccccd), plusOneULP(hexToF32(0xbdcccccd))] },  // ~-0.1\n      { input: [-0.1, 0], expected: [hexToF32(0xbdcccccd), plusOneULP(hexToF32(0xbdcccccd))] },  // ~-0.1\n      { input: [0, -0.1], expected: [minusOneULP(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] },  // ~0.1\n      { input: [0.1, 0.1], expected: [minusOneULP(hexToF32(0x3dcccccd)) - hexToF32(0x3dcccccd), hexToF32(0x3dcccccd) - minusOneULP(hexToF32(0x3dcccccd))] },  // ~0.0\n      { input: [0.1, -0.1], expected: [minusOneULP(hexToF32(0x3e4ccccd)), hexToF32(0x3e4ccccd)] }, // ~0.2\n      { input: [-0.1, 0.1], expected: [hexToF32(0xbe4ccccd), plusOneULP(hexToF32(0xbe4ccccd))] },  // ~-0.2\n      { input: [-0.1, -0.1], expected: [minusOneULP(hexToF32(0x3dcccccd)) - hexToF32(0x3dcccccd), hexToF32(0x3dcccccd) - minusOneULP(hexToF32(0x3dcccccd))] }, // ~0\n\n      // // 32-bit normals\n      { input: [kValue.f32.subnormal.positive.max, 0], expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: [0, kValue.f32.subnormal.positive.max], expected: [kValue.f32.subnormal.negative.min, 0] },\n      { input: [kValue.f32.subnormal.positive.min, 0], expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: [0, kValue.f32.subnormal.positive.min], expected: [kValue.f32.subnormal.negative.max, 0] },\n      { input: [kValue.f32.subnormal.negative.max, 0], expected: [kValue.f32.subnormal.negative.max, 0] },\n      { input: [0, kValue.f32.subnormal.negative.max], expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: [kValue.f32.subnormal.negative.min, 0], expected: [kValue.f32.subnormal.negative.min, 0] },\n      { input: [0, kValue.f32.subnormal.negative.min], expected: [0, kValue.f32.subnormal.positive.max] },\n\n      // Infinities\n      { input: [0, kValue.f32.infinity.positive], expected: kAny },\n      { input: [kValue.f32.infinity.positive, 0], expected: kAny },\n      { input: [kValue.f32.infinity.positive, kValue.f32.infinity.positive], expected: kAny },\n      { input: [0, kValue.f32.infinity.negative], expected: kAny },\n      { input: [kValue.f32.infinity.negative, 0], expected: kAny },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.negative], expected: kAny },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], expected: kAny },\n      { input: [kValue.f32.infinity.positive, kValue.f32.infinity.negative], expected: kAny },\n    ]\n  )\n  .fn(t => {\n    const [x, y] = t.params.input;\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = subtractionInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `subtractionInterval(${x}, ${y}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ninterface TernaryToIntervalCase {\n  input: [number, number, number];\n  expected: IntervalBounds;\n}\n\ng.test('clampMedianInterval')\n  .paramsSubcasesOnly<TernaryToIntervalCase>(\n    // prettier-ignore\n    [\n      // Normals\n      { input: [0, 0, 0], expected: [0] },\n      { input: [1, 0, 0], expected: [0] },\n      { input: [0, 1, 0], expected: [0] },\n      { input: [0, 0, 1], expected: [0] },\n      { input: [1, 0, 1], expected: [1] },\n      { input: [1, 1, 0], expected: [1] },\n      { input: [0, 1, 1], expected: [1] },\n      { input: [1, 1, 1], expected: [1] },\n      { input: [1, 10, 100], expected: [10] },\n      { input: [10, 1, 100], expected: [10] },\n      { input: [100, 1, 10], expected: [10] },\n      { input: [-10, 1, 100], expected: [1] },\n      { input: [10, 1, -100], expected: [1] },\n      { input: [-10, 1, -100], expected: [-10] },\n      { input: [-10, -10, -10], expected: [-10] },\n\n      // Subnormals\n      { input: [kValue.f32.subnormal.positive.max, 0, 0], expected: [0] },\n      { input: [0, kValue.f32.subnormal.positive.max, 0], expected: [0] },\n      { input: [0, 0, kValue.f32.subnormal.positive.max], expected: [0] },\n      { input: [kValue.f32.subnormal.positive.max, 0, kValue.f32.subnormal.positive.max], expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: [kValue.f32.subnormal.positive.max, kValue.f32.subnormal.positive.max, 0], expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: [0, kValue.f32.subnormal.positive.max, kValue.f32.subnormal.positive.max], expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: [kValue.f32.subnormal.positive.max, kValue.f32.subnormal.positive.max, kValue.f32.subnormal.positive.max], expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: [kValue.f32.subnormal.positive.max, kValue.f32.subnormal.positive.min, kValue.f32.subnormal.negative.max], expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: [kValue.f32.subnormal.positive.max, kValue.f32.subnormal.negative.min, kValue.f32.subnormal.negative.max], expected: [kValue.f32.subnormal.negative.max, 0] },\n      { input: [kValue.f32.positive.max, kValue.f32.positive.max, kValue.f32.subnormal.positive.min], expected: [kValue.f32.positive.max] },\n\n      // Infinities\n      { input: [0, 1, kValue.f32.infinity.positive], expected: kAny },\n      { input: [0, kValue.f32.infinity.positive, kValue.f32.infinity.positive], expected: kAny },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.positive, kValue.f32.infinity.positive], expected: kAny },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.positive, kValue.f32.infinity.negative], expected: kAny },\n    ]\n  )\n  .fn(t => {\n    const [x, y, z] = t.params.input;\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = clampMedianInterval(x, y, z);\n    t.expect(\n      objectEquals(expected, got),\n      `clampMedianInterval(${x}, ${y}, ${z}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('clampMinMaxInterval')\n  .paramsSubcasesOnly<TernaryToIntervalCase>(\n    // prettier-ignore\n    [\n      // Normals\n      { input: [0, 0, 0], expected: [0] },\n      { input: [1, 0, 0], expected: [0] },\n      { input: [0, 1, 0], expected: [0] },\n      { input: [0, 0, 1], expected: [0] },\n      { input: [1, 0, 1], expected: [1] },\n      { input: [1, 1, 0], expected: [0] },\n      { input: [0, 1, 1], expected: [1] },\n      { input: [1, 1, 1], expected: [1] },\n      { input: [1, 10, 100], expected: [10] },\n      { input: [10, 1, 100], expected: [10] },\n      { input: [100, 1, 10], expected: [10] },\n      { input: [-10, 1, 100], expected: [1] },\n      { input: [10, 1, -100], expected: [-100] },\n      { input: [-10, 1, -100], expected: [-100] },\n      { input: [-10, -10, -10], expected: [-10] },\n\n      // Subnormals\n      { input: [kValue.f32.subnormal.positive.max, 0, 0], expected: [0] },\n      { input: [0, kValue.f32.subnormal.positive.max, 0], expected: [0] },\n      { input: [0, 0, kValue.f32.subnormal.positive.max], expected: [0] },\n      { input: [kValue.f32.subnormal.positive.max, 0, kValue.f32.subnormal.positive.max], expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: [kValue.f32.subnormal.positive.max, kValue.f32.subnormal.positive.max, 0], expected: [0] },\n      { input: [0, kValue.f32.subnormal.positive.max, kValue.f32.subnormal.positive.max], expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: [kValue.f32.subnormal.positive.max, kValue.f32.subnormal.positive.max, kValue.f32.subnormal.positive.max], expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: [kValue.f32.subnormal.positive.max, kValue.f32.subnormal.positive.min, kValue.f32.subnormal.negative.max], expected: [kValue.f32.subnormal.negative.max, 0] },\n      { input: [kValue.f32.subnormal.positive.max, kValue.f32.subnormal.negative.min, kValue.f32.subnormal.negative.max], expected: [kValue.f32.subnormal.negative.max, 0] },\n      { input: [kValue.f32.positive.max, kValue.f32.positive.max, kValue.f32.subnormal.positive.min], expected: [0, kValue.f32.subnormal.positive.min] },\n\n      // Infinities\n      { input: [0, 1, kValue.f32.infinity.positive], expected: kAny },\n      { input: [0, kValue.f32.infinity.positive, kValue.f32.infinity.positive], expected: kAny },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.positive, kValue.f32.infinity.positive], expected: kAny },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.positive, kValue.f32.infinity.negative], expected: kAny },\n    ]\n  )\n  .fn(t => {\n    const [x, y, z] = t.params.input;\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = clampMinMaxInterval(x, y, z);\n    t.expect(\n      objectEquals(expected, got),\n      `clampMinMaxInterval(${x}, ${y}, ${z}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('mixImpreciseInterval')\n  .paramsSubcasesOnly<TernaryToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult to express in a closed human readable\n      // form due to the inherited nature of the errors.\n      // [0.0, 1.0] cases\n      { input: [0.0, 1.0, -1.0], expected: [-1.0] },\n      { input: [0.0, 1.0, 0.0], expected: [0.0] },\n      { input: [0.0, 1.0, 0.1], expected: [hexToF64(0x3fb99999,0x80000000), hexToF64(0x3fb99999,0xa0000000)] },  // ~0.1\n      { input: [0.0, 1.0, 0.5], expected: [0.5] },\n      { input: [0.0, 1.0, 0.9], expected: [hexToF64(0x3feccccc,0xc0000000), hexToF64(0x3feccccc,0xe0000000)] },  // ~0.9\n      { input: [0.0, 1.0, 1.0], expected: [1.0] },\n      { input: [0.0, 1.0, 2.0], expected: [2.0] },\n\n      // [1.0, 0.0] cases\n      { input: [1.0, 0.0, -1.0], expected: [2.0] },\n      { input: [1.0, 0.0, 0.0], expected: [1.0] },\n      { input: [1.0, 0.0, 0.1], expected: [hexToF64(0x3feccccc,0xc0000000), hexToF64(0x3feccccc,0xe0000000)] },  // ~0.9\n      { input: [1.0, 0.0, 0.5], expected: [0.5] },\n      { input: [1.0, 0.0, 0.9], expected: [hexToF64(0x3fb99999,0x00000000), hexToF64(0x3fb9999a,0x00000000)] },  // ~0.1\n      { input: [1.0, 0.0, 1.0], expected: [0.0] },\n      { input: [1.0, 0.0, 2.0], expected: [-1.0] },\n\n      // [0.0, 10.0] cases\n      { input: [0.0, 10.0, -1.0], expected: [-10.0] },\n      { input: [0.0, 10.0, 0.0], expected: [0.0] },\n      { input: [0.0, 10.0, 0.1], expected: [hexToF64(0x3fefffff,0xe0000000), hexToF64(0x3ff00000,0x20000000)] },  // ~1\n      { input: [0.0, 10.0, 0.5], expected: [5.0] },\n      { input: [0.0, 10.0, 0.9], expected: [hexToF64(0x4021ffff,0xe0000000), hexToF64(0x40220000,0x20000000)] },  // ~9\n      { input: [0.0, 10.0, 1.0], expected: [10.0] },\n      { input: [0.0, 10.0, 2.0], expected: [20.0] },\n\n      // [2.0, 10.0] cases\n      { input: [2.0, 10.0, -1.0], expected: [-6.0] },\n      { input: [2.0, 10.0, 0.0], expected: [2.0] },\n      { input: [2.0, 10.0, 0.1], expected: [hexToF64(0x40066666,0x60000000), hexToF64(0x40066666,0x80000000)] },  // ~2.8\n      { input: [2.0, 10.0, 0.5], expected: [6.0] },\n      { input: [2.0, 10.0, 0.9], expected: [hexToF64(0x40226666,0x60000000), hexToF64(0x40226666,0x80000000)] },  // ~9.2\n      { input: [2.0, 10.0, 1.0], expected: [10.0] },\n      { input: [2.0, 10.0, 2.0], expected: [18.0] },\n\n      // [-1.0, 1.0] cases\n      { input: [-1.0, 1.0, -2.0], expected: [-5.0] },\n      { input: [-1.0, 1.0, 0.0], expected: [-1.0] },\n      { input: [-1.0, 1.0, 0.1], expected: [hexToF64(0xbfe99999,0xa0000000), hexToF64(0xbfe99999,0x80000000)] },  // ~-0.8\n      { input: [-1.0, 1.0, 0.5], expected: [0.0] },\n      { input: [-1.0, 1.0, 0.9], expected: [hexToF64(0x3fe99999,0x80000000), hexToF64(0x3fe99999,0xc0000000)] },  // ~0.8\n      { input: [-1.0, 1.0, 1.0], expected: [1.0] },\n      { input: [-1.0, 1.0, 2.0], expected: [3.0] },\n\n      // Infinities\n      { input: [0.0, kValue.f32.infinity.positive, 0.5], expected: kAny },\n      { input: [kValue.f32.infinity.positive, 0.0, 0.5], expected: kAny },\n      { input: [kValue.f32.infinity.negative, 1.0, 0.5], expected: kAny },\n      { input: [1.0, kValue.f32.infinity.negative, 0.5], expected: kAny },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.positive, 0.5], expected: kAny },\n      { input: [kValue.f32.infinity.positive, kValue.f32.infinity.negative, 0.5], expected: kAny },\n      { input: [0.0, 1.0, kValue.f32.infinity.negative], expected: kAny },\n      { input: [1.0, 0.0, kValue.f32.infinity.negative], expected: kAny },\n      { input: [0.0, 1.0, kValue.f32.infinity.positive], expected: kAny },\n      { input: [1.0, 0.0, kValue.f32.infinity.positive], expected: kAny },\n\n      // Showing how precise and imprecise versions diff\n      { input: [kValue.f32.negative.min, 10.0, 1.0], expected: [0.0]},\n    ]\n  )\n  .fn(t => {\n    const [x, y, z] = t.params.input;\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = mixImpreciseInterval(x, y, z);\n    t.expect(\n      objectEquals(expected, got),\n      `mixImpreciseInterval(${x}, ${y}, ${z}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('mixPreciseInterval')\n  .paramsSubcasesOnly<TernaryToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult to express in a closed human readable\n      // form due to the inherited nature of the errors.\n      // [0.0, 1.0] cases\n      { input: [0.0, 1.0, -1.0], expected: [-1.0] },\n      { input: [0.0, 1.0, 0.0], expected: [0.0] },\n      { input: [0.0, 1.0, 0.1], expected: [hexToF64(0x3fb99999,0x80000000), hexToF64(0x3fb99999,0xa0000000)] },  // ~0.1\n      { input: [0.0, 1.0, 0.5], expected: [0.5] },\n      { input: [0.0, 1.0, 0.9], expected: [hexToF64(0x3feccccc,0xc0000000), hexToF64(0x3feccccc,0xe0000000)] },  // ~0.9\n      { input: [0.0, 1.0, 1.0], expected: [1.0] },\n      { input: [0.0, 1.0, 2.0], expected: [2.0] },\n\n      // [1.0, 0.0] cases\n      { input: [1.0, 0.0, -1.0], expected: [2.0] },\n      { input: [1.0, 0.0, 0.0], expected: [1.0] },\n      { input: [1.0, 0.0, 0.1], expected: [hexToF64(0x3feccccc,0xc0000000), hexToF64(0x3feccccc,0xe0000000)] },  // ~0.9\n      { input: [1.0, 0.0, 0.5], expected: [0.5] },\n      { input: [1.0, 0.0, 0.9], expected: [hexToF64(0x3fb99999,0x00000000), hexToF64(0x3fb9999a,0x00000000)] },  // ~0.1\n      { input: [1.0, 0.0, 1.0], expected: [0.0] },\n      { input: [1.0, 0.0, 2.0], expected: [-1.0] },\n\n      // [0.0, 10.0] cases\n      { input: [0.0, 10.0, -1.0], expected: [-10.0] },\n      { input: [0.0, 10.0, 0.0], expected: [0.0] },\n      { input: [0.0, 10.0, 0.1], expected: [hexToF64(0x3fefffff,0xe0000000), hexToF64(0x3ff00000,0x20000000)] },  // ~1\n      { input: [0.0, 10.0, 0.5], expected: [5.0] },\n      { input: [0.0, 10.0, 0.9], expected: [hexToF64(0x4021ffff,0xe0000000), hexToF64(0x40220000,0x20000000)] },  // ~9\n      { input: [0.0, 10.0, 1.0], expected: [10.0] },\n      { input: [0.0, 10.0, 2.0], expected: [20.0] },\n\n      // [2.0, 10.0] cases\n      { input: [2.0, 10.0, -1.0], expected: [-6.0] },\n      { input: [2.0, 10.0, 0.0], expected: [2.0] },\n      { input: [2.0, 10.0, 0.1], expected: [hexToF64(0x40066666,0x40000000), hexToF64(0x40066666,0x80000000)] },  // ~2.8\n      { input: [2.0, 10.0, 0.5], expected: [6.0] },\n      { input: [2.0, 10.0, 0.9], expected: [hexToF64(0x40226666,0x40000000), hexToF64(0x40226666,0xa0000000)] },  // ~9.2\n      { input: [2.0, 10.0, 1.0], expected: [10.0] },\n      { input: [2.0, 10.0, 2.0], expected: [18.0] },\n\n      // [-1.0, 1.0] cases\n      { input: [-1.0, 1.0, -2.0], expected: [-5.0] },\n      { input: [-1.0, 1.0, 0.0], expected: [-1.0] },\n      { input: [-1.0, 1.0, 0.1], expected: [hexToF64(0xbfe99999,0xc0000000), hexToF64(0xbfe99999,0x80000000)] },  // ~-0.8\n      { input: [-1.0, 1.0, 0.5], expected: [0.0] },\n      { input: [-1.0, 1.0, 0.9], expected: [hexToF64(0x3fe99999,0x80000000), hexToF64(0x3fe99999,0xc0000000)] },  // ~0.8\n      { input: [-1.0, 1.0, 1.0], expected: [1.0] },\n      { input: [-1.0, 1.0, 2.0], expected: [3.0] },\n\n      // Infinities\n      { input: [0.0, kValue.f32.infinity.positive, 0.5], expected: kAny },\n      { input: [kValue.f32.infinity.positive, 0.0, 0.5], expected: kAny },\n      { input: [kValue.f32.infinity.negative, 1.0, 0.5], expected: kAny },\n      { input: [1.0, kValue.f32.infinity.negative, 0.5], expected: kAny },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.positive, 0.5], expected: kAny },\n      { input: [kValue.f32.infinity.positive, kValue.f32.infinity.negative, 0.5], expected: kAny },\n      { input: [0.0, 1.0, kValue.f32.infinity.negative], expected: kAny },\n      { input: [1.0, 0.0, kValue.f32.infinity.negative], expected: kAny },\n      { input: [0.0, 1.0, kValue.f32.infinity.positive], expected: kAny },\n      { input: [1.0, 0.0, kValue.f32.infinity.positive], expected: kAny },\n\n      // Showing how precise and imprecise versions diff\n      { input: [kValue.f32.negative.min, 10.0, 1.0], expected: [10.0]},\n    ]\n  )\n  .fn(t => {\n    const [x, y, z] = t.params.input;\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = mixPreciseInterval(x, y, z);\n    t.expect(\n      objectEquals(expected, got),\n      `mixPreciseInterval(${x}, ${y}, ${z}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('smoothStepInterval')\n  .paramsSubcasesOnly<TernaryToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult to express in a closed human readable\n      // form due to the inherited nature of the errors.\n      // Normals\n      { input: [0, 1, 0], expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: [0, 1, 1], expected: [hexToF32(0x3f7ffffa), hexToF32(0x3f800003)] },  // ~1\n      { input: [0, 1, 10], expected: [1] },\n      { input: [0, 1, -10], expected: [0] },\n      { input: [0, 2, 1], expected: [hexToF32(0x3efffff8), hexToF32(0x3f000007)] },  // ~0.5\n      { input: [0, 2, 0.5], expected: [hexToF32(0x3e1ffffb), hexToF32(0x3e200007)] },  // ~0.15625...\n      { input: [2, 0, 1], expected: [hexToF32(0x3efffff8), hexToF32(0x3f000007)] },  // ~0.5\n      { input: [2, 0, 1.5], expected: [hexToF32(0x3e1ffffb), hexToF32(0x3e200007)] },  // ~0.15625...\n      { input: [0, 100, 50], expected: [hexToF32(0x3efffff8), hexToF32(0x3f000007)] },  // ~0.5\n      { input: [0, 100, 25], expected: [hexToF32(0x3e1ffffb), hexToF32(0x3e200007)] },  // ~0.15625...\n      { input: [0, -2, -1], expected: [hexToF32(0x3efffff8), hexToF32(0x3f000007)] },  // ~0.5\n      { input: [0, -2, -0.5], expected: [hexToF32(0x3e1ffffb), hexToF32(0x3e200007)] },  // ~0.15625...\n\n      // Subnormals\n      { input: [0, 2, kValue.f32.subnormal.positive.max], expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: [0, 2, kValue.f32.subnormal.positive.min], expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: [0, 2, kValue.f32.subnormal.negative.max], expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: [0, 2, kValue.f32.subnormal.negative.min], expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: [kValue.f32.subnormal.positive.max, 2, 1], expected: [hexToF32(0x3efffff8), hexToF32(0x3f000007)] },  // ~0.5\n      { input: [kValue.f32.subnormal.positive.min, 2, 1], expected: [hexToF32(0x3efffff8), hexToF32(0x3f000007)] },  // ~0.5\n      { input: [kValue.f32.subnormal.negative.max, 2, 1], expected: [hexToF32(0x3efffff8), hexToF32(0x3f000007)] },  // ~0.5\n      { input: [kValue.f32.subnormal.negative.min, 2, 1], expected: [hexToF32(0x3efffff8), hexToF32(0x3f000007)] },  // ~0.5\n      { input: [0, kValue.f32.subnormal.positive.max, 1], expected: kAny },\n      { input: [0, kValue.f32.subnormal.positive.min, 1], expected: kAny },\n      { input: [0, kValue.f32.subnormal.negative.max, 1], expected: kAny },\n      { input: [0, kValue.f32.subnormal.negative.min, 1], expected: kAny },\n\n      // Infinities\n      { input: [0, 2, Number.POSITIVE_INFINITY], expected: kAny },\n      { input: [0, 2, Number.NEGATIVE_INFINITY], expected: kAny },\n      { input: [Number.POSITIVE_INFINITY, 2, 1], expected: kAny },\n      { input: [Number.NEGATIVE_INFINITY, 2, 1], expected: kAny },\n      { input: [0, Number.POSITIVE_INFINITY, 1], expected: kAny },\n      { input: [0, Number.NEGATIVE_INFINITY, 1], expected: kAny },\n    ]\n  )\n  .fn(t => {\n    const [low, high, x] = t.params.input;\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = smoothStepInterval(low, high, x);\n    t.expect(\n      objectEquals(expected, got),\n      `smoothStepInterval(${low}, ${high}, ${x}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ninterface PointToVectorCase {\n  input: number;\n  expected: IntervalBounds[];\n}\n\n// Scope for unpack* tests so that they can have constants for magic numbers\n// that don't pollute the global namespace or have unwieldy long names.\n{\n  const kZeroBounds: IntervalBounds = [hexToF32(0x81200000), hexToF32(0x01200000)];\n  const kOneBoundsSnorm: IntervalBounds = [\n    hexToF64(0x3fefffff, 0xa0000000),\n    hexToF64(0x3ff00000, 0x40000000),\n  ];\n  const kOneBoundsUnorm: IntervalBounds = [\n    hexToF64(0x3fefffff, 0xb0000000),\n    hexToF64(0x3ff00000, 0x28000000),\n  ];\n  const kNegOneBoundsSnorm: IntervalBounds = [\n    hexToF64(0xbff00000, 0x00000000),\n    hexToF64(0xbfefffff, 0xa0000000),\n  ];\n\n  const kHalfBounds2x16snorm: IntervalBounds = [\n    hexToF64(0x3fe0001f, 0xa0000000),\n    hexToF64(0x3fe00020, 0x80000000),\n  ]; // ~0.5..., due to lack of precision in i16\n  const kNegHalfBounds2x16snorm: IntervalBounds = [\n    hexToF64(0xbfdfffc0, 0x60000000),\n    hexToF64(0xbfdfffbf, 0x80000000),\n  ]; // ~-0.5..., due to lack of precision in i16\n\n  g.test('unpack2x16snormInterval')\n    .paramsSubcasesOnly<PointToVectorCase>(\n      // prettier-ignore\n      [\n        // Some of these are hard coded, since the error intervals are difficult to express in a closed human readable\n        // form due to the inherited nature of the errors.\n        { input: 0x00000000, expected: [kZeroBounds, kZeroBounds] },\n        { input: 0x00007fff, expected: [kOneBoundsSnorm, kZeroBounds] },\n        { input: 0x7fff0000, expected: [kZeroBounds, kOneBoundsSnorm] },\n        { input: 0x7fff7fff, expected: [kOneBoundsSnorm, kOneBoundsSnorm] },\n        { input: 0x80018001, expected: [kNegOneBoundsSnorm, kNegOneBoundsSnorm] },\n        { input: 0x40004000, expected: [kHalfBounds2x16snorm, kHalfBounds2x16snorm] },\n        { input: 0xc001c001, expected: [kNegHalfBounds2x16snorm, kNegHalfBounds2x16snorm] },\n      ]\n    )\n    .fn(t => {\n      const expected = toF32Vector(t.params.expected);\n\n      const got = unpack2x16snormInterval(t.params.input);\n\n      t.expect(\n        objectEquals(expected, got),\n        `unpack2x16snormInterval(${t.params.input}) returned [${got}]. Expected [${expected}]`\n      );\n    });\n\n  g.test('unpack2x16floatInterval')\n    .paramsSubcasesOnly<PointToVectorCase>(\n      // prettier-ignore\n      [\n        // Some of these are hard coded, since the error intervals are difficult to express in a closed human readable\n        // form due to the inherited nature of the errors.\n        // f16 normals\n        { input: 0x00000000, expected: [[0], [0]] },\n        { input: 0x80000000, expected: [[0], [0]] },\n        { input: 0x00008000, expected: [[0], [0]] },\n        { input: 0x80008000, expected: [[0], [0]] },\n        { input: 0x00003c00, expected: [[1], [0]] },\n        { input: 0x3c000000, expected: [[0], [1]] },\n        { input: 0x3c003c00, expected: [[1], [1]] },\n        { input: 0xbc00bc00, expected: [[-1], [-1]] },\n        { input: 0x49004900, expected: [[10], [10]] },\n        { input: 0xc900c900, expected: [[-10], [-10]] },\n\n        // f16 subnormals\n        { input: 0x000003ff, expected: [[0, kValue.f16.subnormal.positive.max], [0]] },\n        { input: 0x000083ff, expected: [[kValue.f16.subnormal.negative.min, 0], [0]] },\n\n        // f16 out of bounds\n        { input: 0x7c000000, expected: [kAny, kAny] },\n        { input: 0xffff0000, expected: [kAny, kAny] },\n      ]\n    )\n    .fn(t => {\n      const expected = toF32Vector(t.params.expected);\n\n      const got = unpack2x16floatInterval(t.params.input);\n\n      t.expect(\n        objectEquals(expected, got),\n        `unpack2x16floatInterval(${t.params.input}) returned [${got}]. Expected [${expected}]`\n      );\n    });\n\n  const kHalfBounds2x16unorm: IntervalBounds = [\n    hexToF64(0x3fe0000f, 0xb0000000),\n    hexToF64(0x3fe00010, 0x70000000),\n  ]; // ~0.5..., due to lack of precision in u16\n\n  g.test('unpack2x16unormInterval')\n    .paramsSubcasesOnly<PointToVectorCase>(\n      // prettier-ignore\n      [\n      // Some of these are hard coded, since the error intervals are difficult to express in a closed human readable\n      // form due to the inherited nature of the errors.\n      { input: 0x00000000, expected: [kZeroBounds, kZeroBounds] },\n      { input: 0x0000ffff, expected: [kOneBoundsUnorm, kZeroBounds] },\n      { input: 0xffff0000, expected: [kZeroBounds, kOneBoundsUnorm] },\n      { input: 0xffffffff, expected: [kOneBoundsUnorm, kOneBoundsUnorm] },\n      { input: 0x80008000, expected: [kHalfBounds2x16unorm, kHalfBounds2x16unorm] },\n    ]\n    )\n    .fn(t => {\n      const expected = toF32Vector(t.params.expected);\n\n      const got = unpack2x16unormInterval(t.params.input);\n\n      t.expect(\n        objectEquals(expected, got),\n        `unpack2x16unormInterval(${t.params.input}) returned [${got}]. Expected [${expected}]`\n      );\n    });\n\n  const kHalfBounds4x8snorm: IntervalBounds = [\n    hexToF64(0x3fe02040, 0x20000000),\n    hexToF64(0x3fe02041, 0x00000000),\n  ]; // ~0.50196..., due to lack of precision in i8\n  const kNegHalfBounds4x8snorm: IntervalBounds = [\n    hexToF64(0xbfdfbf7f, 0x60000000),\n    hexToF64(0xbfdfbf7e, 0x80000000),\n  ]; // ~-0.49606..., due to lack of precision in i8\n\n  g.test('unpack4x8snormInterval')\n    .paramsSubcasesOnly<PointToVectorCase>(\n      // prettier-ignore\n      [\n        // Some of these are hard coded, since the error intervals are difficult to express in a closed human readable\n        // form due to the inherited nature of the errors.\n        { input: 0x00000000, expected: [kZeroBounds, kZeroBounds, kZeroBounds, kZeroBounds] },\n        { input: 0x0000007f, expected: [kOneBoundsSnorm, kZeroBounds, kZeroBounds, kZeroBounds] },\n        { input: 0x00007f00, expected: [kZeroBounds, kOneBoundsSnorm, kZeroBounds, kZeroBounds] },\n        { input: 0x007f0000, expected: [kZeroBounds, kZeroBounds, kOneBoundsSnorm, kZeroBounds] },\n        { input: 0x7f000000, expected: [kZeroBounds, kZeroBounds, kZeroBounds, kOneBoundsSnorm] },\n        { input: 0x00007f7f, expected: [kOneBoundsSnorm, kOneBoundsSnorm, kZeroBounds, kZeroBounds] },\n        { input: 0x7f7f0000, expected: [kZeroBounds, kZeroBounds, kOneBoundsSnorm, kOneBoundsSnorm] },\n        { input: 0x7f007f00, expected: [kZeroBounds, kOneBoundsSnorm, kZeroBounds, kOneBoundsSnorm] },\n        { input: 0x007f007f, expected: [kOneBoundsSnorm, kZeroBounds, kOneBoundsSnorm, kZeroBounds] },\n        { input: 0x7f7f7f7f, expected: [kOneBoundsSnorm, kOneBoundsSnorm, kOneBoundsSnorm, kOneBoundsSnorm] },\n        { input: 0x81818181, expected: [kNegOneBoundsSnorm, kNegOneBoundsSnorm, kNegOneBoundsSnorm, kNegOneBoundsSnorm] },\n        { input: 0x40404040, expected: [kHalfBounds4x8snorm, kHalfBounds4x8snorm, kHalfBounds4x8snorm, kHalfBounds4x8snorm] },\n        { input: 0xc1c1c1c1, expected: [kNegHalfBounds4x8snorm, kNegHalfBounds4x8snorm, kNegHalfBounds4x8snorm, kNegHalfBounds4x8snorm] },\n      ]\n    )\n    .fn(t => {\n      const expected = toF32Vector(t.params.expected);\n\n      const got = unpack4x8snormInterval(t.params.input);\n\n      t.expect(\n        objectEquals(expected, got),\n        `unpack4x8snormInterval(${t.params.input}) returned [${got}]. Expected [${expected}]`\n      );\n    });\n\n  const kHalfBounds4x8unorm: IntervalBounds = [\n    hexToF64(0x3fe0100f, 0xb0000000),\n    hexToF64(0x3fe01010, 0x70000000),\n  ]; // ~0.50196..., due to lack of precision in u8\n\n  g.test('unpack4x8unormInterval')\n    .paramsSubcasesOnly<PointToVectorCase>(\n      // prettier-ignore\n      [\n        // Some of these are hard coded, since the error intervals are difficult to express in a closed human readable\n        // form due to the inherited nature of the errors.\n        { input: 0x00000000, expected: [kZeroBounds, kZeroBounds, kZeroBounds, kZeroBounds] },\n        { input: 0x000000ff, expected: [kOneBoundsUnorm, kZeroBounds, kZeroBounds, kZeroBounds] },\n        { input: 0x0000ff00, expected: [kZeroBounds, kOneBoundsUnorm, kZeroBounds, kZeroBounds] },\n        { input: 0x00ff0000, expected: [kZeroBounds, kZeroBounds, kOneBoundsUnorm, kZeroBounds] },\n        { input: 0xff000000, expected: [kZeroBounds, kZeroBounds, kZeroBounds, kOneBoundsUnorm] },\n        { input: 0x0000ffff, expected: [kOneBoundsUnorm, kOneBoundsUnorm, kZeroBounds, kZeroBounds] },\n        { input: 0xffff0000, expected: [kZeroBounds, kZeroBounds, kOneBoundsUnorm, kOneBoundsUnorm] },\n        { input: 0xff00ff00, expected: [kZeroBounds, kOneBoundsUnorm, kZeroBounds, kOneBoundsUnorm] },\n        { input: 0x00ff00ff, expected: [kOneBoundsUnorm, kZeroBounds, kOneBoundsUnorm, kZeroBounds] },\n        { input: 0xffffffff, expected: [kOneBoundsUnorm, kOneBoundsUnorm, kOneBoundsUnorm, kOneBoundsUnorm] },\n        { input: 0x80808080, expected: [kHalfBounds4x8unorm, kHalfBounds4x8unorm, kHalfBounds4x8unorm, kHalfBounds4x8unorm] },\n      ]\n    )\n    .fn(t => {\n      const expected = toF32Vector(t.params.expected);\n\n      const got = unpack4x8unormInterval(t.params.input);\n\n      t.expect(\n        objectEquals(expected, got),\n        `unpack4x8unormInterval(${t.params.input}) returned [${got}]. Expected [${expected}]`\n      );\n    });\n}\n\ninterface VectorToIntervalCase {\n  input: number[];\n  expected: IntervalBounds;\n}\n\ng.test('lengthIntervalVector')\n  .paramsSubcasesOnly<VectorToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult to express in a closed human readable\n      // form due to the inherited nature of the errors.\n      // vec2\n      {input: [1.0, 0.0], expected: [hexToF64(0x3fefffff, 0x70000000), hexToF64(0x3ff00000, 0x90000000)] },  // ~1\n      {input: [0.0, 1.0], expected: [hexToF64(0x3fefffff, 0x70000000), hexToF64(0x3ff00000, 0x90000000)] },  // ~1\n      {input: [1.0, 1.0], expected: [hexToF64(0x3ff6a09d, 0xb0000000), hexToF64(0x3ff6a09f, 0x10000000)] },  // ~√2\n      {input: [-1.0, -1.0], expected: [hexToF64(0x3ff6a09d, 0xb0000000), hexToF64(0x3ff6a09f, 0x10000000)] },  // ~√2\n      {input: [-1.0, 1.0], expected: [hexToF64(0x3ff6a09d, 0xb0000000), hexToF64(0x3ff6a09f, 0x10000000)] },  // ~√2\n      {input: [0.1, 0.0], expected: [hexToF64(0x3fb99998, 0x90000000), hexToF64(0x3fb9999a, 0x70000000)] },  // ~0.1\n\n      // vec3\n      {input: [1.0, 0.0, 0.0], expected: [hexToF64(0x3fefffff, 0x70000000), hexToF64(0x3ff00000, 0x90000000)] },  // ~1\n      {input: [0.0, 1.0, 0.0], expected: [hexToF64(0x3fefffff, 0x70000000), hexToF64(0x3ff00000, 0x90000000)] },  // ~1\n      {input: [0.0, 0.0, 1.0], expected: [hexToF64(0x3fefffff, 0x70000000), hexToF64(0x3ff00000, 0x90000000)] },  // ~1\n      {input: [1.0, 1.0, 1.0], expected: [hexToF64(0x3ffbb67a, 0x10000000), hexToF64(0x3ffbb67b, 0xb0000000)] },  // ~√3\n      {input: [-1.0, -1.0, -1.0], expected: [hexToF64(0x3ffbb67a, 0x10000000), hexToF64(0x3ffbb67b, 0xb0000000)] },  // ~√3\n      {input: [1.0, -1.0, -1.0], expected: [hexToF64(0x3ffbb67a, 0x10000000), hexToF64(0x3ffbb67b, 0xb0000000)] },  // ~√3\n      {input: [0.1, 0.0, 0.0], expected: [hexToF64(0x3fb99998, 0x90000000), hexToF64(0x3fb9999a, 0x70000000)] },  // ~0.1\n\n      // vec4\n      {input: [1.0, 0.0, 0.0, 0.0], expected: [hexToF64(0x3fefffff, 0x70000000), hexToF64(0x3ff00000, 0x90000000)] },  // ~1\n      {input: [0.0, 1.0, 0.0, 0.0], expected: [hexToF64(0x3fefffff, 0x70000000), hexToF64(0x3ff00000, 0x90000000)] },  // ~1\n      {input: [0.0, 0.0, 1.0, 0.0], expected: [hexToF64(0x3fefffff, 0x70000000), hexToF64(0x3ff00000, 0x90000000)] },  // ~1\n      {input: [0.0, 0.0, 0.0, 1.0], expected: [hexToF64(0x3fefffff, 0x70000000), hexToF64(0x3ff00000, 0x90000000)] },  // ~1\n      {input: [1.0, 1.0, 1.0, 1.0], expected: [hexToF64(0x3fffffff, 0x70000000), hexToF64(0x40000000, 0x90000000)] },  // ~2\n      {input: [-1.0, -1.0, -1.0, -1.0], expected: [hexToF64(0x3fffffff, 0x70000000), hexToF64(0x40000000, 0x90000000)] },  // ~2\n      {input: [-1.0, 1.0, -1.0, 1.0], expected: [hexToF64(0x3fffffff, 0x70000000), hexToF64(0x40000000, 0x90000000)] },  // ~2\n      {input: [0.1, 0.0, 0.0, 0.0], expected: [hexToF64(0x3fb99998, 0x90000000), hexToF64(0x3fb9999a, 0x70000000)] },  // ~0.1\n    ]\n  )\n  .fn(t => {\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = lengthInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `lengthInterval([${t.params.input}]) returned ${got}. Expected ${expected}`\n    );\n  });\n\ninterface VectorPairToIntervalCase {\n  input: [number[], number[]];\n  expected: IntervalBounds;\n}\n\ng.test('distanceIntervalVector')\n  .paramsSubcasesOnly<VectorPairToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult\n      // to express in a closed human readable form due to the inherited nature\n      // of the errors.\n      //\n      // distance(x, y), where x - y = 0 has an acceptance interval of kAny,\n      // because distance(x, y) = length(x - y), and length(0) = kAny\n\n      // vec2\n      { input: [[1.0, 0.0], [1.0, 0.0]], expected: kAny },\n      { input: [[1.0, 0.0], [0.0, 0.0]], expected: [hexToF64(0x3fefffff, 0x70000000), hexToF64(0x3ff00000, 0x90000000)] },  // ~1\n      { input: [[0.0, 0.0], [1.0, 0.0]], expected: [hexToF64(0x3fefffff, 0x70000000), hexToF64(0x3ff00000, 0x90000000)] },  // ~1\n      { input: [[-1.0, 0.0], [0.0, 0.0]], expected: [hexToF64(0x3fefffff, 0x70000000), hexToF64(0x3ff00000, 0x90000000)] },  // ~1\n      { input: [[0.0, 0.0], [-1.0, 0.0]], expected: [hexToF64(0x3fefffff, 0x70000000), hexToF64(0x3ff00000, 0x90000000)] },  // ~1\n      { input: [[0.0, 1.0], [-1.0, 0.0]], expected: [hexToF64(0x3ff6a09d, 0xb0000000), hexToF64(0x3ff6a09f, 0x10000000)] },  // ~√2\n      { input: [[0.1, 0.0], [0.0, 0.0]], expected: [hexToF64(0x3fb99998, 0x90000000), hexToF64(0x3fb9999a, 0x70000000)] },  // ~0.1\n\n      // vec3\n      { input: [[1.0, 0.0, 0.0], [1.0, 0.0, 0.0]], expected: kAny },\n      { input: [[1.0, 0.0, 0.0], [0.0, 0.0, 0.0]], expected: [hexToF64(0x3fefffff, 0x70000000), hexToF64(0x3ff00000, 0x90000000)] },  // ~1\n      { input: [[0.0, 1.0, 0.0], [0.0, 0.0, 0.0]], expected: [hexToF64(0x3fefffff, 0x70000000), hexToF64(0x3ff00000, 0x90000000)] },  // ~1\n      { input: [[0.0, 0.0, 1.0], [0.0, 0.0, 0.0]], expected: [hexToF64(0x3fefffff, 0x70000000), hexToF64(0x3ff00000, 0x90000000)] },  // ~1\n      { input: [[0.0, 0.0, 0.0], [1.0, 0.0, 0.0]], expected: [hexToF64(0x3fefffff, 0x70000000), hexToF64(0x3ff00000, 0x90000000)] },  // ~1\n      { input: [[0.0, 0.0, 0.0], [0.0, 1.0, 0.0]], expected: [hexToF64(0x3fefffff, 0x70000000), hexToF64(0x3ff00000, 0x90000000)] },  // ~1\n      { input: [[0.0, 0.0, 0.0], [0.0, 0.0, 1.0]], expected: [hexToF64(0x3fefffff, 0x70000000), hexToF64(0x3ff00000, 0x90000000)] },  // ~1\n      { input: [[1.0, 1.0, 1.0], [0.0, 0.0, 0.0]], expected: [hexToF64(0x3ffbb67a, 0x10000000), hexToF64(0x3ffbb67b, 0xb0000000)] },  // ~√3\n      { input: [[0.0, 0.0, 0.0], [1.0, 1.0, 1.0]], expected: [hexToF64(0x3ffbb67a, 0x10000000), hexToF64(0x3ffbb67b, 0xb0000000)] },  // ~√3\n      { input: [[-1.0, -1.0, -1.0], [0.0, 0.0, 0.0]], expected: [hexToF64(0x3ffbb67a, 0x10000000), hexToF64(0x3ffbb67b, 0xb0000000)] },  // ~√3\n      { input: [[0.0, 0.0, 0.0], [-1.0, -1.0, -1.0]], expected: [hexToF64(0x3ffbb67a, 0x10000000), hexToF64(0x3ffbb67b, 0xb0000000)] },  // ~√3\n      { input: [[0.1, 0.0, 0.0], [0.0, 0.0, 0.0]], expected: [hexToF64(0x3fb99998, 0x90000000), hexToF64(0x3fb9999a, 0x70000000)] },  // ~0.1\n      { input: [[0.0, 0.0, 0.0], [0.1, 0.0, 0.0]], expected: [hexToF64(0x3fb99998, 0x90000000), hexToF64(0x3fb9999a, 0x70000000)] },  // ~0.1\n\n      // vec4\n      { input: [[1.0, 0.0, 0.0, 0.0], [1.0, 0.0, 0.0, 0.0]], expected: kAny },\n      { input: [[1.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0]], expected: [hexToF64(0x3fefffff, 0x70000000), hexToF64(0x3ff00000, 0x90000000)] },  // ~1\n      { input: [[0.0, 1.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0]], expected: [hexToF64(0x3fefffff, 0x70000000), hexToF64(0x3ff00000, 0x90000000)] },  // ~1\n      { input: [[0.0, 0.0, 1.0, 0.0], [0.0, 0.0, 0.0, 0.0]], expected: [hexToF64(0x3fefffff, 0x70000000), hexToF64(0x3ff00000, 0x90000000)] },  // ~1\n      { input: [[0.0, 0.0, 0.0, 1.0], [0.0, 0.0, 0.0, 0.0]], expected: [hexToF64(0x3fefffff, 0x70000000), hexToF64(0x3ff00000, 0x90000000)] },  // ~1\n      { input: [[0.0, 0.0, 0.0, 0.0], [1.0, 0.0, 0.0, 0.0]], expected: [hexToF64(0x3fefffff, 0x70000000), hexToF64(0x3ff00000, 0x90000000)] },  // ~1\n      { input: [[0.0, 0.0, 0.0, 0.0], [0.0, 1.0, 0.0, 0.0]], expected: [hexToF64(0x3fefffff, 0x70000000), hexToF64(0x3ff00000, 0x90000000)] },  // ~1\n      { input: [[0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 1.0, 0.0]], expected: [hexToF64(0x3fefffff, 0x70000000), hexToF64(0x3ff00000, 0x90000000)] },  // ~1\n      { input: [[0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 1.0]], expected: [hexToF64(0x3fefffff, 0x70000000), hexToF64(0x3ff00000, 0x90000000)] },  // ~1\n      { input: [[1.0, 1.0, 1.0, 1.0], [0.0, 0.0, 0.0, 0.0]], expected: [hexToF64(0x3fffffff, 0x70000000), hexToF64(0x40000000, 0x90000000)] },  // ~2\n      { input: [[0.0, 0.0, 0.0, 0.0], [1.0, 1.0, 1.0, 1.0]], expected: [hexToF64(0x3fffffff, 0x70000000), hexToF64(0x40000000, 0x90000000)] },  // ~2\n      { input: [[-1.0, 1.0, -1.0, 1.0], [0.0, 0.0, 0.0, 0.0]], expected: [hexToF64(0x3fffffff, 0x70000000), hexToF64(0x40000000, 0x90000000)] },  // ~2\n      { input: [[0.0, 0.0, 0.0, 0.0], [1.0, -1.0, 1.0, -1.0]], expected: [hexToF64(0x3fffffff, 0x70000000), hexToF64(0x40000000, 0x90000000)] },  // ~2\n      { input: [[0.1, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0]], expected: [hexToF64(0x3fb99998, 0x90000000), hexToF64(0x3fb9999a, 0x70000000)] },  // ~0.1\n      { input: [[0.0, 0.0, 0.0, 0.0], [0.1, 0.0, 0.0, 0.0]], expected: [hexToF64(0x3fb99998, 0x90000000), hexToF64(0x3fb9999a, 0x70000000)] },  // ~0.1\n    ]\n  )\n  .fn(t => {\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = distanceInterval(...t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `distanceInterval([${t.params.input[0]}, ${t.params.input[1]}]) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('dotInterval')\n  .paramsSubcasesOnly<VectorPairToIntervalCase>(\n    // prettier-ignore\n    [\n      // vec2\n      {input: [[1.0, 0.0], [1.0, 0.0]], expected: [1.0] },\n      {input: [[0.0, 1.0], [0.0, 1.0]], expected: [1.0] },\n      {input: [[1.0, 1.0], [1.0, 1.0]], expected: [2.0] },\n      {input: [[-1.0, -1.0], [-1.0, -1.0]], expected: [2.0] },\n      {input: [[-1.0, 1.0], [1.0, -1.0]], expected: [-2.0] },\n      {input: [[0.1, 0.0], [1.0, 0.0]], expected: [hexToF64(0x3fb99999, 0x80000000), hexToF64(0x3fb99999, 0xa0000000)]},  // ~0.1\n\n      // vec3\n      {input: [[1.0, 0.0, 0.0], [1.0, 0.0, 0.0]], expected: [1.0] },\n      {input: [[0.0, 1.0, 0.0], [0.0, 1.0, 0.0]], expected: [1.0] },\n      {input: [[0.0, 0.0, 1.0], [0.0, 0.0, 1.0]], expected: [1.0] },\n      {input: [[1.0, 1.0, 1.0], [1.0, 1.0, 1.0]], expected: [3.0] },\n      {input: [[-1.0, -1.0, -1.0], [-1.0, -1.0, -1.0]], expected: [3.0] },\n      {input: [[1.0, -1.0, -1.0], [-1.0, 1.0, -1.0]], expected: [-1.0] },\n      {input: [[0.1, 0.0, 0.0], [1.0, 0.0, 0.0]], expected: [hexToF64(0x3fb99999, 0x80000000), hexToF64(0x3fb99999, 0xa0000000)]},  // ~0.1\n\n      // vec4\n      {input: [[1.0, 0.0, 0.0, 0.0], [1.0, 0.0, 0.0, 0.0]], expected: [1.0] },\n      {input: [[0.0, 1.0, 0.0, 0.0], [0.0, 1.0, 0.0, 0.0]], expected: [1.0] },\n      {input: [[0.0, 0.0, 1.0, 0.0], [0.0, 0.0, 1.0, 0.0]], expected: [1.0] },\n      {input: [[0.0, 0.0, 0.0, 1.0], [0.0, 0.0, 0.0, 1.0]], expected: [1.0] },\n      {input: [[1.0, 1.0, 1.0, 1.0], [1.0, 1.0, 1.0, 1.0]], expected: [4.0] },\n      {input: [[-1.0, -1.0, -1.0, -1.0], [-1.0, -1.0, -1.0, -1.0]], expected: [4.0] },\n      {input: [[-1.0, 1.0, -1.0, 1.0], [1.0, -1.0, 1.0, -1.0]], expected: [-4.0] },\n      {input: [[0.1, 0.0, 0.0, 0.0], [1.0, 0.0, 0.0, 0.0]], expected: [hexToF64(0x3fb99999, 0x80000000), hexToF64(0x3fb99999, 0xa0000000)]},  // ~0.1\n    ]\n  )\n  .fn(t => {\n    const [x, y] = t.params.input;\n    const expected = new F32Interval(...t.params.expected);\n\n    const got = dotInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `dotInterval([${x}], [${y}]) returned ${got}. Expected ${expected}`\n    );\n  });\n\ninterface VectorToVectorCase {\n  input: number[];\n  expected: IntervalBounds[];\n}\n\ng.test('normalizeInterval')\n  .paramsSubcasesOnly<VectorToVectorCase>(\n    // prettier-ignore\n    [\n      // vec2\n      {input: [1.0, 0.0], expected: [[hexToF64(0x3feffffe, 0x70000000), hexToF64(0x3ff00000, 0xb0000000)], [hexToF32(0x81200000), hexToF32(0x01200000)]] },  // [ ~1.0, ~0.0]\n      {input: [0.0, 1.0], expected: [[hexToF32(0x81200000), hexToF32(0x01200000)], [hexToF64(0x3feffffe, 0x70000000), hexToF64(0x3ff00000, 0xb0000000)]] },  // [ ~0.0, ~1.0]\n      {input: [-1.0, 0.0], expected: [[hexToF64(0xbff00000, 0xb0000000), hexToF64(0xbfeffffe, 0x70000000)], [hexToF32(0x81200000), hexToF32(0x01200000)]] },  // [ ~1.0, ~0.0]\n      {input: [1.0, 1.0], expected: [[hexToF64(0x3fe6a09d, 0x50000000), hexToF64(0x3fe6a09f, 0x90000000)], [hexToF64(0x3fe6a09d, 0x50000000), hexToF64(0x3fe6a09f, 0x90000000)]] },  // [ ~1/√2, ~1/√2]\n\n      // vec3\n      {input: [1.0, 0.0, 0.0], expected: [[hexToF64(0x3feffffe, 0x70000000), hexToF64(0x3ff00000, 0xb0000000)], [hexToF32(0x81200000), hexToF32(0x01200000)], [hexToF32(0x81200000), hexToF32(0x01200000)]] },  // [ ~1.0, ~0.0, ~0.0]\n      {input: [0.0, 1.0, 0.0], expected: [[hexToF32(0x81200000), hexToF32(0x01200000)], [hexToF64(0x3feffffe, 0x70000000), hexToF64(0x3ff00000, 0xb0000000)], [hexToF32(0x81200000), hexToF32(0x01200000)]] },  // [ ~0.0, ~1.0, ~0.0]\n      {input: [0.0, 0.0, 1.0], expected: [[hexToF32(0x81200000), hexToF32(0x01200000)], [hexToF32(0x81200000), hexToF32(0x01200000)], [hexToF64(0x3feffffe, 0x70000000), hexToF64(0x3ff00000, 0xb0000000)]] },  // [ ~0.0, ~0.0, ~1.0]\n      {input: [-1.0, 0.0, 0.0], expected: [[hexToF64(0xbff00000, 0xb0000000), hexToF64(0xbfeffffe, 0x70000000)], [hexToF32(0x81200000), hexToF32(0x01200000)], [hexToF32(0x81200000), hexToF32(0x01200000)]] },  // [ ~1.0, ~0.0, ~0.0]\n      {input: [1.0, 1.0, 1.0], expected: [[hexToF64(0x3fe279a6, 0x50000000), hexToF64(0x3fe279a8, 0x50000000)], [hexToF64(0x3fe279a6, 0x50000000), hexToF64(0x3fe279a8, 0x50000000)], [hexToF64(0x3fe279a6, 0x50000000), hexToF64(0x3fe279a8, 0x50000000)]] },  // [ ~1/√3, ~1/√3, ~1/√3]\n\n      // vec4\n      {input: [1.0, 0.0, 0.0, 0.0], expected: [[hexToF64(0x3feffffe, 0x70000000), hexToF64(0x3ff00000, 0xb0000000)], [hexToF32(0x81200000), hexToF32(0x01200000)], [hexToF32(0x81200000), hexToF32(0x01200000)], [hexToF32(0x81200000), hexToF32(0x01200000)]] },  // [ ~1.0, ~0.0, ~0.0, ~0.0]\n      {input: [0.0, 1.0, 0.0, 0.0], expected: [[hexToF32(0x81200000), hexToF32(0x01200000)], [hexToF64(0x3feffffe, 0x70000000), hexToF64(0x3ff00000, 0xb0000000)], [hexToF32(0x81200000), hexToF32(0x01200000)], [hexToF32(0x81200000), hexToF32(0x01200000)]] },  // [ ~0.0, ~1.0, ~0.0, ~0.0]\n      {input: [0.0, 0.0, 1.0, 0.0], expected: [[hexToF32(0x81200000), hexToF32(0x01200000)], [hexToF32(0x81200000), hexToF32(0x01200000)], [hexToF64(0x3feffffe, 0x70000000), hexToF64(0x3ff00000, 0xb0000000)], [hexToF32(0x81200000), hexToF32(0x01200000)]] },  // [ ~0.0, ~0.0, ~1.0, ~0.0]\n      {input: [0.0, 0.0, 0.0, 1.0], expected: [[hexToF32(0x81200000), hexToF32(0x01200000)], [hexToF32(0x81200000), hexToF32(0x01200000)], [hexToF32(0x81200000), hexToF32(0x01200000)], [hexToF64(0x3feffffe, 0x70000000), hexToF64(0x3ff00000, 0xb0000000)]] },  // [ ~0.0, ~0.0, ~0.0, ~1.0]\n      {input: [-1.0, 0.0, 0.0, 0.0], expected: [[hexToF64(0xbff00000, 0xb0000000), hexToF64(0xbfeffffe, 0x70000000)], [hexToF32(0x81200000), hexToF32(0x01200000)], [hexToF32(0x81200000), hexToF32(0x01200000)], [hexToF32(0x81200000), hexToF32(0x01200000)]] },  // [ ~1.0, ~0.0, ~0.0, ~0.0]\n      {input: [1.0, 1.0, 1.0, 1.0], expected: [[hexToF64(0x3fdffffe, 0x70000000), hexToF64(0x3fe00000, 0xb0000000)], [hexToF64(0x3fdffffe, 0x70000000), hexToF64(0x3fe00000, 0xb0000000)], [hexToF64(0x3fdffffe, 0x70000000), hexToF64(0x3fe00000, 0xb0000000)], [hexToF64(0x3fdffffe, 0x70000000), hexToF64(0x3fe00000, 0xb0000000)]] },  // [ ~1/√4, ~1/√4, ~1/√4]\n    ]\n  )\n  .fn(t => {\n    const x = t.params.input;\n    const expected = t.params.expected.map(e => new F32Interval(...e));\n\n    const got = normalizeInterval(x);\n    t.expect(\n      objectEquals(expected, got),\n      `normalizeInterval([${x}]) returned ${got}. Expected ${expected}`\n    );\n  });\n\ninterface VectorPairToVectorCase {\n  input: [number[], number[]];\n  expected: IntervalBounds[];\n}\n\ng.test('crossInterval')\n  .paramsSubcasesOnly<VectorPairToVectorCase>(\n    // prettier-ignore\n    [\n      // parallel vectors, AXB == 0\n      { input: [[1.0, 0.0, 0.0], [1.0, 0.0, 0.0]], expected: [[0.0], [0.0], [0.0]] },\n      { input: [[0.0, 1.0, 0.0], [0.0, 1.0, 0.0]], expected: [[0.0], [0.0], [0.0]] },\n      { input: [[0.0, 0.0, 1.0], [0.0, 0.0, 1.0]], expected: [[0.0], [0.0], [0.0]] },\n      { input: [[1.0, 1.0, 1.0], [1.0, 1.0, 1.0]], expected: [[0.0], [0.0], [0.0]] },\n      { input: [[-1.0, -1.0, -1.0], [-1.0, -1.0, -1.0]], expected: [[0.0], [0.0], [0.0]] },\n      { input: [[0.1, 0.0, 0.0], [1.0, 0.0, 0.0]], expected: [[0.0], [0.0], [0.0]] },\n      { input: [[kValue.f32.subnormal.positive.max, 0.0, 0.0], [1.0, 0.0, 0.0]], expected: [[0.0], [0.0], [0.0]] },\n\n      // non-parallel vectors, AXB != 0\n      // f32 normals\n      { input: [[1.0, -1.0, -1.0], [-1.0, 1.0, -1.0]], expected: [[2.0], [2.0], [0.0]] },\n      { input: [[1.0, 2, 3], [1.0, 5.0, 7.0]], expected: [[-1], [-4], [3]] },\n\n      // f64 normals\n      { input: [[0.1, -0.1, -0.1], [-0.1, 0.1, -0.1]],\n        expected: [[hexToF32(0x3ca3d708), hexToF32(0x3ca3d70b)],  // ~0.02\n                   [hexToF32(0x3ca3d708), hexToF32(0x3ca3d70b)],  // ~0.02\n                   [hexToF32(0xb1400000), hexToF32(0x31400000)]] },  // ~0\n\n      // f32 subnormals\n      { input: [[kValue.f32.subnormal.positive.max, kValue.f32.subnormal.negative.max, kValue.f32.subnormal.negative.min],\n                [kValue.f32.subnormal.negative.min, kValue.f32.subnormal.positive.min, kValue.f32.subnormal.negative.max]],\n        expected: [[0.0, hexToF32(0x00000002)],  // ~0\n                   [0.0, hexToF32(0x00000002)],  // ~0\n                   [hexToF32(0x80000001), hexToF32(0x00000001)]] },  // ~0\n    ]\n  )\n  .fn(t => {\n    const [x, y] = t.params.input;\n    const expected = toF32Vector(t.params.expected);\n\n    const got = crossInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `crossInterval([${x}], [${y}]) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('reflectInterval')\n  .paramsSubcasesOnly<VectorPairToVectorCase>(\n    // prettier-ignore\n    [\n      // vec2s\n      { input: [[1.0, 0.0], [1.0, 0.0]], expected: [[-1.0], [0.0]] },\n      { input: [[1.0, 0.0], [0.0, 1.0]], expected: [[1.0], [0.0]] },\n      { input: [[0.0, 1.0], [0.0, 1.0]], expected: [[0.0], [-1.0]] },\n      { input: [[0.0, 1.0], [1.0, 0.0]], expected: [[0.0], [1.0]] },\n      { input: [[1.0, 1.0], [1.0, 1.0]], expected: [[-3.0], [-3.0]] },\n      { input: [[-1.0, -1.0], [1.0, 1.0]], expected: [[3.0], [3.0]] },\n      { input: [[0.1, 0.1], [1.0, 1.0]], expected: [[hexToF32(0xbe99999a), hexToF32(0xbe999998)], [hexToF32(0xbe99999a), hexToF32(0xbe999998)]] },  // [~-0.3, ~-0.3]\n      { input: [[kValue.f32.subnormal.positive.max, kValue.f32.subnormal.negative.max], [1.0, 1.0]], expected: [[hexToF32(0x80fffffe), hexToF32(0x00800001)], [hexToF32(0x80ffffff), hexToF32(0x00000002)]] },  // [~0.0, ~0.0]\n\n      // vec3s\n      { input: [[1.0, 0.0, 0.0], [1.0, 0.0, 0.0]], expected: [[-1.0], [0.0], [0.0]] },\n      { input: [[0.0, 1.0, 0.0], [1.0, 0.0, 0.0]], expected: [[0.0], [1.0], [0.0]] },\n      { input: [[0.0, 0.0, 1.0], [1.0, 0.0, 0.0]], expected: [[0.0], [0.0], [1.0]] },\n      { input: [[1.0, 0.0, 0.0], [0.0, 1.0, 0.0]], expected: [[1.0], [0.0], [0.0]] },\n      { input: [[1.0, 0.0, 0.0], [0.0, 0.0, 1.0]], expected: [[1.0], [0.0], [0.0]] },\n      { input: [[1.0, 1.0, 1.0], [1.0, 1.0, 1.0]], expected: [[-5.0], [-5.0], [-5.0]] },\n      { input: [[-1.0, -1.0, -1.0], [1.0, 1.0, 1.0]], expected: [[5.0], [5.0], [5.0]] },\n      { input: [[0.1, 0.1, 0.1], [1.0, 1.0, 1.0]], expected: [[hexToF32(0xbf000001), hexToF32(0xbefffffe)], [hexToF32(0xbf000001), hexToF32(0xbefffffe)], [hexToF32(0xbf000001), hexToF32(0xbefffffe)]] },  // [~-0.5, ~-0.5, ~-0.5]\n      { input: [[kValue.f32.subnormal.positive.max, kValue.f32.subnormal.negative.max, 0.0], [1.0, 1.0, 1.0]], expected: [[hexToF32(0x80fffffe), hexToF32(0x00800001)], [hexToF32(0x80ffffff), hexToF32(0x00000002)], [hexToF32(0x80fffffe), hexToF32(0x00000002)]] },  // [~0.0, ~0.0, ~0.0]\n\n      // vec4s\n      { input: [[1.0, 0.0, 0.0, 0.0], [1.0, 0.0, 0.0, 0.0]], expected: [[-1.0], [0.0], [0.0], [0.0]] },\n      { input: [[0.0, 1.0, 0.0, 0.0], [1.0, 0.0, 0.0, 0.0]], expected: [[0.0], [1.0], [0.0], [0.0]] },\n      { input: [[0.0, 0.0, 1.0, 0.0], [1.0, 0.0, 0.0, 0.0]], expected: [[0.0], [0.0], [1.0], [0.0]] },\n      { input: [[0.0, 0.0, 0.0, 1.0], [1.0, 0.0, 0.0, 0.0]], expected: [[0.0], [0.0], [0.0], [1.0]] },\n      { input: [[1.0, 0.0, 0.0, 0.0], [0.0, 1.0, 0.0, 0.0]], expected: [[1.0], [0.0], [0.0], [0.0]] },\n      { input: [[1.0, 0.0, 0.0, 0.0], [0.0, 0.0, 1.0, 0.0]], expected: [[1.0], [0.0], [0.0], [0.0]] },\n      { input: [[1.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 1.0]], expected: [[1.0], [0.0], [0.0], [0.0]] },\n      { input: [[-1.0, -1.0, -1.0, -1.0], [1.0, 1.0, 1.0, 1.0]], expected: [[7.0], [7.0], [7.0], [7.0]] },\n      { input: [[0.1, 0.1, 0.1, 0.1], [1.0, 1.0, 1.0, 1.0]], expected: [[hexToF32(0xbf333335), hexToF32(0xbf333332)], [hexToF32(0xbf333335), hexToF32(0xbf333332)], [hexToF32(0xbf333335), hexToF32(0xbf333332)], [hexToF32(0xbf333335), hexToF32(0xbf333332)]] },  // [~-0.7, ~-0.7, ~-0.7, ~-0.7]\n      { input: [[kValue.f32.subnormal.positive.max, kValue.f32.subnormal.negative.max, 0.0, 0.0], [1.0, 1.0, 1.0, 1.0]], expected: [[hexToF32(0x80fffffe), hexToF32(0x00800001)], [hexToF32(0x80ffffff), hexToF32(0x00000002)], [hexToF32(0x80fffffe), hexToF32(0x00000002)], [hexToF32(0x80fffffe), hexToF32(0x00000002)]] },  // [~0.0, ~0.0, ~0.0, ~0.0]\n    ]\n  )\n  .fn(t => {\n    const [x, y] = t.params.input;\n    const expected = toF32Vector(t.params.expected);\n\n    const got = reflectInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `reflectInterval([${x}], [${y}]) returned ${got}. Expected ${expected}`\n    );\n  });\n\ninterface FaceForwardCase {\n  input: [number[], number[], number[]];\n  expected: IntervalBounds[][];\n}\n\ng.test('faceForwardIntervals')\n  .paramsSubcasesOnly<FaceForwardCase>(\n    // prettier-ignore\n    [\n      // vec2\n      { input: [[1.0, 0.0], [1.0, 0.0], [1.0, 0.0]], expected: [[[-1.0], [0.0]]] },\n      { input: [[-1.0, 0.0], [1.0, 0.0], [1.0, 0.0]], expected: [[[1.0], [0.0]]] },\n      { input: [[1.0, 0.0], [-1.0, 1.0], [1.0, -1.0]], expected: [[[1.0], [0.0]]] },\n      { input: [[-1.0, 0.0], [-1.0, 1.0], [1.0, -1.0]], expected: [[[-1.0], [0.0]]] },\n      { input: [[10.0, 0.0], [10.0, 0.0], [10.0, 0.0]], expected: [[[-10.0], [0.0]]] },\n      { input: [[-10.0, 0.0], [10.0, 0.0], [10.0, 0.0]], expected: [[[10.0], [0.0]]] },\n      { input: [[10.0, 0.0], [-10.0, 10.0], [10.0, -10.0]], expected: [[[10.0], [0.0]]] },\n      { input: [[-10.0, 0.0], [-10.0, 10.0], [10.0, -10.0]], expected: [[[-10.0], [0.0]]] },\n      { input: [[0.1, 0.0], [0.1, 0.0], [0.1, 0.0]], expected: [[[hexToF32(0xbdcccccd), hexToF32(0xbdcccccc)], [0.0]]] },\n      { input: [[-0.1, 0.0], [0.1, 0.0], [0.1, 0.0]], expected: [[[hexToF32(0x3dcccccc), hexToF32(0x3dcccccd)], [0.0]]] },\n      { input: [[0.1, 0.0], [-0.1, 0.1], [0.1, -0.1]], expected: [[[hexToF32(0x3dcccccc), hexToF32(0x3dcccccd)], [0.0]]] },\n      { input: [[-0.1, 0.0], [-0.1, 0.1], [0.1, -0.1]], expected: [[[hexToF32(0xbdcccccd), hexToF32(0xbdcccccc)], [0.0]]] },\n\n      // vec3\n      { input: [[1.0, 0.0, 0.0], [1.0, 0.0, 0.0], [1.0, 0.0, 0.0]], expected: [[[-1.0], [0.0], [0.0]]] },\n      { input: [[-1.0, 0.0, 0.0], [1.0, 0.0, 0.0], [1.0, 0.0, 0.0]], expected: [[[1.0], [0.0], [0.0]]] },\n      { input: [[1.0, 0.0, 0.0], [-1.0, 1.0, 0.0], [1.0, -1.0, 0.0]], expected: [[[1.0], [0.0], [0.0]]] },\n      { input: [[-1.0, 0.0, 0.0], [-1.0, 1.0, 0.0], [1.0, -1.0, 0.0]], expected: [[[-1.0], [0.0], [0.0]]] },\n      { input: [[10.0, 0.0, 0.0], [10.0, 0.0, 0.0], [10.0, 0.0, 0.0]], expected: [[[-10.0], [0.0], [0.0]]] },\n      { input: [[-10.0, 0.0, 0.0], [10.0, 0.0, 0.0], [10.0, 0.0, 0.0]], expected: [[[10.0], [0.0], [0.0]]] },\n      { input: [[10.0, 0.0, 0.0], [-10.0, 10.0, 0.0], [10.0, -10.0, 0.0]], expected: [[[10.0], [0.0], [0.0]]] },\n      { input: [[-10.0, 0.0, 0.0], [-10.0, 10.0, 0.0], [10.0, -10.0, 0.0]], expected: [[[-10.0], [0.0], [0.0]]] },\n      { input: [[0.1, 0.0, 0.0], [0.1, 0.0, 0.0], [0.1, 0.0, 0.0]], expected: [[[hexToF32(0xbdcccccd), hexToF32(0xbdcccccc)], [0.0], [0.0]]] },\n      { input: [[-0.1, 0.0, 0.0], [0.1, 0.0, 0.0], [0.1, 0.0, 0.0]], expected: [[[hexToF32(0x3dcccccc), hexToF32(0x3dcccccd)], [0.0], [0.0]]] },\n      { input: [[0.1, 0.0, 0.0], [-0.1, 0.0, 0.0], [0.1, -0.0, 0.0]], expected: [[[hexToF32(0x3dcccccc), hexToF32(0x3dcccccd)], [0.0], [0.0]]] },\n      { input: [[-0.1, 0.0, 0.0], [-0.1, 0.0, 0.0], [0.1, -0.0, 0.0]], expected: [[[hexToF32(0xbdcccccd), hexToF32(0xbdcccccc)], [0.0], [0.0]]] },\n\n      // vec4\n      { input: [[1.0, 0.0, 0.0, 0.0], [1.0, 0.0, 0.0, 0.0], [1.0, 0.0, 0.0, 0.0]], expected: [[[-1.0], [0.0], [0.0], [0.0]]] },\n      { input: [[-1.0, 0.0, 0.0, 0.0], [1.0, 0.0, 0.0, 0.0], [1.0, 0.0, 0.0, 0.0]], expected: [[[1.0], [0.0], [0.0], [0.0]]] },\n      { input: [[1.0, 0.0, 0.0, 0.0], [-1.0, 1.0, 0.0, 0.0], [1.0, -1.0, 0.0, 0.0]], expected: [[[1.0], [0.0], [0.0], [0.0]]] },\n      { input: [[-1.0, 0.0, 0.0, 0.0], [-1.0, 1.0, 0.0, 0.0], [1.0, -1.0, 0.0, 0.0]], expected: [[[-1.0], [0.0], [0.0], [0.0]]] },\n      { input: [[10.0, 0.0, 0.0, 0.0], [10.0, 0.0, 0.0, 0.0], [10.0, 0.0, 0.0, 0.0]], expected: [[[-10.0], [0.0], [0.0], [0.0]]] },\n      { input: [[-10.0, 0.0, 0.0, 0.0], [10.0, 0.0, 0.0, 0.0], [10.0, 0.0, 0.0, 0.0]], expected: [[[10.0], [0.0], [0.0], [0.0]]] },\n      { input: [[10.0, 0.0, 0.0, 0.0], [-10.0, 10.0, 0.0, 0.0], [10.0, -10.0, 0.0, 0.0]], expected: [[[10.0], [0.0], [0.0], [0.0]]] },\n      { input: [[-10.0, 0.0, 0.0, 0.0], [-10.0, 10.0, 0.0, 0.0], [10.0, -10.0, 0.0, 0.0]], expected: [[[-10.0], [0.0], [0.0], [0.0]]] },\n      { input: [[0.1, 0.0, 0.0, 0.0], [0.1, 0.0, 0.0, 0.0], [0.1, 0.0, 0.0, 0.0]], expected: [[[hexToF32(0xbdcccccd), hexToF32(0xbdcccccc)], [0.0], [0.0], [0.0]]] },\n      { input: [[-0.1, 0.0, 0.0, 0.0], [0.1, 0.0, 0.0, 0.0], [0.1, 0.0, 0.0, 0.0]], expected: [[[hexToF32(0x3dcccccc), hexToF32(0x3dcccccd)], [0.0], [0.0], [0.0]]] },\n      { input: [[0.1, 0.0, 0.0, 0.0], [-0.1, 0.0, 0.0, 0.0], [0.1, -0.0, 0.0, 0.0]], expected: [[[hexToF32(0x3dcccccc), hexToF32(0x3dcccccd)], [0.0], [0.0], [0.0]]] },\n      { input: [[-0.1, 0.0, 0.0, 0.0], [-0.1, 0.0, 0.0, 0.0], [0.1, -0.0, 0.0, 0.0]], expected: [[[hexToF32(0xbdcccccd), hexToF32(0xbdcccccc)], [0.0], [0.0], [0.0]]] },\n\n      // dot(y, z) === 0\n      { input: [[1.0, 1.0], [1.0, 0.0], [0.0, 1.0]], expected:  [[[-1.0], [-1.0]]]},\n\n      // subnormals, also dot(y, z) spans 0\n      { input: [[kValue.f32.subnormal.positive.max, 0.0], [kValue.f32.subnormal.positive.min, 0.0], [kValue.f32.subnormal.negative.min, 0.0]], expected:  [[[0.0, kValue.f32.subnormal.positive.max], [0.0]], [[kValue.f32.subnormal.negative.min, 0], [0.0]]] },\n    ]\n  )\n  .fn(t => {\n    const [x, y, z] = t.params.input;\n    const expected = t.params.expected.map(toF32Vector);\n\n    const got = faceForwardIntervals(x, y, z);\n    t.expect(\n      objectEquals(expected, got),\n      `faceForwardInterval([${x}], [${y}], [${z}]) returned [${got}]. Expected [${expected}]`\n    );\n  });\n"],"file":"f32_interval.spec.js"}